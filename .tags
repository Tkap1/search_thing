!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!DosBatch	l,label	/labels/
!_TAG_KIND_DESCRIPTION!DosBatch	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!DosBatch	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	C:/Users/34687/Desktop/Dev/C/search_thing/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20230416.0/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
APIENTRY	src/external/glcorearb.h	/^#define APIENTRY$/;"	d
APIENTRYP	src/external/glcorearb.h	/^#define APIENTRYP /;"	d
DRMP3_ACCESS_DENIED	src/external/mp3lib.h	/^#define DRMP3_ACCESS_DENIED /;"	d
DRMP3_ADDRESS_FAMILY_NOT_SUPPORTED	src/external/mp3lib.h	/^#define DRMP3_ADDRESS_FAMILY_NOT_SUPPORTED /;"	d
DRMP3_ALREADY_CONNECTED	src/external/mp3lib.h	/^#define DRMP3_ALREADY_CONNECTED /;"	d
DRMP3_ALREADY_EXISTS	src/external/mp3lib.h	/^#define DRMP3_ALREADY_EXISTS /;"	d
DRMP3_ALREADY_IN_USE	src/external/mp3lib.h	/^#define DRMP3_ALREADY_IN_USE /;"	d
DRMP3_API	src/external/mp3lib.h	/^            #define DRMP3_API /;"	d
DRMP3_API	src/external/mp3lib.h	/^        #define DRMP3_API /;"	d
DRMP3_ASSERT	src/external/mp3lib.h	/^#define DRMP3_ASSERT(/;"	d
DRMP3_AT_END	src/external/mp3lib.h	/^#define DRMP3_AT_END /;"	d
DRMP3_BAD_ADDRESS	src/external/mp3lib.h	/^#define DRMP3_BAD_ADDRESS /;"	d
DRMP3_BAD_MESSAGE	src/external/mp3lib.h	/^#define DRMP3_BAD_MESSAGE /;"	d
DRMP3_BAD_PIPE	src/external/mp3lib.h	/^#define DRMP3_BAD_PIPE /;"	d
DRMP3_BAD_PROTOCOL	src/external/mp3lib.h	/^#define DRMP3_BAD_PROTOCOL /;"	d
DRMP3_BAD_SEEK	src/external/mp3lib.h	/^#define DRMP3_BAD_SEEK /;"	d
DRMP3_BITS_DEQUANTIZER_OUT	src/external/mp3lib.h	/^#define DRMP3_BITS_DEQUANTIZER_OUT /;"	d
DRMP3_BSPOS	src/external/mp3lib.h	/^#define DRMP3_BSPOS /;"	d
DRMP3_BUSY	src/external/mp3lib.h	/^#define DRMP3_BUSY /;"	d
DRMP3_CANCELLED	src/external/mp3lib.h	/^#define DRMP3_CANCELLED /;"	d
DRMP3_CHECK_BITS	src/external/mp3lib.h	/^#define DRMP3_CHECK_BITS /;"	d
DRMP3_CLAMP	src/external/mp3lib.h	/^#define DRMP3_CLAMP(/;"	d
DRMP3_CONNECTION_REFUSED	src/external/mp3lib.h	/^#define DRMP3_CONNECTION_REFUSED /;"	d
DRMP3_CONNECTION_RESET	src/external/mp3lib.h	/^#define DRMP3_CONNECTION_RESET /;"	d
DRMP3_COPY_MEMORY	src/external/mp3lib.h	/^#define DRMP3_COPY_MEMORY(/;"	d
DRMP3_COUNTOF	src/external/mp3lib.h	/^#define DRMP3_COUNTOF(/;"	d
DRMP3_DATA_CHUNK_SIZE	src/external/mp3lib.h	/^#define DRMP3_DATA_CHUNK_SIZE /;"	d
DRMP3_DEADLOCK	src/external/mp3lib.h	/^#define DRMP3_DEADLOCK /;"	d
DRMP3_DEFAULT_RESAMPLER_LPF_ORDER	src/external/mp3lib.h	/^#define DRMP3_DEFAULT_RESAMPLER_LPF_ORDER /;"	d
DRMP3_DEQ_COUNT1	src/external/mp3lib.h	/^#define DRMP3_DEQ_COUNT1(/;"	d
DRMP3_DIRECTORY_NOT_EMPTY	src/external/mp3lib.h	/^#define DRMP3_DIRECTORY_NOT_EMPTY /;"	d
DRMP3_DLL_EXPORT	src/external/mp3lib.h	/^                #define DRMP3_DLL_EXPORT /;"	d
DRMP3_DLL_EXPORT	src/external/mp3lib.h	/^                #define DRMP3_DLL_EXPORT$/;"	d
DRMP3_DLL_EXPORT	src/external/mp3lib.h	/^            #define DRMP3_DLL_EXPORT /;"	d
DRMP3_DLL_IMPORT	src/external/mp3lib.h	/^                #define DRMP3_DLL_IMPORT /;"	d
DRMP3_DLL_IMPORT	src/external/mp3lib.h	/^                #define DRMP3_DLL_IMPORT$/;"	d
DRMP3_DLL_IMPORT	src/external/mp3lib.h	/^            #define DRMP3_DLL_IMPORT /;"	d
DRMP3_DLL_PRIVATE	src/external/mp3lib.h	/^                #define DRMP3_DLL_PRIVATE /;"	d
DRMP3_DLL_PRIVATE	src/external/mp3lib.h	/^            #define DRMP3_DLL_PRIVATE /;"	d
DRMP3_DOES_NOT_EXIST	src/external/mp3lib.h	/^#define DRMP3_DOES_NOT_EXIST /;"	d
DRMP3_DQ	src/external/mp3lib.h	/^#define DRMP3_DQ(/;"	d
DRMP3_END_OF_FILE	src/external/mp3lib.h	/^#define DRMP3_END_OF_FILE /;"	d
DRMP3_ERROR	src/external/mp3lib.h	/^#define DRMP3_ERROR /;"	d
DRMP3_FALSE	src/external/mp3lib.h	/^#define DRMP3_FALSE /;"	d
DRMP3_FLUSH_BITS	src/external/mp3lib.h	/^#define DRMP3_FLUSH_BITS(/;"	d
DRMP3_FREE	src/external/mp3lib.h	/^#define DRMP3_FREE(/;"	d
DRMP3_GNUC_INLINE_HINT	src/external/mp3lib.h	/^        #define DRMP3_GNUC_INLINE_HINT /;"	d
DRMP3_HAS_WFOPEN	src/external/mp3lib.h	/^        #define DRMP3_HAS_WFOPEN$/;"	d
DRMP3_HAVE_ARMV6	src/external/mp3lib.h	/^#define DRMP3_HAVE_ARMV6 /;"	d
DRMP3_HAVE_SIMD	src/external/mp3lib.h	/^#define DRMP3_HAVE_SIMD /;"	d
DRMP3_HAVE_SSE	src/external/mp3lib.h	/^#define DRMP3_HAVE_SSE /;"	d
DRMP3_HDR_GET_BITRATE	src/external/mp3lib.h	/^#define DRMP3_HDR_GET_BITRATE(/;"	d
DRMP3_HDR_GET_LAYER	src/external/mp3lib.h	/^#define DRMP3_HDR_GET_LAYER(/;"	d
DRMP3_HDR_GET_MY_SAMPLE_RATE	src/external/mp3lib.h	/^#define DRMP3_HDR_GET_MY_SAMPLE_RATE(/;"	d
DRMP3_HDR_GET_SAMPLE_RATE	src/external/mp3lib.h	/^#define DRMP3_HDR_GET_SAMPLE_RATE(/;"	d
DRMP3_HDR_GET_STEREO_MODE	src/external/mp3lib.h	/^#define DRMP3_HDR_GET_STEREO_MODE(/;"	d
DRMP3_HDR_GET_STEREO_MODE_EXT	src/external/mp3lib.h	/^#define DRMP3_HDR_GET_STEREO_MODE_EXT(/;"	d
DRMP3_HDR_IS_CRC	src/external/mp3lib.h	/^#define DRMP3_HDR_IS_CRC(/;"	d
DRMP3_HDR_IS_FRAME_576	src/external/mp3lib.h	/^#define DRMP3_HDR_IS_FRAME_576(/;"	d
DRMP3_HDR_IS_FREE_FORMAT	src/external/mp3lib.h	/^#define DRMP3_HDR_IS_FREE_FORMAT(/;"	d
DRMP3_HDR_IS_LAYER_1	src/external/mp3lib.h	/^#define DRMP3_HDR_IS_LAYER_1(/;"	d
DRMP3_HDR_IS_MONO	src/external/mp3lib.h	/^#define DRMP3_HDR_IS_MONO(/;"	d
DRMP3_HDR_IS_MS_STEREO	src/external/mp3lib.h	/^#define DRMP3_HDR_IS_MS_STEREO(/;"	d
DRMP3_HDR_SIZE	src/external/mp3lib.h	/^#define DRMP3_HDR_SIZE /;"	d
DRMP3_HDR_TEST_I_STEREO	src/external/mp3lib.h	/^#define DRMP3_HDR_TEST_I_STEREO(/;"	d
DRMP3_HDR_TEST_MPEG1	src/external/mp3lib.h	/^#define DRMP3_HDR_TEST_MPEG1(/;"	d
DRMP3_HDR_TEST_MS_STEREO	src/external/mp3lib.h	/^#define DRMP3_HDR_TEST_MS_STEREO(/;"	d
DRMP3_HDR_TEST_NOT_MPEG25	src/external/mp3lib.h	/^#define DRMP3_HDR_TEST_NOT_MPEG25(/;"	d
DRMP3_HDR_TEST_PADDING	src/external/mp3lib.h	/^#define DRMP3_HDR_TEST_PADDING(/;"	d
DRMP3_INLINE	src/external/mp3lib.h	/^        #define DRMP3_INLINE /;"	d
DRMP3_INLINE	src/external/mp3lib.h	/^    #define DRMP3_INLINE /;"	d
DRMP3_INLINE	src/external/mp3lib.h	/^    #define DRMP3_INLINE$/;"	d
DRMP3_INTERRUPT	src/external/mp3lib.h	/^#define DRMP3_INTERRUPT /;"	d
DRMP3_INVALID_ARGS	src/external/mp3lib.h	/^#define DRMP3_INVALID_ARGS /;"	d
DRMP3_INVALID_DATA	src/external/mp3lib.h	/^#define DRMP3_INVALID_DATA /;"	d
DRMP3_INVALID_FILE	src/external/mp3lib.h	/^#define DRMP3_INVALID_FILE /;"	d
DRMP3_INVALID_OPERATION	src/external/mp3lib.h	/^#define DRMP3_INVALID_OPERATION /;"	d
DRMP3_IN_PROGRESS	src/external/mp3lib.h	/^#define DRMP3_IN_PROGRESS /;"	d
DRMP3_IO_ERROR	src/external/mp3lib.h	/^#define DRMP3_IO_ERROR /;"	d
DRMP3_IS_DIRECTORY	src/external/mp3lib.h	/^#define DRMP3_IS_DIRECTORY /;"	d
DRMP3_MALLOC	src/external/mp3lib.h	/^#define DRMP3_MALLOC(/;"	d
DRMP3_MAX	src/external/mp3lib.h	/^#define DRMP3_MAX(/;"	d
DRMP3_MAX_BITRESERVOIR_BYTES	src/external/mp3lib.h	/^#define DRMP3_MAX_BITRESERVOIR_BYTES /;"	d
DRMP3_MAX_FRAME_SYNC_MATCHES	src/external/mp3lib.h	/^#define DRMP3_MAX_FRAME_SYNC_MATCHES /;"	d
DRMP3_MAX_FREE_FORMAT_FRAME_SIZE	src/external/mp3lib.h	/^#define DRMP3_MAX_FREE_FORMAT_FRAME_SIZE /;"	d
DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES	src/external/mp3lib.h	/^#define DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES /;"	d
DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME	src/external/mp3lib.h	/^#define DRMP3_MAX_PCM_FRAMES_PER_MP3_FRAME /;"	d
DRMP3_MAX_SAMPLES_PER_FRAME	src/external/mp3lib.h	/^#define DRMP3_MAX_SAMPLES_PER_FRAME /;"	d
DRMP3_MAX_SCF	src/external/mp3lib.h	/^#define DRMP3_MAX_SCF /;"	d
DRMP3_MAX_SCFI	src/external/mp3lib.h	/^#define DRMP3_MAX_SCFI /;"	d
DRMP3_MEMORY_ALREADY_MAPPED	src/external/mp3lib.h	/^#define DRMP3_MEMORY_ALREADY_MAPPED /;"	d
DRMP3_MIN	src/external/mp3lib.h	/^#define DRMP3_MIN(/;"	d
DRMP3_MIN_DATA_CHUNK_SIZE	src/external/mp3lib.h	/^#define DRMP3_MIN_DATA_CHUNK_SIZE /;"	d
DRMP3_MODE_JOINT_STEREO	src/external/mp3lib.h	/^#define DRMP3_MODE_JOINT_STEREO /;"	d
DRMP3_MODE_MONO	src/external/mp3lib.h	/^#define DRMP3_MODE_MONO /;"	d
DRMP3_MOVE_MEMORY	src/external/mp3lib.h	/^#define DRMP3_MOVE_MEMORY(/;"	d
DRMP3_NAME_TOO_LONG	src/external/mp3lib.h	/^#define DRMP3_NAME_TOO_LONG /;"	d
DRMP3_NOT_CONNECTED	src/external/mp3lib.h	/^#define DRMP3_NOT_CONNECTED /;"	d
DRMP3_NOT_DIRECTORY	src/external/mp3lib.h	/^#define DRMP3_NOT_DIRECTORY /;"	d
DRMP3_NOT_IMPLEMENTED	src/external/mp3lib.h	/^#define DRMP3_NOT_IMPLEMENTED /;"	d
DRMP3_NOT_SOCKET	src/external/mp3lib.h	/^#define DRMP3_NOT_SOCKET /;"	d
DRMP3_NOT_UNIQUE	src/external/mp3lib.h	/^#define DRMP3_NOT_UNIQUE /;"	d
DRMP3_NO_ADDRESS	src/external/mp3lib.h	/^#define DRMP3_NO_ADDRESS /;"	d
DRMP3_NO_DATA_AVAILABLE	src/external/mp3lib.h	/^#define DRMP3_NO_DATA_AVAILABLE /;"	d
DRMP3_NO_HOST	src/external/mp3lib.h	/^#define DRMP3_NO_HOST /;"	d
DRMP3_NO_MESSAGE	src/external/mp3lib.h	/^#define DRMP3_NO_MESSAGE /;"	d
DRMP3_NO_NETWORK	src/external/mp3lib.h	/^#define DRMP3_NO_NETWORK /;"	d
DRMP3_NO_SPACE	src/external/mp3lib.h	/^#define DRMP3_NO_SPACE /;"	d
DRMP3_OFFSET_PTR	src/external/mp3lib.h	/^#define DRMP3_OFFSET_PTR(/;"	d
DRMP3_OUT_OF_MEMORY	src/external/mp3lib.h	/^#define DRMP3_OUT_OF_MEMORY /;"	d
DRMP3_OUT_OF_RANGE	src/external/mp3lib.h	/^#define DRMP3_OUT_OF_RANGE /;"	d
DRMP3_PATH_TOO_LONG	src/external/mp3lib.h	/^#define DRMP3_PATH_TOO_LONG /;"	d
DRMP3_PEEK_BITS	src/external/mp3lib.h	/^#define DRMP3_PEEK_BITS(/;"	d
DRMP3_PI_D	src/external/mp3lib.h	/^#define DRMP3_PI_D /;"	d
DRMP3_PRIVATE	src/external/mp3lib.h	/^        #define DRMP3_PRIVATE /;"	d
DRMP3_PROTOCOL_FAMILY_NOT_SUPPORTED	src/external/mp3lib.h	/^#define DRMP3_PROTOCOL_FAMILY_NOT_SUPPORTED /;"	d
DRMP3_PROTOCOL_NOT_SUPPORTED	src/external/mp3lib.h	/^#define DRMP3_PROTOCOL_NOT_SUPPORTED /;"	d
DRMP3_PROTOCOL_UNAVAILABLE	src/external/mp3lib.h	/^#define DRMP3_PROTOCOL_UNAVAILABLE /;"	d
DRMP3_REALLOC	src/external/mp3lib.h	/^#define DRMP3_REALLOC(/;"	d
DRMP3_RELOAD_SCALEFACTOR	src/external/mp3lib.h	/^#define DRMP3_RELOAD_SCALEFACTOR /;"	d
DRMP3_SEEK_LEADING_MP3_FRAMES	src/external/mp3lib.h	/^#define DRMP3_SEEK_LEADING_MP3_FRAMES /;"	d
DRMP3_SHORT_BLOCK_TYPE	src/external/mp3lib.h	/^#define DRMP3_SHORT_BLOCK_TYPE /;"	d
DRMP3_SIZE_MAX	src/external/mp3lib.h	/^        #define DRMP3_SIZE_MAX /;"	d
DRMP3_SIZE_MAX	src/external/mp3lib.h	/^    #define DRMP3_SIZE_MAX /;"	d
DRMP3_SOCKET_NOT_SUPPORTED	src/external/mp3lib.h	/^#define DRMP3_SOCKET_NOT_SUPPORTED /;"	d
DRMP3_STOP_BLOCK_TYPE	src/external/mp3lib.h	/^#define DRMP3_STOP_BLOCK_TYPE /;"	d
DRMP3_STRINGIFY	src/external/mp3lib.h	/^#define DRMP3_STRINGIFY(/;"	d
DRMP3_SUCCESS	src/external/mp3lib.h	/^#define DRMP3_SUCCESS /;"	d
DRMP3_TIMEOUT	src/external/mp3lib.h	/^#define DRMP3_TIMEOUT /;"	d
DRMP3_TOO_BIG	src/external/mp3lib.h	/^#define DRMP3_TOO_BIG /;"	d
DRMP3_TOO_MANY_LINKS	src/external/mp3lib.h	/^#define DRMP3_TOO_MANY_LINKS /;"	d
DRMP3_TOO_MANY_OPEN_FILES	src/external/mp3lib.h	/^#define DRMP3_TOO_MANY_OPEN_FILES /;"	d
DRMP3_TRUE	src/external/mp3lib.h	/^#define DRMP3_TRUE /;"	d
DRMP3_UNAVAILABLE	src/external/mp3lib.h	/^#define DRMP3_UNAVAILABLE /;"	d
DRMP3_V0	src/external/mp3lib.h	/^#define DRMP3_V0(/;"	d
DRMP3_V1	src/external/mp3lib.h	/^#define DRMP3_V1(/;"	d
DRMP3_V2	src/external/mp3lib.h	/^#define DRMP3_V2(/;"	d
DRMP3_VADD	src/external/mp3lib.h	/^#define DRMP3_VADD /;"	d
DRMP3_VERSION_MAJOR	src/external/mp3lib.h	/^#define DRMP3_VERSION_MAJOR /;"	d
DRMP3_VERSION_MINOR	src/external/mp3lib.h	/^#define DRMP3_VERSION_MINOR /;"	d
DRMP3_VERSION_REVISION	src/external/mp3lib.h	/^#define DRMP3_VERSION_REVISION /;"	d
DRMP3_VERSION_STRING	src/external/mp3lib.h	/^#define DRMP3_VERSION_STRING /;"	d
DRMP3_VLD	src/external/mp3lib.h	/^#define DRMP3_VLD /;"	d
DRMP3_VLOAD	src/external/mp3lib.h	/^#define DRMP3_VLOAD(/;"	d
DRMP3_VMAC	src/external/mp3lib.h	/^#define DRMP3_VMAC(/;"	d
DRMP3_VMSB	src/external/mp3lib.h	/^#define DRMP3_VMSB(/;"	d
DRMP3_VMUL	src/external/mp3lib.h	/^#define DRMP3_VMUL /;"	d
DRMP3_VMUL_S	src/external/mp3lib.h	/^#define DRMP3_VMUL_S(/;"	d
DRMP3_VREV	src/external/mp3lib.h	/^#define DRMP3_VREV(/;"	d
DRMP3_VSAVE2	src/external/mp3lib.h	/^#define DRMP3_VSAVE2(/;"	d
DRMP3_VSAVE4	src/external/mp3lib.h	/^#define DRMP3_VSAVE4(/;"	d
DRMP3_VSET	src/external/mp3lib.h	/^#define DRMP3_VSET /;"	d
DRMP3_VSTORE	src/external/mp3lib.h	/^#define DRMP3_VSTORE /;"	d
DRMP3_VSUB	src/external/mp3lib.h	/^#define DRMP3_VSUB /;"	d
DRMP3_XSTRINGIFY	src/external/mp3lib.h	/^#define DRMP3_XSTRINGIFY(/;"	d
DRMP3_ZERO_MEMORY	src/external/mp3lib.h	/^#define DRMP3_ZERO_MEMORY(/;"	d
DRMP3_ZERO_OBJECT	src/external/mp3lib.h	/^#define DRMP3_ZERO_OBJECT(/;"	d
DR_MP3_NO_SIMD	src/external/mp3lib.h	/^#define DR_MP3_NO_SIMD$/;"	d
DR_MP3_ONLY_SIMD	src/external/mp3lib.h	/^#define DR_MP3_ONLY_SIMD$/;"	d
DeviceName	src/external/wglext.h	/^    CHAR   DeviceName[32];$/;"	m	struct:_GPU_DEVICE	typeref:typename:CHAR[32]
DeviceString	src/external/wglext.h	/^    CHAR   DeviceString[128];$/;"	m	struct:_GPU_DEVICE	typeref:typename:CHAR[128]
ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV	src/external/wglext.h	/^#define ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV /;"	d
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	src/external/wglext.h	/^#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB /;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	src/external/wglext.h	/^#define ERROR_INVALID_PIXEL_TYPE_ARB /;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	src/external/wglext.h	/^#define ERROR_INVALID_PIXEL_TYPE_EXT /;"	d
ERROR_INVALID_PROFILE_ARB	src/external/wglext.h	/^#define ERROR_INVALID_PROFILE_ARB /;"	d
ERROR_INVALID_VERSION_ARB	src/external/wglext.h	/^#define ERROR_INVALID_VERSION_ARB /;"	d
ERROR_MISSING_AFFINITY_MASK_NV	src/external/wglext.h	/^#define ERROR_MISSING_AFFINITY_MASK_NV /;"	d
FAST_BITS	src/external/stb_image.h	/^#define FAST_BITS /;"	d
Flags	src/external/wglext.h	/^    DWORD  Flags;$/;"	m	struct:_GPU_DEVICE	typeref:typename:DWORD
GLAPI	src/external/glcorearb.h	/^#define GLAPI /;"	d
GLDEBUGPROC	src/external/glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsize/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCARB	src/external/glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLs/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLVULKANPROCNV	src/external/glcorearb.h	/^typedef void (APIENTRY  *GLVULKANPROCNV)(void);$/;"	t	typeref:typename:void (APIENTRY *)(void)
GL_ACCUM_ADJACENT_PAIRS_NV	src/external/glcorearb.h	/^#define GL_ACCUM_ADJACENT_PAIRS_NV /;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	src/external/glcorearb.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	src/external/glcorearb.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	src/external/glcorearb.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	src/external/glcorearb.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_PROGRAM_EXT	src/external/glcorearb.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	d
GL_ACTIVE_RESOURCES	src/external/glcorearb.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_SUBROUTINES	src/external/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	src/external/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	src/external/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	src/external/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	src/external/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	src/external/glcorearb.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_UNIFORMS	src/external/glcorearb.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	src/external/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	src/external/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	src/external/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	src/external/glcorearb.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ADJACENT_PAIRS_NV	src/external/glcorearb.h	/^#define GL_ADJACENT_PAIRS_NV /;"	d
GL_AFFINE_2D_NV	src/external/glcorearb.h	/^#define GL_AFFINE_2D_NV /;"	d
GL_AFFINE_3D_NV	src/external/glcorearb.h	/^#define GL_AFFINE_3D_NV /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	src/external/glcorearb.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALL_BARRIER_BITS	src/external/glcorearb.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_SHADER_BITS	src/external/glcorearb.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALPHA	src/external/glcorearb.h	/^#define GL_ALPHA /;"	d
GL_ALPHA16F_EXT	src/external/glcorearb.h	/^#define GL_ALPHA16F_EXT /;"	d
GL_ALPHA32F_EXT	src/external/glcorearb.h	/^#define GL_ALPHA32F_EXT /;"	d
GL_ALPHA8_EXT	src/external/glcorearb.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA_REF_COMMAND_NV	src/external/glcorearb.h	/^#define GL_ALPHA_REF_COMMAND_NV /;"	d
GL_ALREADY_SIGNALED	src/external/glcorearb.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS	src/external/glcorearb.h	/^#define GL_ALWAYS /;"	d
GL_AMD_framebuffer_multisample_advanced	src/external/glcorearb.h	/^#define GL_AMD_framebuffer_multisample_advanced /;"	d
GL_AMD_performance_monitor	src/external/glcorearb.h	/^#define GL_AMD_performance_monitor /;"	d
GL_AND	src/external/glcorearb.h	/^#define GL_AND /;"	d
GL_AND_INVERTED	src/external/glcorearb.h	/^#define GL_AND_INVERTED /;"	d
GL_AND_REVERSE	src/external/glcorearb.h	/^#define GL_AND_REVERSE /;"	d
GL_ANY_SAMPLES_PASSED	src/external/glcorearb.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	src/external/glcorearb.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_APPLE_rgb_422	src/external/glcorearb.h	/^#define GL_APPLE_rgb_422 /;"	d
GL_ARB_ES2_compatibility	src/external/glcorearb.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_1_compatibility	src/external/glcorearb.h	/^#define GL_ARB_ES3_1_compatibility /;"	d
GL_ARB_ES3_2_compatibility	src/external/glcorearb.h	/^#define GL_ARB_ES3_2_compatibility /;"	d
GL_ARB_ES3_compatibility	src/external/glcorearb.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	src/external/glcorearb.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	src/external/glcorearb.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_bindless_texture	src/external/glcorearb.h	/^#define GL_ARB_bindless_texture /;"	d
GL_ARB_blend_func_extended	src/external/glcorearb.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_buffer_storage	src/external/glcorearb.h	/^#define GL_ARB_buffer_storage /;"	d
GL_ARB_cl_event	src/external/glcorearb.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	src/external/glcorearb.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_texture	src/external/glcorearb.h	/^#define GL_ARB_clear_texture /;"	d
GL_ARB_clip_control	src/external/glcorearb.h	/^#define GL_ARB_clip_control /;"	d
GL_ARB_compressed_texture_pixel_storage	src/external/glcorearb.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	src/external/glcorearb.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_variable_group_size	src/external/glcorearb.h	/^#define GL_ARB_compute_variable_group_size /;"	d
GL_ARB_conditional_render_inverted	src/external/glcorearb.h	/^#define GL_ARB_conditional_render_inverted /;"	d
GL_ARB_conservative_depth	src/external/glcorearb.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	src/external/glcorearb.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	src/external/glcorearb.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_cull_distance	src/external/glcorearb.h	/^#define GL_ARB_cull_distance /;"	d
GL_ARB_debug_output	src/external/glcorearb.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	src/external/glcorearb.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	src/external/glcorearb.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_derivative_control	src/external/glcorearb.h	/^#define GL_ARB_derivative_control /;"	d
GL_ARB_direct_state_access	src/external/glcorearb.h	/^#define GL_ARB_direct_state_access /;"	d
GL_ARB_draw_buffers_blend	src/external/glcorearb.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	src/external/glcorearb.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	src/external/glcorearb.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_draw_instanced	src/external/glcorearb.h	/^#define GL_ARB_draw_instanced /;"	d
GL_ARB_enhanced_layouts	src/external/glcorearb.h	/^#define GL_ARB_enhanced_layouts /;"	d
GL_ARB_explicit_attrib_location	src/external/glcorearb.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	src/external/glcorearb.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	src/external/glcorearb.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	src/external/glcorearb.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_fragment_shader_interlock	src/external/glcorearb.h	/^#define GL_ARB_fragment_shader_interlock /;"	d
GL_ARB_framebuffer_no_attachments	src/external/glcorearb.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	src/external/glcorearb.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	src/external/glcorearb.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_geometry_shader4	src/external/glcorearb.h	/^#define GL_ARB_geometry_shader4 /;"	d
GL_ARB_get_program_binary	src/external/glcorearb.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_get_texture_sub_image	src/external/glcorearb.h	/^#define GL_ARB_get_texture_sub_image /;"	d
GL_ARB_gl_spirv	src/external/glcorearb.h	/^#define GL_ARB_gl_spirv /;"	d
GL_ARB_gpu_shader5	src/external/glcorearb.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	src/external/glcorearb.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_gpu_shader_int64	src/external/glcorearb.h	/^#define GL_ARB_gpu_shader_int64 /;"	d
GL_ARB_half_float_vertex	src/external/glcorearb.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_imaging	src/external/glcorearb.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_indirect_parameters	src/external/glcorearb.h	/^#define GL_ARB_indirect_parameters /;"	d
GL_ARB_instanced_arrays	src/external/glcorearb.h	/^#define GL_ARB_instanced_arrays /;"	d
GL_ARB_internalformat_query	src/external/glcorearb.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	src/external/glcorearb.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	src/external/glcorearb.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	src/external/glcorearb.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	src/external/glcorearb.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_multi_bind	src/external/glcorearb.h	/^#define GL_ARB_multi_bind /;"	d
GL_ARB_multi_draw_indirect	src/external/glcorearb.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_occlusion_query2	src/external/glcorearb.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_parallel_shader_compile	src/external/glcorearb.h	/^#define GL_ARB_parallel_shader_compile /;"	d
GL_ARB_pipeline_statistics_query	src/external/glcorearb.h	/^#define GL_ARB_pipeline_statistics_query /;"	d
GL_ARB_pixel_buffer_object	src/external/glcorearb.h	/^#define GL_ARB_pixel_buffer_object /;"	d
GL_ARB_polygon_offset_clamp	src/external/glcorearb.h	/^#define GL_ARB_polygon_offset_clamp /;"	d
GL_ARB_post_depth_coverage	src/external/glcorearb.h	/^#define GL_ARB_post_depth_coverage /;"	d
GL_ARB_program_interface_query	src/external/glcorearb.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	src/external/glcorearb.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_query_buffer_object	src/external/glcorearb.h	/^#define GL_ARB_query_buffer_object /;"	d
GL_ARB_robust_buffer_access_behavior	src/external/glcorearb.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	src/external/glcorearb.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_isolation	src/external/glcorearb.h	/^#define GL_ARB_robustness_isolation /;"	d
GL_ARB_sample_locations	src/external/glcorearb.h	/^#define GL_ARB_sample_locations /;"	d
GL_ARB_sample_shading	src/external/glcorearb.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	src/external/glcorearb.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	src/external/glcorearb.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cubemap_per_texture	src/external/glcorearb.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	d
GL_ARB_separate_shader_objects	src/external/glcorearb.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counter_ops	src/external/glcorearb.h	/^#define GL_ARB_shader_atomic_counter_ops /;"	d
GL_ARB_shader_atomic_counters	src/external/glcorearb.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_ballot	src/external/glcorearb.h	/^#define GL_ARB_shader_ballot /;"	d
GL_ARB_shader_bit_encoding	src/external/glcorearb.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_clock	src/external/glcorearb.h	/^#define GL_ARB_shader_clock /;"	d
GL_ARB_shader_draw_parameters	src/external/glcorearb.h	/^#define GL_ARB_shader_draw_parameters /;"	d
GL_ARB_shader_group_vote	src/external/glcorearb.h	/^#define GL_ARB_shader_group_vote /;"	d
GL_ARB_shader_image_load_store	src/external/glcorearb.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	src/external/glcorearb.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_precision	src/external/glcorearb.h	/^#define GL_ARB_shader_precision /;"	d
GL_ARB_shader_stencil_export	src/external/glcorearb.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	src/external/glcorearb.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	src/external/glcorearb.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_texture_image_samples	src/external/glcorearb.h	/^#define GL_ARB_shader_texture_image_samples /;"	d
GL_ARB_shader_viewport_layer_array	src/external/glcorearb.h	/^#define GL_ARB_shader_viewport_layer_array /;"	d
GL_ARB_shading_language_420pack	src/external/glcorearb.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	src/external/glcorearb.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	src/external/glcorearb.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_sparse_buffer	src/external/glcorearb.h	/^#define GL_ARB_sparse_buffer /;"	d
GL_ARB_sparse_texture	src/external/glcorearb.h	/^#define GL_ARB_sparse_texture /;"	d
GL_ARB_sparse_texture2	src/external/glcorearb.h	/^#define GL_ARB_sparse_texture2 /;"	d
GL_ARB_sparse_texture_clamp	src/external/glcorearb.h	/^#define GL_ARB_sparse_texture_clamp /;"	d
GL_ARB_spirv_extensions	src/external/glcorearb.h	/^#define GL_ARB_spirv_extensions /;"	d
GL_ARB_stencil_texturing	src/external/glcorearb.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	src/external/glcorearb.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	src/external/glcorearb.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_barrier	src/external/glcorearb.h	/^#define GL_ARB_texture_barrier /;"	d
GL_ARB_texture_border_clamp	src/external/glcorearb.h	/^#define GL_ARB_texture_border_clamp /;"	d
GL_ARB_texture_buffer_object	src/external/glcorearb.h	/^#define GL_ARB_texture_buffer_object /;"	d
GL_ARB_texture_buffer_object_rgb32	src/external/glcorearb.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	src/external/glcorearb.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression_bptc	src/external/glcorearb.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	src/external/glcorearb.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map_array	src/external/glcorearb.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_filter_anisotropic	src/external/glcorearb.h	/^#define GL_ARB_texture_filter_anisotropic /;"	d
GL_ARB_texture_filter_minmax	src/external/glcorearb.h	/^#define GL_ARB_texture_filter_minmax /;"	d
GL_ARB_texture_gather	src/external/glcorearb.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_mirror_clamp_to_edge	src/external/glcorearb.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	d
GL_ARB_texture_mirrored_repeat	src/external/glcorearb.h	/^#define GL_ARB_texture_mirrored_repeat /;"	d
GL_ARB_texture_multisample	src/external/glcorearb.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_non_power_of_two	src/external/glcorearb.h	/^#define GL_ARB_texture_non_power_of_two /;"	d
GL_ARB_texture_query_levels	src/external/glcorearb.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	src/external/glcorearb.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rg	src/external/glcorearb.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	src/external/glcorearb.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_stencil8	src/external/glcorearb.h	/^#define GL_ARB_texture_stencil8 /;"	d
GL_ARB_texture_storage	src/external/glcorearb.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	src/external/glcorearb.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	src/external/glcorearb.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	src/external/glcorearb.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	src/external/glcorearb.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	src/external/glcorearb.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	src/external/glcorearb.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	src/external/glcorearb.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transform_feedback_overflow_query	src/external/glcorearb.h	/^#define GL_ARB_transform_feedback_overflow_query /;"	d
GL_ARB_uniform_buffer_object	src/external/glcorearb.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	src/external/glcorearb.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	src/external/glcorearb.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	src/external/glcorearb.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	src/external/glcorearb.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	src/external/glcorearb.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	src/external/glcorearb.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	src/external/glcorearb.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_ARC_TO_NV /;"	d
GL_ARRAY_BUFFER	src/external/glcorearb.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_SIZE	src/external/glcorearb.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	src/external/glcorearb.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BUFFER	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	src/external/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_MEMORY_OBJECT_NV	src/external/glcorearb.h	/^#define GL_ATTACHED_MEMORY_OBJECT_NV /;"	d
GL_ATTACHED_MEMORY_OFFSET_NV	src/external/glcorearb.h	/^#define GL_ATTACHED_MEMORY_OFFSET_NV /;"	d
GL_ATTACHED_SHADERS	src/external/glcorearb.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTRIBUTE_ADDRESS_COMMAND_NV	src/external/glcorearb.h	/^#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV /;"	d
GL_AUTO_GENERATE_MIPMAP	src/external/glcorearb.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_BACK	src/external/glcorearb.h	/^#define GL_BACK /;"	d
GL_BACK_LEFT	src/external/glcorearb.h	/^#define GL_BACK_LEFT /;"	d
GL_BACK_RIGHT	src/external/glcorearb.h	/^#define GL_BACK_RIGHT /;"	d
GL_BEVEL_NV	src/external/glcorearb.h	/^#define GL_BEVEL_NV /;"	d
GL_BGR	src/external/glcorearb.h	/^#define GL_BGR /;"	d
GL_BGRA	src/external/glcorearb.h	/^#define GL_BGRA /;"	d
GL_BGRA8_EXT	src/external/glcorearb.h	/^#define GL_BGRA8_EXT /;"	d
GL_BGRA_INTEGER	src/external/glcorearb.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGR_INTEGER	src/external/glcorearb.h	/^#define GL_BGR_INTEGER /;"	d
GL_BLACKHOLE_RENDER_INTEL	src/external/glcorearb.h	/^#define GL_BLACKHOLE_RENDER_INTEL /;"	d
GL_BLEND	src/external/glcorearb.h	/^#define GL_BLEND /;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	src/external/glcorearb.h	/^#define GL_BLEND_ADVANCED_COHERENT_KHR /;"	d
GL_BLEND_ADVANCED_COHERENT_NV	src/external/glcorearb.h	/^#define GL_BLEND_ADVANCED_COHERENT_NV /;"	d
GL_BLEND_COLOR	src/external/glcorearb.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR_COMMAND_NV	src/external/glcorearb.h	/^#define GL_BLEND_COLOR_COMMAND_NV /;"	d
GL_BLEND_DST	src/external/glcorearb.h	/^#define GL_BLEND_DST /;"	d
GL_BLEND_DST_ALPHA	src/external/glcorearb.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_RGB	src/external/glcorearb.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_EQUATION	src/external/glcorearb.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	src/external/glcorearb.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_RGB	src/external/glcorearb.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_OVERLAP_NV	src/external/glcorearb.h	/^#define GL_BLEND_OVERLAP_NV /;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	src/external/glcorearb.h	/^#define GL_BLEND_PREMULTIPLIED_SRC_NV /;"	d
GL_BLEND_SRC	src/external/glcorearb.h	/^#define GL_BLEND_SRC /;"	d
GL_BLEND_SRC_ALPHA	src/external/glcorearb.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_RGB	src/external/glcorearb.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLOCK_INDEX	src/external/glcorearb.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE	src/external/glcorearb.h	/^#define GL_BLUE /;"	d
GL_BLUE_INTEGER	src/external/glcorearb.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_NV	src/external/glcorearb.h	/^#define GL_BLUE_NV /;"	d
GL_BOLD_BIT_NV	src/external/glcorearb.h	/^#define GL_BOLD_BIT_NV /;"	d
GL_BOOL	src/external/glcorearb.h	/^#define GL_BOOL /;"	d
GL_BOOL_VEC2	src/external/glcorearb.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC3	src/external/glcorearb.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC4	src/external/glcorearb.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOUNDING_BOX_NV	src/external/glcorearb.h	/^#define GL_BOUNDING_BOX_NV /;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	src/external/glcorearb.h	/^#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV /;"	d
GL_BUFFER	src/external/glcorearb.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	src/external/glcorearb.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_FLAGS	src/external/glcorearb.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	src/external/glcorearb.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_GPU_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_BUFFER_GPU_ADDRESS_NV /;"	d
GL_BUFFER_IMMUTABLE_STORAGE	src/external/glcorearb.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	d
GL_BUFFER_MAPPED	src/external/glcorearb.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAP_LENGTH	src/external/glcorearb.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	src/external/glcorearb.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	src/external/glcorearb.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_OBJECT_EXT	src/external/glcorearb.h	/^#define GL_BUFFER_OBJECT_EXT /;"	d
GL_BUFFER_SIZE	src/external/glcorearb.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_STORAGE_FLAGS	src/external/glcorearb.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_USAGE	src/external/glcorearb.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_VARIABLE	src/external/glcorearb.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BYTE	src/external/glcorearb.h	/^#define GL_BYTE /;"	d
GL_CAVEAT_SUPPORT	src/external/glcorearb.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CCW	src/external/glcorearb.h	/^#define GL_CCW /;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_CIRCULAR_CCW_ARC_TO_NV /;"	d
GL_CIRCULAR_CW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_CIRCULAR_CW_ARC_TO_NV /;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_CIRCULAR_TANGENT_ARC_TO_NV /;"	d
GL_CLAMP_READ_COLOR	src/external/glcorearb.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_TO_BORDER	src/external/glcorearb.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER_ARB	src/external/glcorearb.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	d
GL_CLAMP_TO_EDGE	src/external/glcorearb.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLEAR	src/external/glcorearb.h	/^#define GL_CLEAR /;"	d
GL_CLEAR_BUFFER	src/external/glcorearb.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_TEXTURE	src/external/glcorearb.h	/^#define GL_CLEAR_TEXTURE /;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	d
GL_CLIENT_STORAGE_BIT	src/external/glcorearb.h	/^#define GL_CLIENT_STORAGE_BIT /;"	d
GL_CLIPPING_INPUT_PRIMITIVES	src/external/glcorearb.h	/^#define GL_CLIPPING_INPUT_PRIMITIVES /;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	src/external/glcorearb.h	/^#define GL_CLIPPING_INPUT_PRIMITIVES_ARB /;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES	src/external/glcorearb.h	/^#define GL_CLIPPING_OUTPUT_PRIMITIVES /;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	src/external/glcorearb.h	/^#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB /;"	d
GL_CLIP_DEPTH_MODE	src/external/glcorearb.h	/^#define GL_CLIP_DEPTH_MODE /;"	d
GL_CLIP_DISTANCE0	src/external/glcorearb.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	src/external/glcorearb.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	src/external/glcorearb.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	src/external/glcorearb.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	src/external/glcorearb.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	src/external/glcorearb.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	src/external/glcorearb.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	src/external/glcorearb.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_CLIP_ORIGIN	src/external/glcorearb.h	/^#define GL_CLIP_ORIGIN /;"	d
GL_CLOSE_PATH_NV	src/external/glcorearb.h	/^#define GL_CLOSE_PATH_NV /;"	d
GL_COLOR	src/external/glcorearb.h	/^#define GL_COLOR /;"	d
GL_COLORBURN_KHR	src/external/glcorearb.h	/^#define GL_COLORBURN_KHR /;"	d
GL_COLORBURN_NV	src/external/glcorearb.h	/^#define GL_COLORBURN_NV /;"	d
GL_COLORDODGE_KHR	src/external/glcorearb.h	/^#define GL_COLORDODGE_KHR /;"	d
GL_COLORDODGE_NV	src/external/glcorearb.h	/^#define GL_COLORDODGE_NV /;"	d
GL_COLOR_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_COLOR_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_COLOR_ARRAY_LENGTH_NV /;"	d
GL_COLOR_ATTACHMENT0	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT1	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT11	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT12	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT13	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT14	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT15	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT16	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT16 /;"	d
GL_COLOR_ATTACHMENT17	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT17 /;"	d
GL_COLOR_ATTACHMENT18	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT18 /;"	d
GL_COLOR_ATTACHMENT19	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT19 /;"	d
GL_COLOR_ATTACHMENT2	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT20	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT20 /;"	d
GL_COLOR_ATTACHMENT21	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT21 /;"	d
GL_COLOR_ATTACHMENT22	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT22 /;"	d
GL_COLOR_ATTACHMENT23	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT23 /;"	d
GL_COLOR_ATTACHMENT24	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT24 /;"	d
GL_COLOR_ATTACHMENT25	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT25 /;"	d
GL_COLOR_ATTACHMENT26	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT26 /;"	d
GL_COLOR_ATTACHMENT27	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT27 /;"	d
GL_COLOR_ATTACHMENT28	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT28 /;"	d
GL_COLOR_ATTACHMENT29	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT29 /;"	d
GL_COLOR_ATTACHMENT3	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT30	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT30 /;"	d
GL_COLOR_ATTACHMENT31	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT31 /;"	d
GL_COLOR_ATTACHMENT4	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT5	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT6	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT7	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT8	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT9	src/external/glcorearb.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_BUFFER_BIT	src/external/glcorearb.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_CLEAR_VALUE	src/external/glcorearb.h	/^#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_COMPONENTS	src/external/glcorearb.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	src/external/glcorearb.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_LOGIC_OP	src/external/glcorearb.h	/^#define GL_COLOR_LOGIC_OP /;"	d
GL_COLOR_RENDERABLE	src/external/glcorearb.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_SAMPLES_NV	src/external/glcorearb.h	/^#define GL_COLOR_SAMPLES_NV /;"	d
GL_COLOR_WRITEMASK	src/external/glcorearb.h	/^#define GL_COLOR_WRITEMASK /;"	d
GL_COMMAND_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMPARE_REF_TO_TEXTURE	src/external/glcorearb.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPATIBLE_SUBROUTINES	src/external/glcorearb.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE_STATUS	src/external/glcorearb.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPLETION_STATUS_ARB	src/external/glcorearb.h	/^#define GL_COMPLETION_STATUS_ARB /;"	d
GL_COMPLETION_STATUS_KHR	src/external/glcorearb.h	/^#define GL_COMPLETION_STATUS_KHR /;"	d
GL_COMPRESSED_R11_EAC	src/external/glcorearb.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	src/external/glcorearb.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_RGTC1	src/external/glcorearb.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RG	src/external/glcorearb.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	src/external/glcorearb.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	src/external/glcorearb.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RG_RGTC2	src/external/glcorearb.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	src/external/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	src/external/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	src/external/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	src/external/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SRGB	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	src/external/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	src/external/glcorearb.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPUTE_SHADER	src/external/glcorearb.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	src/external/glcorearb.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SHADER_INVOCATIONS	src/external/glcorearb.h	/^#define GL_COMPUTE_SHADER_INVOCATIONS /;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	src/external/glcorearb.h	/^#define GL_COMPUTE_SHADER_INVOCATIONS_ARB /;"	d
GL_COMPUTE_SUBROUTINE	src/external/glcorearb.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	src/external/glcorearb.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	src/external/glcorearb.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_WORK_GROUP_SIZE	src/external/glcorearb.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_CONDITION_SATISFIED	src/external/glcorearb.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONFORMANT_NV	src/external/glcorearb.h	/^#define GL_CONFORMANT_NV /;"	d
GL_CONIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_CONIC_CURVE_TO_NV /;"	d
GL_CONJOINT_NV	src/external/glcorearb.h	/^#define GL_CONJOINT_NV /;"	d
GL_CONSERVATIVE_RASTERIZATION_INTEL	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTERIZATION_INTEL /;"	d
GL_CONSERVATIVE_RASTERIZATION_NV	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTERIZATION_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_NV	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_NV	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTER_MODE_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV	src/external/glcorearb.h	/^#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV /;"	d
GL_CONSTANT_ALPHA	src/external/glcorearb.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_COLOR	src/external/glcorearb.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	src/external/glcorearb.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	src/external/glcorearb.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	src/external/glcorearb.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	src/external/glcorearb.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	src/external/glcorearb.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT	src/external/glcorearb.h	/^#define GL_CONTEXT_FLAG_NO_ERROR_BIT /;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	src/external/glcorearb.h	/^#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT	src/external/glcorearb.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	src/external/glcorearb.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_LOST	src/external/glcorearb.h	/^#define GL_CONTEXT_LOST /;"	d
GL_CONTEXT_PROFILE_MASK	src/external/glcorearb.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	src/external/glcorearb.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	src/external/glcorearb.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH /;"	d
GL_CONTEXT_ROBUST_ACCESS	src/external/glcorearb.h	/^#define GL_CONTEXT_ROBUST_ACCESS /;"	d
GL_CONTRAST_NV	src/external/glcorearb.h	/^#define GL_CONTRAST_NV /;"	d
GL_CONVEX_HULL_NV	src/external/glcorearb.h	/^#define GL_CONVEX_HULL_NV /;"	d
GL_COPY	src/external/glcorearb.h	/^#define GL_COPY /;"	d
GL_COPY_INVERTED	src/external/glcorearb.h	/^#define GL_COPY_INVERTED /;"	d
GL_COPY_READ_BUFFER	src/external/glcorearb.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER	src/external/glcorearb.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_COUNTER_RANGE_AMD	src/external/glcorearb.h	/^#define GL_COUNTER_RANGE_AMD /;"	d
GL_COUNTER_TYPE_AMD	src/external/glcorearb.h	/^#define GL_COUNTER_TYPE_AMD /;"	d
GL_COUNT_DOWN_NV	src/external/glcorearb.h	/^#define GL_COUNT_DOWN_NV /;"	d
GL_COUNT_UP_NV	src/external/glcorearb.h	/^#define GL_COUNT_UP_NV /;"	d
GL_COVERAGE_MODULATION_NV	src/external/glcorearb.h	/^#define GL_COVERAGE_MODULATION_NV /;"	d
GL_COVERAGE_MODULATION_TABLE_NV	src/external/glcorearb.h	/^#define GL_COVERAGE_MODULATION_TABLE_NV /;"	d
GL_COVERAGE_MODULATION_TABLE_SIZE_NV	src/external/glcorearb.h	/^#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV /;"	d
GL_CUBIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_CUBIC_CURVE_TO_NV /;"	d
GL_CULL_FACE	src/external/glcorearb.h	/^#define GL_CULL_FACE /;"	d
GL_CULL_FACE_MODE	src/external/glcorearb.h	/^#define GL_CULL_FACE_MODE /;"	d
GL_CURRENT_PROGRAM	src/external/glcorearb.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	src/external/glcorearb.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_VERTEX_ATTRIB	src/external/glcorearb.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CW	src/external/glcorearb.h	/^#define GL_CW /;"	d
GL_DARKEN_KHR	src/external/glcorearb.h	/^#define GL_DARKEN_KHR /;"	d
GL_DARKEN_NV	src/external/glcorearb.h	/^#define GL_DARKEN_NV /;"	d
GL_DEBUG_CALLBACK_FUNCTION	src/external/glcorearb.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	src/external/glcorearb.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	src/external/glcorearb.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	src/external/glcorearb.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	src/external/glcorearb.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_OUTPUT	src/external/glcorearb.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	src/external/glcorearb.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_SEVERITY_HIGH	src/external/glcorearb.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_LOW	src/external/glcorearb.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM	src/external/glcorearb.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	src/external/glcorearb.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_OTHER	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_ERROR	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_MARKER	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_POP_GROUP	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	src/external/glcorearb.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DECODE_EXT	src/external/glcorearb.h	/^#define GL_DECODE_EXT /;"	d
GL_DECR	src/external/glcorearb.h	/^#define GL_DECR /;"	d
GL_DECR_WRAP	src/external/glcorearb.h	/^#define GL_DECR_WRAP /;"	d
GL_DELETE_STATUS	src/external/glcorearb.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPTH	src/external/glcorearb.h	/^#define GL_DEPTH /;"	d
GL_DEPTH24_STENCIL8	src/external/glcorearb.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8	src/external/glcorearb.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8_NV	src/external/glcorearb.h	/^#define GL_DEPTH32F_STENCIL8_NV /;"	d
GL_DEPTH_ATTACHMENT	src/external/glcorearb.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_BUFFER_BIT	src/external/glcorearb.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	src/external/glcorearb.h	/^#define GL_DEPTH_BUFFER_FLOAT_MODE_NV /;"	d
GL_DEPTH_CLAMP	src/external/glcorearb.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLEAR_VALUE	src/external/glcorearb.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_COMPONENT	src/external/glcorearb.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT16	src/external/glcorearb.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT24	src/external/glcorearb.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT32	src/external/glcorearb.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	src/external/glcorearb.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENT32F_NV	src/external/glcorearb.h	/^#define GL_DEPTH_COMPONENT32F_NV /;"	d
GL_DEPTH_COMPONENTS	src/external/glcorearb.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_FUNC	src/external/glcorearb.h	/^#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_RANGE	src/external/glcorearb.h	/^#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_RENDERABLE	src/external/glcorearb.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_SAMPLES_NV	src/external/glcorearb.h	/^#define GL_DEPTH_SAMPLES_NV /;"	d
GL_DEPTH_STENCIL	src/external/glcorearb.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	src/external/glcorearb.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	src/external/glcorearb.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_TEST	src/external/glcorearb.h	/^#define GL_DEPTH_TEST /;"	d
GL_DEPTH_WRITEMASK	src/external/glcorearb.h	/^#define GL_DEPTH_WRITEMASK /;"	d
GL_DETACHED_BUFFERS_NV	src/external/glcorearb.h	/^#define GL_DETACHED_BUFFERS_NV /;"	d
GL_DETACHED_MEMORY_INCARNATION_NV	src/external/glcorearb.h	/^#define GL_DETACHED_MEMORY_INCARNATION_NV /;"	d
GL_DETACHED_TEXTURES_NV	src/external/glcorearb.h	/^#define GL_DETACHED_TEXTURES_NV /;"	d
GL_DIFFERENCE_KHR	src/external/glcorearb.h	/^#define GL_DIFFERENCE_KHR /;"	d
GL_DIFFERENCE_NV	src/external/glcorearb.h	/^#define GL_DIFFERENCE_NV /;"	d
GL_DISJOINT_NV	src/external/glcorearb.h	/^#define GL_DISJOINT_NV /;"	d
GL_DISPATCH_INDIRECT_BUFFER	src/external/glcorearb.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DITHER	src/external/glcorearb.h	/^#define GL_DITHER /;"	d
GL_DONT_CARE	src/external/glcorearb.h	/^#define GL_DONT_CARE /;"	d
GL_DOUBLE	src/external/glcorearb.h	/^#define GL_DOUBLE /;"	d
GL_DOUBLEBUFFER	src/external/glcorearb.h	/^#define GL_DOUBLEBUFFER /;"	d
GL_DOUBLE_MAT2	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2x3	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x4	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT3	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3x2	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x4	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT4	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4x2	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x3	src/external/glcorearb.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_VEC2	src/external/glcorearb.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC3	src/external/glcorearb.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC4	src/external/glcorearb.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DRAW_ARRAYS_COMMAND_NV	src/external/glcorearb.h	/^#define GL_DRAW_ARRAYS_COMMAND_NV /;"	d
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV	src/external/glcorearb.h	/^#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV /;"	d
GL_DRAW_ARRAYS_STRIP_COMMAND_NV	src/external/glcorearb.h	/^#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV /;"	d
GL_DRAW_BUFFER	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER /;"	d
GL_DRAW_BUFFER0	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER1	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER11	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER12	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER13	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER14	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER15	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER2	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER3	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER4	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER5	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER6	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER7	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER8	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER9	src/external/glcorearb.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_ELEMENTS_COMMAND_NV	src/external/glcorearb.h	/^#define GL_DRAW_ELEMENTS_COMMAND_NV /;"	d
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV	src/external/glcorearb.h	/^#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV /;"	d
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV	src/external/glcorearb.h	/^#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV /;"	d
GL_DRAW_FRAMEBUFFER	src/external/glcorearb.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	src/external/glcorearb.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_DRAW_INDIRECT_ADDRESS_NV /;"	d
GL_DRAW_INDIRECT_BUFFER	src/external/glcorearb.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_LENGTH_NV	src/external/glcorearb.h	/^#define GL_DRAW_INDIRECT_LENGTH_NV /;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	src/external/glcorearb.h	/^#define GL_DRAW_INDIRECT_UNIFIED_NV /;"	d
GL_DST_ALPHA	src/external/glcorearb.h	/^#define GL_DST_ALPHA /;"	d
GL_DST_ATOP_NV	src/external/glcorearb.h	/^#define GL_DST_ATOP_NV /;"	d
GL_DST_COLOR	src/external/glcorearb.h	/^#define GL_DST_COLOR /;"	d
GL_DST_IN_NV	src/external/glcorearb.h	/^#define GL_DST_IN_NV /;"	d
GL_DST_NV	src/external/glcorearb.h	/^#define GL_DST_NV /;"	d
GL_DST_OUT_NV	src/external/glcorearb.h	/^#define GL_DST_OUT_NV /;"	d
GL_DST_OVER_NV	src/external/glcorearb.h	/^#define GL_DST_OVER_NV /;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV /;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_DUP_LAST_CUBIC_CURVE_TO_NV /;"	d
GL_DYNAMIC_COPY	src/external/glcorearb.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_DRAW	src/external/glcorearb.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_READ	src/external/glcorearb.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_STORAGE_BIT	src/external/glcorearb.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV /;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_EDGE_FLAG_ARRAY_LENGTH_NV /;"	d
GL_EFFECTIVE_RASTER_SAMPLES_EXT	src/external/glcorearb.h	/^#define GL_EFFECTIVE_RASTER_SAMPLES_EXT /;"	d
GL_ELEMENT_ADDRESS_COMMAND_NV	src/external/glcorearb.h	/^#define GL_ELEMENT_ADDRESS_COMMAND_NV /;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_ELEMENT_ARRAY_ADDRESS_NV /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BUFFER	src/external/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_ELEMENT_ARRAY_LENGTH_NV /;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	src/external/glcorearb.h	/^#define GL_ELEMENT_ARRAY_UNIFIED_NV /;"	d
GL_EQUAL	src/external/glcorearb.h	/^#define GL_EQUAL /;"	d
GL_EQUIV	src/external/glcorearb.h	/^#define GL_EQUIV /;"	d
GL_EXCLUSION_KHR	src/external/glcorearb.h	/^#define GL_EXCLUSION_KHR /;"	d
GL_EXCLUSION_NV	src/external/glcorearb.h	/^#define GL_EXCLUSION_NV /;"	d
GL_EXCLUSIVE_EXT	src/external/glcorearb.h	/^#define GL_EXCLUSIVE_EXT /;"	d
GL_EXTENSIONS	src/external/glcorearb.h	/^#define GL_EXTENSIONS /;"	d
GL_EXT_EGL_image_storage	src/external/glcorearb.h	/^#define GL_EXT_EGL_image_storage /;"	d
GL_EXT_EGL_sync	src/external/glcorearb.h	/^#define GL_EXT_EGL_sync /;"	d
GL_EXT_debug_label	src/external/glcorearb.h	/^#define GL_EXT_debug_label /;"	d
GL_EXT_debug_marker	src/external/glcorearb.h	/^#define GL_EXT_debug_marker /;"	d
GL_EXT_direct_state_access	src/external/glcorearb.h	/^#define GL_EXT_direct_state_access /;"	d
GL_EXT_draw_instanced	src/external/glcorearb.h	/^#define GL_EXT_draw_instanced /;"	d
GL_EXT_multiview_tessellation_geometry_shader	src/external/glcorearb.h	/^#define GL_EXT_multiview_tessellation_geometry_shader /;"	d
GL_EXT_multiview_texture_multisample	src/external/glcorearb.h	/^#define GL_EXT_multiview_texture_multisample /;"	d
GL_EXT_multiview_timer_query	src/external/glcorearb.h	/^#define GL_EXT_multiview_timer_query /;"	d
GL_EXT_polygon_offset_clamp	src/external/glcorearb.h	/^#define GL_EXT_polygon_offset_clamp /;"	d
GL_EXT_post_depth_coverage	src/external/glcorearb.h	/^#define GL_EXT_post_depth_coverage /;"	d
GL_EXT_raster_multisample	src/external/glcorearb.h	/^#define GL_EXT_raster_multisample /;"	d
GL_EXT_separate_shader_objects	src/external/glcorearb.h	/^#define GL_EXT_separate_shader_objects /;"	d
GL_EXT_shader_framebuffer_fetch	src/external/glcorearb.h	/^#define GL_EXT_shader_framebuffer_fetch /;"	d
GL_EXT_shader_framebuffer_fetch_non_coherent	src/external/glcorearb.h	/^#define GL_EXT_shader_framebuffer_fetch_non_coherent /;"	d
GL_EXT_shader_integer_mix	src/external/glcorearb.h	/^#define GL_EXT_shader_integer_mix /;"	d
GL_EXT_texture_compression_s3tc	src/external/glcorearb.h	/^#define GL_EXT_texture_compression_s3tc /;"	d
GL_EXT_texture_filter_minmax	src/external/glcorearb.h	/^#define GL_EXT_texture_filter_minmax /;"	d
GL_EXT_texture_sRGB_R8	src/external/glcorearb.h	/^#define GL_EXT_texture_sRGB_R8 /;"	d
GL_EXT_texture_sRGB_RG8	src/external/glcorearb.h	/^#define GL_EXT_texture_sRGB_RG8 /;"	d
GL_EXT_texture_sRGB_decode	src/external/glcorearb.h	/^#define GL_EXT_texture_sRGB_decode /;"	d
GL_EXT_texture_shadow_lod	src/external/glcorearb.h	/^#define GL_EXT_texture_shadow_lod /;"	d
GL_EXT_texture_storage	src/external/glcorearb.h	/^#define GL_EXT_texture_storage /;"	d
GL_EXT_window_rectangles	src/external/glcorearb.h	/^#define GL_EXT_window_rectangles /;"	d
GL_FACTOR_MAX_AMD	src/external/glcorearb.h	/^#define GL_FACTOR_MAX_AMD /;"	d
GL_FACTOR_MIN_AMD	src/external/glcorearb.h	/^#define GL_FACTOR_MIN_AMD /;"	d
GL_FALSE	src/external/glcorearb.h	/^#define GL_FALSE /;"	d
GL_FASTEST	src/external/glcorearb.h	/^#define GL_FASTEST /;"	d
GL_FILE_NAME_NV	src/external/glcorearb.h	/^#define GL_FILE_NAME_NV /;"	d
GL_FILL	src/external/glcorearb.h	/^#define GL_FILL /;"	d
GL_FILL_RECTANGLE_NV	src/external/glcorearb.h	/^#define GL_FILL_RECTANGLE_NV /;"	d
GL_FILTER	src/external/glcorearb.h	/^#define GL_FILTER /;"	d
GL_FIRST_TO_REST_NV	src/external/glcorearb.h	/^#define GL_FIRST_TO_REST_NV /;"	d
GL_FIRST_VERTEX_CONVENTION	src/external/glcorearb.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIXED	src/external/glcorearb.h	/^#define GL_FIXED /;"	d
GL_FIXED_ONLY	src/external/glcorearb.h	/^#define GL_FIXED_ONLY /;"	d
GL_FLOAT	src/external/glcorearb.h	/^#define GL_FLOAT /;"	d
GL_FLOAT16_NV	src/external/glcorearb.h	/^#define GL_FLOAT16_NV /;"	d
GL_FLOAT16_VEC2_NV	src/external/glcorearb.h	/^#define GL_FLOAT16_VEC2_NV /;"	d
GL_FLOAT16_VEC3_NV	src/external/glcorearb.h	/^#define GL_FLOAT16_VEC3_NV /;"	d
GL_FLOAT16_VEC4_NV	src/external/glcorearb.h	/^#define GL_FLOAT16_VEC4_NV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	src/external/glcorearb.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	src/external/glcorearb.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV /;"	d
GL_FLOAT_MAT2	src/external/glcorearb.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2x3	src/external/glcorearb.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	src/external/glcorearb.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	src/external/glcorearb.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3x2	src/external/glcorearb.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	src/external/glcorearb.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	src/external/glcorearb.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4x2	src/external/glcorearb.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	src/external/glcorearb.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_VEC2	src/external/glcorearb.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC3	src/external/glcorearb.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC4	src/external/glcorearb.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_FOG_COORD_ARRAY_ADDRESS_NV /;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_FOG_COORD_ARRAY_LENGTH_NV /;"	d
GL_FONT_ASCENDER_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_ASCENDER_BIT_NV /;"	d
GL_FONT_DESCENDER_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_DESCENDER_BIT_NV /;"	d
GL_FONT_GLYPHS_AVAILABLE_NV	src/external/glcorearb.h	/^#define GL_FONT_GLYPHS_AVAILABLE_NV /;"	d
GL_FONT_HAS_KERNING_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_HAS_KERNING_BIT_NV /;"	d
GL_FONT_HEIGHT_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV /;"	d
GL_FONT_NUM_GLYPH_INDICES_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV /;"	d
GL_FONT_TARGET_UNAVAILABLE_NV	src/external/glcorearb.h	/^#define GL_FONT_TARGET_UNAVAILABLE_NV /;"	d
GL_FONT_UNAVAILABLE_NV	src/external/glcorearb.h	/^#define GL_FONT_UNAVAILABLE_NV /;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_UNDERLINE_POSITION_BIT_NV /;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV /;"	d
GL_FONT_UNINTELLIGIBLE_NV	src/external/glcorearb.h	/^#define GL_FONT_UNINTELLIGIBLE_NV /;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_UNITS_PER_EM_BIT_NV /;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_X_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_X_MIN_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_Y_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	src/external/glcorearb.h	/^#define GL_FONT_Y_MIN_BOUNDS_BIT_NV /;"	d
GL_FRACTIONAL_EVEN	src/external/glcorearb.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_ODD	src/external/glcorearb.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRAGMENT_COVERAGE_COLOR_NV	src/external/glcorearb.h	/^#define GL_FRAGMENT_COVERAGE_COLOR_NV /;"	d
GL_FRAGMENT_COVERAGE_TO_COLOR_NV	src/external/glcorearb.h	/^#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV /;"	d
GL_FRAGMENT_INPUT_NV	src/external/glcorearb.h	/^#define GL_FRAGMENT_INPUT_NV /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	src/external/glcorearb.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_SHADER	src/external/glcorearb.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_BIT	src/external/glcorearb.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	src/external/glcorearb.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	src/external/glcorearb.h	/^#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT /;"	d
GL_FRAGMENT_SHADER_INVOCATIONS	src/external/glcorearb.h	/^#define GL_FRAGMENT_SHADER_INVOCATIONS /;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	src/external/glcorearb.h	/^#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB /;"	d
GL_FRAGMENT_SUBROUTINE	src/external/glcorearb.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	src/external/glcorearb.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	src/external/glcorearb.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BINDING	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BLEND	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_DEFAULT	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_FLIP_X_MESA	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_FLIP_X_MESA /;"	d
GL_FRAMEBUFFER_FLIP_Y_MESA	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_FLIP_Y_MESA /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR /;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB /;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV /;"	d
GL_FRAMEBUFFER_RENDERABLE	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB /;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV /;"	d
GL_FRAMEBUFFER_SRGB	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_SWAP_XY_MESA	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_SWAP_XY_MESA /;"	d
GL_FRAMEBUFFER_UNDEFINED	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	src/external/glcorearb.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRONT	src/external/glcorearb.h	/^#define GL_FRONT /;"	d
GL_FRONT_AND_BACK	src/external/glcorearb.h	/^#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_FACE	src/external/glcorearb.h	/^#define GL_FRONT_FACE /;"	d
GL_FRONT_FACE_COMMAND_NV	src/external/glcorearb.h	/^#define GL_FRONT_FACE_COMMAND_NV /;"	d
GL_FRONT_LEFT	src/external/glcorearb.h	/^#define GL_FRONT_LEFT /;"	d
GL_FRONT_RIGHT	src/external/glcorearb.h	/^#define GL_FRONT_RIGHT /;"	d
GL_FULL_SUPPORT	src/external/glcorearb.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	src/external/glcorearb.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_REVERSE_SUBTRACT	src/external/glcorearb.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_SUBTRACT	src/external/glcorearb.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_GEOMETRY_INPUT_TYPE	src/external/glcorearb.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	src/external/glcorearb.h	/^#define GL_GEOMETRY_INPUT_TYPE_ARB /;"	d
GL_GEOMETRY_OUTPUT_TYPE	src/external/glcorearb.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	src/external/glcorearb.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_ARB /;"	d
GL_GEOMETRY_SHADER	src/external/glcorearb.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_ARB	src/external/glcorearb.h	/^#define GL_GEOMETRY_SHADER_ARB /;"	d
GL_GEOMETRY_SHADER_BIT	src/external/glcorearb.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	src/external/glcorearb.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED	src/external/glcorearb.h	/^#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED /;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	src/external/glcorearb.h	/^#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB /;"	d
GL_GEOMETRY_SUBROUTINE	src/external/glcorearb.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	src/external/glcorearb.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	src/external/glcorearb.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	src/external/glcorearb.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	src/external/glcorearb.h	/^#define GL_GEOMETRY_VERTICES_OUT_ARB /;"	d
GL_GEQUAL	src/external/glcorearb.h	/^#define GL_GEQUAL /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	src/external/glcorearb.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	src/external/glcorearb.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_HAS_KERNING_BIT_NV /;"	d
GL_GLYPH_HEIGHT_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_HEIGHT_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_WIDTH_BIT_NV	src/external/glcorearb.h	/^#define GL_GLYPH_WIDTH_BIT_NV /;"	d
GL_GPU_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_GPU_ADDRESS_NV /;"	d
GL_GREATER	src/external/glcorearb.h	/^#define GL_GREATER /;"	d
GL_GREEN	src/external/glcorearb.h	/^#define GL_GREEN /;"	d
GL_GREEN_INTEGER	src/external/glcorearb.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_NV	src/external/glcorearb.h	/^#define GL_GREEN_NV /;"	d
GL_GUILTY_CONTEXT_RESET	src/external/glcorearb.h	/^#define GL_GUILTY_CONTEXT_RESET /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	src/external/glcorearb.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_HALF_FLOAT	src/external/glcorearb.h	/^#define GL_HALF_FLOAT /;"	d
GL_HARDLIGHT_KHR	src/external/glcorearb.h	/^#define GL_HARDLIGHT_KHR /;"	d
GL_HARDLIGHT_NV	src/external/glcorearb.h	/^#define GL_HARDLIGHT_NV /;"	d
GL_HARDMIX_NV	src/external/glcorearb.h	/^#define GL_HARDMIX_NV /;"	d
GL_HIGH_FLOAT	src/external/glcorearb.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	src/external/glcorearb.h	/^#define GL_HIGH_INT /;"	d
GL_HORIZONTAL_LINE_TO_NV	src/external/glcorearb.h	/^#define GL_HORIZONTAL_LINE_TO_NV /;"	d
GL_HSL_COLOR_KHR	src/external/glcorearb.h	/^#define GL_HSL_COLOR_KHR /;"	d
GL_HSL_COLOR_NV	src/external/glcorearb.h	/^#define GL_HSL_COLOR_NV /;"	d
GL_HSL_HUE_KHR	src/external/glcorearb.h	/^#define GL_HSL_HUE_KHR /;"	d
GL_HSL_HUE_NV	src/external/glcorearb.h	/^#define GL_HSL_HUE_NV /;"	d
GL_HSL_LUMINOSITY_KHR	src/external/glcorearb.h	/^#define GL_HSL_LUMINOSITY_KHR /;"	d
GL_HSL_LUMINOSITY_NV	src/external/glcorearb.h	/^#define GL_HSL_LUMINOSITY_NV /;"	d
GL_HSL_SATURATION_KHR	src/external/glcorearb.h	/^#define GL_HSL_SATURATION_KHR /;"	d
GL_HSL_SATURATION_NV	src/external/glcorearb.h	/^#define GL_HSL_SATURATION_NV /;"	d
GL_IMAGE_1D	src/external/glcorearb.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	src/external/glcorearb.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_2D	src/external/glcorearb.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	src/external/glcorearb.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_RECT	src/external/glcorearb.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_3D	src/external/glcorearb.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_BINDING_ACCESS	src/external/glcorearb.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_FORMAT	src/external/glcorearb.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_LAYER	src/external/glcorearb.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	src/external/glcorearb.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LEVEL	src/external/glcorearb.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_NAME	src/external/glcorearb.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BUFFER	src/external/glcorearb.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_CLASS_10_10_10_2	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	src/external/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	src/external/glcorearb.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	src/external/glcorearb.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	src/external/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	src/external/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	src/external/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_PIXEL_FORMAT	src/external/glcorearb.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	src/external/glcorearb.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_TEXEL_SIZE	src/external/glcorearb.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	src/external/glcorearb.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	src/external/glcorearb.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_INCLUSIVE_EXT	src/external/glcorearb.h	/^#define GL_INCLUSIVE_EXT /;"	d
GL_INCR	src/external/glcorearb.h	/^#define GL_INCR /;"	d
GL_INCR_WRAP	src/external/glcorearb.h	/^#define GL_INCR_WRAP /;"	d
GL_INDEX_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_INDEX_ARRAY_ADDRESS_NV /;"	d
GL_INDEX_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_INDEX_ARRAY_LENGTH_NV /;"	d
GL_INFO_LOG_LENGTH	src/external/glcorearb.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INNOCENT_CONTEXT_RESET	src/external/glcorearb.h	/^#define GL_INNOCENT_CONTEXT_RESET /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	src/external/glcorearb.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INT	src/external/glcorearb.h	/^#define GL_INT /;"	d
GL_INT16_NV	src/external/glcorearb.h	/^#define GL_INT16_NV /;"	d
GL_INT16_VEC2_NV	src/external/glcorearb.h	/^#define GL_INT16_VEC2_NV /;"	d
GL_INT16_VEC3_NV	src/external/glcorearb.h	/^#define GL_INT16_VEC3_NV /;"	d
GL_INT16_VEC4_NV	src/external/glcorearb.h	/^#define GL_INT16_VEC4_NV /;"	d
GL_INT64_ARB	src/external/glcorearb.h	/^#define GL_INT64_ARB /;"	d
GL_INT64_NV	src/external/glcorearb.h	/^#define GL_INT64_NV /;"	d
GL_INT64_VEC2_ARB	src/external/glcorearb.h	/^#define GL_INT64_VEC2_ARB /;"	d
GL_INT64_VEC2_NV	src/external/glcorearb.h	/^#define GL_INT64_VEC2_NV /;"	d
GL_INT64_VEC3_ARB	src/external/glcorearb.h	/^#define GL_INT64_VEC3_ARB /;"	d
GL_INT64_VEC3_NV	src/external/glcorearb.h	/^#define GL_INT64_VEC3_NV /;"	d
GL_INT64_VEC4_ARB	src/external/glcorearb.h	/^#define GL_INT64_VEC4_ARB /;"	d
GL_INT64_VEC4_NV	src/external/glcorearb.h	/^#define GL_INT64_VEC4_NV /;"	d
GL_INT8_NV	src/external/glcorearb.h	/^#define GL_INT8_NV /;"	d
GL_INT8_VEC2_NV	src/external/glcorearb.h	/^#define GL_INT8_VEC2_NV /;"	d
GL_INT8_VEC3_NV	src/external/glcorearb.h	/^#define GL_INT8_VEC3_NV /;"	d
GL_INT8_VEC4_NV	src/external/glcorearb.h	/^#define GL_INT8_VEC4_NV /;"	d
GL_INTEL_blackhole_render	src/external/glcorearb.h	/^#define GL_INTEL_blackhole_render /;"	d
GL_INTEL_conservative_rasterization	src/external/glcorearb.h	/^#define GL_INTEL_conservative_rasterization /;"	d
GL_INTEL_framebuffer_CMAA	src/external/glcorearb.h	/^#define GL_INTEL_framebuffer_CMAA /;"	d
GL_INTEL_performance_query	src/external/glcorearb.h	/^#define GL_INTEL_performance_query /;"	d
GL_INTERLEAVED_ATTRIBS	src/external/glcorearb.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	src/external/glcorearb.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INT_2_10_10_10_REV	src/external/glcorearb.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	src/external/glcorearb.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	src/external/glcorearb.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_2D	src/external/glcorearb.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	src/external/glcorearb.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_RECT	src/external/glcorearb.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_3D	src/external/glcorearb.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_BUFFER	src/external/glcorearb.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_CUBE	src/external/glcorearb.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_1D	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_2D	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_3D	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_BUFFER	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_CUBE	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	src/external/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_VEC2	src/external/glcorearb.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC3	src/external/glcorearb.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC4	src/external/glcorearb.h	/^#define GL_INT_VEC4 /;"	d
GL_INVALID_ENUM	src/external/glcorearb.h	/^#define GL_INVALID_ENUM /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	src/external/glcorearb.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_INDEX	src/external/glcorearb.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVALID_OPERATION	src/external/glcorearb.h	/^#define GL_INVALID_OPERATION /;"	d
GL_INVALID_VALUE	src/external/glcorearb.h	/^#define GL_INVALID_VALUE /;"	d
GL_INVERT	src/external/glcorearb.h	/^#define GL_INVERT /;"	d
GL_INVERT_OVG_NV	src/external/glcorearb.h	/^#define GL_INVERT_OVG_NV /;"	d
GL_INVERT_RGB_NV	src/external/glcorearb.h	/^#define GL_INVERT_RGB_NV /;"	d
GL_ISOLINES	src/external/glcorearb.h	/^#define GL_ISOLINES /;"	d
GL_IS_PER_PATCH	src/external/glcorearb.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_ROW_MAJOR	src/external/glcorearb.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_ITALIC_BIT_NV	src/external/glcorearb.h	/^#define GL_ITALIC_BIT_NV /;"	d
GL_KEEP	src/external/glcorearb.h	/^#define GL_KEEP /;"	d
GL_KHR_blend_equation_advanced	src/external/glcorearb.h	/^#define GL_KHR_blend_equation_advanced /;"	d
GL_KHR_blend_equation_advanced_coherent	src/external/glcorearb.h	/^#define GL_KHR_blend_equation_advanced_coherent /;"	d
GL_KHR_context_flush_control	src/external/glcorearb.h	/^#define GL_KHR_context_flush_control /;"	d
GL_KHR_debug	src/external/glcorearb.h	/^#define GL_KHR_debug /;"	d
GL_KHR_no_error	src/external/glcorearb.h	/^#define GL_KHR_no_error /;"	d
GL_KHR_parallel_shader_compile	src/external/glcorearb.h	/^#define GL_KHR_parallel_shader_compile /;"	d
GL_KHR_robust_buffer_access_behavior	src/external/glcorearb.h	/^#define GL_KHR_robust_buffer_access_behavior /;"	d
GL_KHR_robustness	src/external/glcorearb.h	/^#define GL_KHR_robustness /;"	d
GL_KHR_shader_subgroup	src/external/glcorearb.h	/^#define GL_KHR_shader_subgroup /;"	d
GL_KHR_texture_compression_astc_hdr	src/external/glcorearb.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	d
GL_KHR_texture_compression_astc_ldr	src/external/glcorearb.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_KHR_texture_compression_astc_sliced_3d	src/external/glcorearb.h	/^#define GL_KHR_texture_compression_astc_sliced_3d /;"	d
GL_LARGE_CCW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_LARGE_CCW_ARC_TO_NV /;"	d
GL_LARGE_CW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_LARGE_CW_ARC_TO_NV /;"	d
GL_LAST_VERTEX_CONVENTION	src/external/glcorearb.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAYER_PROVOKING_VERTEX	src/external/glcorearb.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LEFT	src/external/glcorearb.h	/^#define GL_LEFT /;"	d
GL_LEQUAL	src/external/glcorearb.h	/^#define GL_LEQUAL /;"	d
GL_LESS	src/external/glcorearb.h	/^#define GL_LESS /;"	d
GL_LIGHTEN_KHR	src/external/glcorearb.h	/^#define GL_LIGHTEN_KHR /;"	d
GL_LIGHTEN_NV	src/external/glcorearb.h	/^#define GL_LIGHTEN_NV /;"	d
GL_LINE	src/external/glcorearb.h	/^#define GL_LINE /;"	d
GL_LINEAR	src/external/glcorearb.h	/^#define GL_LINEAR /;"	d
GL_LINEARBURN_NV	src/external/glcorearb.h	/^#define GL_LINEARBURN_NV /;"	d
GL_LINEARDODGE_NV	src/external/glcorearb.h	/^#define GL_LINEARDODGE_NV /;"	d
GL_LINEARLIGHT_NV	src/external/glcorearb.h	/^#define GL_LINEARLIGHT_NV /;"	d
GL_LINEAR_MIPMAP_LINEAR	src/external/glcorearb.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	src/external/glcorearb.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINES	src/external/glcorearb.h	/^#define GL_LINES /;"	d
GL_LINES_ADJACENCY	src/external/glcorearb.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINES_ADJACENCY_ARB	src/external/glcorearb.h	/^#define GL_LINES_ADJACENCY_ARB /;"	d
GL_LINE_LOOP	src/external/glcorearb.h	/^#define GL_LINE_LOOP /;"	d
GL_LINE_SMOOTH	src/external/glcorearb.h	/^#define GL_LINE_SMOOTH /;"	d
GL_LINE_SMOOTH_HINT	src/external/glcorearb.h	/^#define GL_LINE_SMOOTH_HINT /;"	d
GL_LINE_STRIP	src/external/glcorearb.h	/^#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP_ADJACENCY	src/external/glcorearb.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_STRIP_ADJACENCY_ARB	src/external/glcorearb.h	/^#define GL_LINE_STRIP_ADJACENCY_ARB /;"	d
GL_LINE_TO_NV	src/external/glcorearb.h	/^#define GL_LINE_TO_NV /;"	d
GL_LINE_WIDTH	src/external/glcorearb.h	/^#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH_COMMAND_NV	src/external/glcorearb.h	/^#define GL_LINE_WIDTH_COMMAND_NV /;"	d
GL_LINE_WIDTH_GRANULARITY	src/external/glcorearb.h	/^#define GL_LINE_WIDTH_GRANULARITY /;"	d
GL_LINE_WIDTH_RANGE	src/external/glcorearb.h	/^#define GL_LINE_WIDTH_RANGE /;"	d
GL_LINK_STATUS	src/external/glcorearb.h	/^#define GL_LINK_STATUS /;"	d
GL_LOCATION	src/external/glcorearb.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_COMPONENT	src/external/glcorearb.h	/^#define GL_LOCATION_COMPONENT /;"	d
GL_LOCATION_INDEX	src/external/glcorearb.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOGIC_OP_MODE	src/external/glcorearb.h	/^#define GL_LOGIC_OP_MODE /;"	d
GL_LOSE_CONTEXT_ON_RESET	src/external/glcorearb.h	/^#define GL_LOSE_CONTEXT_ON_RESET /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	src/external/glcorearb.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOWER_LEFT	src/external/glcorearb.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOW_FLOAT	src/external/glcorearb.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	src/external/glcorearb.h	/^#define GL_LOW_INT /;"	d
GL_LUMINANCE16F_EXT	src/external/glcorearb.h	/^#define GL_LUMINANCE16F_EXT /;"	d
GL_LUMINANCE32F_EXT	src/external/glcorearb.h	/^#define GL_LUMINANCE32F_EXT /;"	d
GL_LUMINANCE8_ALPHA8_EXT	src/external/glcorearb.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_EXT	src/external/glcorearb.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE_ALPHA16F_EXT	src/external/glcorearb.h	/^#define GL_LUMINANCE_ALPHA16F_EXT /;"	d
GL_LUMINANCE_ALPHA32F_EXT	src/external/glcorearb.h	/^#define GL_LUMINANCE_ALPHA32F_EXT /;"	d
GL_MAJOR_VERSION	src/external/glcorearb.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MANUAL_GENERATE_MIPMAP	src/external/glcorearb.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP_COHERENT_BIT	src/external/glcorearb.h	/^#define GL_MAP_COHERENT_BIT /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	src/external/glcorearb.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	src/external/glcorearb.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	src/external/glcorearb.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_PERSISTENT_BIT	src/external/glcorearb.h	/^#define GL_MAP_PERSISTENT_BIT /;"	d
GL_MAP_READ_BIT	src/external/glcorearb.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	src/external/glcorearb.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	src/external/glcorearb.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MATRIX_STRIDE	src/external/glcorearb.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAX	src/external/glcorearb.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	src/external/glcorearb.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	src/external/glcorearb.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	src/external/glcorearb.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	src/external/glcorearb.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_CLIP_DISTANCES	src/external/glcorearb.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_COARSE_FRAGMENT_SAMPLES_NV	src/external/glcorearb.h	/^#define GL_MAX_COARSE_FRAGMENT_SAMPLES_NV /;"	d
GL_MAX_COLOR_ATTACHMENTS	src/external/glcorearb.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD	src/external/glcorearb.h	/^#define GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD /;"	d
GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD	src/external/glcorearb.h	/^#define GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	src/external/glcorearb.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	src/external/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	src/external/glcorearb.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CULL_DISTANCES	src/external/glcorearb.h	/^#define GL_MAX_CULL_DISTANCES /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	src/external/glcorearb.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	src/external/glcorearb.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	src/external/glcorearb.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	src/external/glcorearb.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	src/external/glcorearb.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEPTH	src/external/glcorearb.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD	src/external/glcorearb.h	/^#define GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	src/external/glcorearb.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DETACHED_BUFFERS_NV	src/external/glcorearb.h	/^#define GL_MAX_DETACHED_BUFFERS_NV /;"	d
GL_MAX_DETACHED_TEXTURES_NV	src/external/glcorearb.h	/^#define GL_MAX_DETACHED_TEXTURES_NV /;"	d
GL_MAX_DRAW_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_MESH_TASKS_COUNT_NV	src/external/glcorearb.h	/^#define GL_MAX_DRAW_MESH_TASKS_COUNT_NV /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	src/external/glcorearb.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_VERTICES	src/external/glcorearb.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENT_INDEX	src/external/glcorearb.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	src/external/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	src/external/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	src/external/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	src/external/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	src/external/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	src/external/glcorearb.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_HEIGHT	src/external/glcorearb.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	src/external/glcorearb.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_UNITS	src/external/glcorearb.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_INTEGER_SAMPLES	src/external/glcorearb.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_LABEL_LENGTH	src/external/glcorearb.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LAYERS	src/external/glcorearb.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_MESH_ATOMIC_COUNTERS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_ATOMIC_COUNTERS_NV /;"	d
GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV /;"	d
GL_MAX_MESH_IMAGE_UNIFORMS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_IMAGE_UNIFORMS_NV /;"	d
GL_MAX_MESH_OUTPUT_PRIMITIVES_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_OUTPUT_PRIMITIVES_NV /;"	d
GL_MAX_MESH_OUTPUT_VERTICES_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_OUTPUT_VERTICES_NV /;"	d
GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV /;"	d
GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV /;"	d
GL_MAX_MESH_UNIFORM_BLOCKS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_UNIFORM_BLOCKS_NV /;"	d
GL_MAX_MESH_UNIFORM_COMPONENTS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_UNIFORM_COMPONENTS_NV /;"	d
GL_MAX_MESH_VIEWS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_VIEWS_NV /;"	d
GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV /;"	d
GL_MAX_MESH_WORK_GROUP_SIZE_NV	src/external/glcorearb.h	/^#define GL_MAX_MESH_WORK_GROUP_SIZE_NV /;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	src/external/glcorearb.h	/^#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MAX_NAME_LENGTH	src/external/glcorearb.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	src/external/glcorearb.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	src/external/glcorearb.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_PATCH_VERTICES	src/external/glcorearb.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	src/external/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	src/external/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	src/external/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	src/external/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_RASTER_SAMPLES_EXT	src/external/glcorearb.h	/^#define GL_MAX_RASTER_SAMPLES_EXT /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	src/external/glcorearb.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE	src/external/glcorearb.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_SAMPLES	src/external/glcorearb.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLE_MASK_WORDS	src/external/glcorearb.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	src/external/glcorearb.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_MAX_SHADER_BUFFER_ADDRESS_NV /;"	d
GL_MAX_SHADER_COMPILER_THREADS_ARB	src/external/glcorearb.h	/^#define GL_MAX_SHADER_COMPILER_THREADS_ARB /;"	d
GL_MAX_SHADER_COMPILER_THREADS_KHR	src/external/glcorearb.h	/^#define GL_MAX_SHADER_COMPILER_THREADS_KHR /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	src/external/glcorearb.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	src/external/glcorearb.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	src/external/glcorearb.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	src/external/glcorearb.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	src/external/glcorearb.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV	src/external/glcorearb.h	/^#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV /;"	d
GL_MAX_SUBROUTINES	src/external/glcorearb.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	src/external/glcorearb.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TASK_ATOMIC_COUNTERS_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_ATOMIC_COUNTERS_NV /;"	d
GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV /;"	d
GL_MAX_TASK_IMAGE_UNIFORMS_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_IMAGE_UNIFORMS_NV /;"	d
GL_MAX_TASK_OUTPUT_COUNT_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_OUTPUT_COUNT_NV /;"	d
GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV /;"	d
GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV /;"	d
GL_MAX_TASK_UNIFORM_BLOCKS_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_UNIFORM_BLOCKS_NV /;"	d
GL_MAX_TASK_UNIFORM_COMPONENTS_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_UNIFORM_COMPONENTS_NV /;"	d
GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV /;"	d
GL_MAX_TASK_WORK_GROUP_SIZE_NV	src/external/glcorearb.h	/^#define GL_MAX_TASK_WORK_GROUP_SIZE_NV /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_GEN_LEVEL	src/external/glcorearb.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	src/external/glcorearb.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	src/external/glcorearb.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	src/external/glcorearb.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_LOD_BIAS	src/external/glcorearb.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY	src/external/glcorearb.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY /;"	d
GL_MAX_TEXTURE_SIZE	src/external/glcorearb.h	/^#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	src/external/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	src/external/glcorearb.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	src/external/glcorearb.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	src/external/glcorearb.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_FLOATS	src/external/glcorearb.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_VECTORS	src/external/glcorearb.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_STREAMS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	src/external/glcorearb.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_VIEWPORTS	src/external/glcorearb.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_VIEWPORT_DIMS	src/external/glcorearb.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MAX_VIEWS_OVR	src/external/glcorearb.h	/^#define GL_MAX_VIEWS_OVR /;"	d
GL_MAX_WIDTH	src/external/glcorearb.h	/^#define GL_MAX_WIDTH /;"	d
GL_MAX_WINDOW_RECTANGLES_EXT	src/external/glcorearb.h	/^#define GL_MAX_WINDOW_RECTANGLES_EXT /;"	d
GL_MEDIUM_FLOAT	src/external/glcorearb.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	src/external/glcorearb.h	/^#define GL_MEDIUM_INT /;"	d
GL_MEMORY_ATTACHABLE_ALIGNMENT_NV	src/external/glcorearb.h	/^#define GL_MEMORY_ATTACHABLE_ALIGNMENT_NV /;"	d
GL_MEMORY_ATTACHABLE_NV	src/external/glcorearb.h	/^#define GL_MEMORY_ATTACHABLE_NV /;"	d
GL_MEMORY_ATTACHABLE_SIZE_NV	src/external/glcorearb.h	/^#define GL_MEMORY_ATTACHABLE_SIZE_NV /;"	d
GL_MESA_framebuffer_flip_x	src/external/glcorearb.h	/^#define GL_MESA_framebuffer_flip_x /;"	d
GL_MESA_framebuffer_flip_y	src/external/glcorearb.h	/^#define GL_MESA_framebuffer_flip_y /;"	d
GL_MESA_framebuffer_swap_xy	src/external/glcorearb.h	/^#define GL_MESA_framebuffer_swap_xy /;"	d
GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV	src/external/glcorearb.h	/^#define GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV /;"	d
GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV	src/external/glcorearb.h	/^#define GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV /;"	d
GL_MESH_OUTPUT_TYPE_NV	src/external/glcorearb.h	/^#define GL_MESH_OUTPUT_TYPE_NV /;"	d
GL_MESH_PRIMITIVES_OUT_NV	src/external/glcorearb.h	/^#define GL_MESH_PRIMITIVES_OUT_NV /;"	d
GL_MESH_SHADER_BIT_NV	src/external/glcorearb.h	/^#define GL_MESH_SHADER_BIT_NV /;"	d
GL_MESH_SHADER_NV	src/external/glcorearb.h	/^#define GL_MESH_SHADER_NV /;"	d
GL_MESH_SUBROUTINE_NV	src/external/glcorearb.h	/^#define GL_MESH_SUBROUTINE_NV /;"	d
GL_MESH_SUBROUTINE_UNIFORM_NV	src/external/glcorearb.h	/^#define GL_MESH_SUBROUTINE_UNIFORM_NV /;"	d
GL_MESH_VERTICES_OUT_NV	src/external/glcorearb.h	/^#define GL_MESH_VERTICES_OUT_NV /;"	d
GL_MESH_WORK_GROUP_SIZE_NV	src/external/glcorearb.h	/^#define GL_MESH_WORK_GROUP_SIZE_NV /;"	d
GL_MIN	src/external/glcorearb.h	/^#define GL_MIN /;"	d
GL_MINOR_VERSION	src/external/glcorearb.h	/^#define GL_MINOR_VERSION /;"	d
GL_MINUS_CLAMPED_NV	src/external/glcorearb.h	/^#define GL_MINUS_CLAMPED_NV /;"	d
GL_MINUS_NV	src/external/glcorearb.h	/^#define GL_MINUS_NV /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	src/external/glcorearb.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	src/external/glcorearb.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	src/external/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	src/external/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	src/external/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	src/external/glcorearb.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	src/external/glcorearb.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIPMAP	src/external/glcorearb.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	src/external/glcorearb.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT_ARB	src/external/glcorearb.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	d
GL_MIRROR_CLAMP_TO_EDGE	src/external/glcorearb.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	d
GL_MITER_REVERT_NV	src/external/glcorearb.h	/^#define GL_MITER_REVERT_NV /;"	d
GL_MITER_TRUNCATE_NV	src/external/glcorearb.h	/^#define GL_MITER_TRUNCATE_NV /;"	d
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV	src/external/glcorearb.h	/^#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV /;"	d
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV	src/external/glcorearb.h	/^#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV /;"	d
GL_MOVE_TO_CONTINUES_NV	src/external/glcorearb.h	/^#define GL_MOVE_TO_CONTINUES_NV /;"	d
GL_MOVE_TO_NV	src/external/glcorearb.h	/^#define GL_MOVE_TO_NV /;"	d
GL_MOVE_TO_RESETS_NV	src/external/glcorearb.h	/^#define GL_MOVE_TO_RESETS_NV /;"	d
GL_MULTIPLY_KHR	src/external/glcorearb.h	/^#define GL_MULTIPLY_KHR /;"	d
GL_MULTIPLY_NV	src/external/glcorearb.h	/^#define GL_MULTIPLY_NV /;"	d
GL_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLES_NV	src/external/glcorearb.h	/^#define GL_MULTISAMPLES_NV /;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	src/external/glcorearb.h	/^#define GL_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB	src/external/glcorearb.h	/^#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB /;"	d
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB	src/external/glcorearb.h	/^#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB /;"	d
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT	src/external/glcorearb.h	/^#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT /;"	d
GL_NAMED_STRING_LENGTH_ARB	src/external/glcorearb.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	src/external/glcorearb.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	src/external/glcorearb.h	/^#define GL_NAME_LENGTH /;"	d
GL_NAND	src/external/glcorearb.h	/^#define GL_NAND /;"	d
GL_NEAREST	src/external/glcorearb.h	/^#define GL_NEAREST /;"	d
GL_NEAREST_MIPMAP_LINEAR	src/external/glcorearb.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	src/external/glcorearb.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEGATIVE_ONE_TO_ONE	src/external/glcorearb.h	/^#define GL_NEGATIVE_ONE_TO_ONE /;"	d
GL_NEVER	src/external/glcorearb.h	/^#define GL_NEVER /;"	d
GL_NICEST	src/external/glcorearb.h	/^#define GL_NICEST /;"	d
GL_NONE	src/external/glcorearb.h	/^#define GL_NONE /;"	d
GL_NOOP	src/external/glcorearb.h	/^#define GL_NOOP /;"	d
GL_NOP_COMMAND_NV	src/external/glcorearb.h	/^#define GL_NOP_COMMAND_NV /;"	d
GL_NOR	src/external/glcorearb.h	/^#define GL_NOR /;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_NORMAL_ARRAY_ADDRESS_NV /;"	d
GL_NORMAL_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_NORMAL_ARRAY_LENGTH_NV /;"	d
GL_NOTEQUAL	src/external/glcorearb.h	/^#define GL_NOTEQUAL /;"	d
GL_NO_ERROR	src/external/glcorearb.h	/^#define GL_NO_ERROR /;"	d
GL_NO_RESET_NOTIFICATION	src/external/glcorearb.h	/^#define GL_NO_RESET_NOTIFICATION /;"	d
GL_NO_RESET_NOTIFICATION_ARB	src/external/glcorearb.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NUM_ACTIVE_VARIABLES	src/external/glcorearb.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	src/external/glcorearb.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	src/external/glcorearb.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_EXTENSIONS	src/external/glcorearb.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	src/external/glcorearb.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_SAMPLE_COUNTS	src/external/glcorearb.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	src/external/glcorearb.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	src/external/glcorearb.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_SPARSE_LEVELS_ARB	src/external/glcorearb.h	/^#define GL_NUM_SPARSE_LEVELS_ARB /;"	d
GL_NUM_SPIR_V_EXTENSIONS	src/external/glcorearb.h	/^#define GL_NUM_SPIR_V_EXTENSIONS /;"	d
GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD	src/external/glcorearb.h	/^#define GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	src/external/glcorearb.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	d
GL_NUM_WINDOW_RECTANGLES_EXT	src/external/glcorearb.h	/^#define GL_NUM_WINDOW_RECTANGLES_EXT /;"	d
GL_NV_bindless_multi_draw_indirect	src/external/glcorearb.h	/^#define GL_NV_bindless_multi_draw_indirect /;"	d
GL_NV_bindless_multi_draw_indirect_count	src/external/glcorearb.h	/^#define GL_NV_bindless_multi_draw_indirect_count /;"	d
GL_NV_bindless_texture	src/external/glcorearb.h	/^#define GL_NV_bindless_texture /;"	d
GL_NV_blend_equation_advanced	src/external/glcorearb.h	/^#define GL_NV_blend_equation_advanced /;"	d
GL_NV_blend_equation_advanced_coherent	src/external/glcorearb.h	/^#define GL_NV_blend_equation_advanced_coherent /;"	d
GL_NV_blend_minmax_factor	src/external/glcorearb.h	/^#define GL_NV_blend_minmax_factor /;"	d
GL_NV_clip_space_w_scaling	src/external/glcorearb.h	/^#define GL_NV_clip_space_w_scaling /;"	d
GL_NV_command_list	src/external/glcorearb.h	/^#define GL_NV_command_list /;"	d
GL_NV_compute_shader_derivatives	src/external/glcorearb.h	/^#define GL_NV_compute_shader_derivatives /;"	d
GL_NV_conditional_render	src/external/glcorearb.h	/^#define GL_NV_conditional_render /;"	d
GL_NV_conservative_raster	src/external/glcorearb.h	/^#define GL_NV_conservative_raster /;"	d
GL_NV_conservative_raster_dilate	src/external/glcorearb.h	/^#define GL_NV_conservative_raster_dilate /;"	d
GL_NV_conservative_raster_pre_snap	src/external/glcorearb.h	/^#define GL_NV_conservative_raster_pre_snap /;"	d
GL_NV_conservative_raster_pre_snap_triangles	src/external/glcorearb.h	/^#define GL_NV_conservative_raster_pre_snap_triangles /;"	d
GL_NV_conservative_raster_underestimation	src/external/glcorearb.h	/^#define GL_NV_conservative_raster_underestimation /;"	d
GL_NV_depth_buffer_float	src/external/glcorearb.h	/^#define GL_NV_depth_buffer_float /;"	d
GL_NV_draw_vulkan_image	src/external/glcorearb.h	/^#define GL_NV_draw_vulkan_image /;"	d
GL_NV_fill_rectangle	src/external/glcorearb.h	/^#define GL_NV_fill_rectangle /;"	d
GL_NV_fragment_coverage_to_color	src/external/glcorearb.h	/^#define GL_NV_fragment_coverage_to_color /;"	d
GL_NV_fragment_shader_barycentric	src/external/glcorearb.h	/^#define GL_NV_fragment_shader_barycentric /;"	d
GL_NV_fragment_shader_interlock	src/external/glcorearb.h	/^#define GL_NV_fragment_shader_interlock /;"	d
GL_NV_framebuffer_mixed_samples	src/external/glcorearb.h	/^#define GL_NV_framebuffer_mixed_samples /;"	d
GL_NV_framebuffer_multisample_coverage	src/external/glcorearb.h	/^#define GL_NV_framebuffer_multisample_coverage /;"	d
GL_NV_geometry_shader_passthrough	src/external/glcorearb.h	/^#define GL_NV_geometry_shader_passthrough /;"	d
GL_NV_gpu_shader5	src/external/glcorearb.h	/^#define GL_NV_gpu_shader5 /;"	d
GL_NV_internalformat_sample_query	src/external/glcorearb.h	/^#define GL_NV_internalformat_sample_query /;"	d
GL_NV_memory_attachment	src/external/glcorearb.h	/^#define GL_NV_memory_attachment /;"	d
GL_NV_memory_object_sparse	src/external/glcorearb.h	/^#define GL_NV_memory_object_sparse /;"	d
GL_NV_mesh_shader	src/external/glcorearb.h	/^#define GL_NV_mesh_shader /;"	d
GL_NV_path_rendering	src/external/glcorearb.h	/^#define GL_NV_path_rendering /;"	d
GL_NV_path_rendering_shared_edge	src/external/glcorearb.h	/^#define GL_NV_path_rendering_shared_edge /;"	d
GL_NV_primitive_shading_rate	src/external/glcorearb.h	/^#define GL_NV_primitive_shading_rate /;"	d
GL_NV_representative_fragment_test	src/external/glcorearb.h	/^#define GL_NV_representative_fragment_test /;"	d
GL_NV_sample_locations	src/external/glcorearb.h	/^#define GL_NV_sample_locations /;"	d
GL_NV_sample_mask_override_coverage	src/external/glcorearb.h	/^#define GL_NV_sample_mask_override_coverage /;"	d
GL_NV_scissor_exclusive	src/external/glcorearb.h	/^#define GL_NV_scissor_exclusive /;"	d
GL_NV_shader_atomic_counters	src/external/glcorearb.h	/^#define GL_NV_shader_atomic_counters /;"	d
GL_NV_shader_atomic_float	src/external/glcorearb.h	/^#define GL_NV_shader_atomic_float /;"	d
GL_NV_shader_atomic_float64	src/external/glcorearb.h	/^#define GL_NV_shader_atomic_float64 /;"	d
GL_NV_shader_atomic_fp16_vector	src/external/glcorearb.h	/^#define GL_NV_shader_atomic_fp16_vector /;"	d
GL_NV_shader_atomic_int64	src/external/glcorearb.h	/^#define GL_NV_shader_atomic_int64 /;"	d
GL_NV_shader_buffer_load	src/external/glcorearb.h	/^#define GL_NV_shader_buffer_load /;"	d
GL_NV_shader_buffer_store	src/external/glcorearb.h	/^#define GL_NV_shader_buffer_store /;"	d
GL_NV_shader_subgroup_partitioned	src/external/glcorearb.h	/^#define GL_NV_shader_subgroup_partitioned /;"	d
GL_NV_shader_texture_footprint	src/external/glcorearb.h	/^#define GL_NV_shader_texture_footprint /;"	d
GL_NV_shader_thread_group	src/external/glcorearb.h	/^#define GL_NV_shader_thread_group /;"	d
GL_NV_shader_thread_shuffle	src/external/glcorearb.h	/^#define GL_NV_shader_thread_shuffle /;"	d
GL_NV_shading_rate_image	src/external/glcorearb.h	/^#define GL_NV_shading_rate_image /;"	d
GL_NV_stereo_view_rendering	src/external/glcorearb.h	/^#define GL_NV_stereo_view_rendering /;"	d
GL_NV_texture_barrier	src/external/glcorearb.h	/^#define GL_NV_texture_barrier /;"	d
GL_NV_texture_rectangle_compressed	src/external/glcorearb.h	/^#define GL_NV_texture_rectangle_compressed /;"	d
GL_NV_uniform_buffer_unified_memory	src/external/glcorearb.h	/^#define GL_NV_uniform_buffer_unified_memory /;"	d
GL_NV_vertex_attrib_integer_64bit	src/external/glcorearb.h	/^#define GL_NV_vertex_attrib_integer_64bit /;"	d
GL_NV_vertex_buffer_unified_memory	src/external/glcorearb.h	/^#define GL_NV_vertex_buffer_unified_memory /;"	d
GL_NV_viewport_array2	src/external/glcorearb.h	/^#define GL_NV_viewport_array2 /;"	d
GL_NV_viewport_swizzle	src/external/glcorearb.h	/^#define GL_NV_viewport_swizzle /;"	d
GL_OBJECT_TYPE	src/external/glcorearb.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OFFSET	src/external/glcorearb.h	/^#define GL_OFFSET /;"	d
GL_ONE	src/external/glcorearb.h	/^#define GL_ONE /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	src/external/glcorearb.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	src/external/glcorearb.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_DST_ALPHA	src/external/glcorearb.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	src/external/glcorearb.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC1_ALPHA	src/external/glcorearb.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	src/external/glcorearb.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC_ALPHA	src/external/glcorearb.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	src/external/glcorearb.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_OR	src/external/glcorearb.h	/^#define GL_OR /;"	d
GL_OR_INVERTED	src/external/glcorearb.h	/^#define GL_OR_INVERTED /;"	d
GL_OR_REVERSE	src/external/glcorearb.h	/^#define GL_OR_REVERSE /;"	d
GL_OUT_OF_MEMORY	src/external/glcorearb.h	/^#define GL_OUT_OF_MEMORY /;"	d
GL_OVERLAY_KHR	src/external/glcorearb.h	/^#define GL_OVERLAY_KHR /;"	d
GL_OVERLAY_NV	src/external/glcorearb.h	/^#define GL_OVERLAY_NV /;"	d
GL_OVR_multiview	src/external/glcorearb.h	/^#define GL_OVR_multiview /;"	d
GL_OVR_multiview2	src/external/glcorearb.h	/^#define GL_OVR_multiview2 /;"	d
GL_PACK_ALIGNMENT	src/external/glcorearb.h	/^#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	src/external/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	src/external/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	src/external/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	src/external/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_HEIGHT	src/external/glcorearb.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_LSB_FIRST	src/external/glcorearb.h	/^#define GL_PACK_LSB_FIRST /;"	d
GL_PACK_ROW_LENGTH	src/external/glcorearb.h	/^#define GL_PACK_ROW_LENGTH /;"	d
GL_PACK_SKIP_IMAGES	src/external/glcorearb.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_PIXELS	src/external/glcorearb.h	/^#define GL_PACK_SKIP_PIXELS /;"	d
GL_PACK_SKIP_ROWS	src/external/glcorearb.h	/^#define GL_PACK_SKIP_ROWS /;"	d
GL_PACK_SWAP_BYTES	src/external/glcorearb.h	/^#define GL_PACK_SWAP_BYTES /;"	d
GL_PARAMETER_BUFFER	src/external/glcorearb.h	/^#define GL_PARAMETER_BUFFER /;"	d
GL_PARAMETER_BUFFER_ARB	src/external/glcorearb.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	d
GL_PARAMETER_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_PARAMETER_BUFFER_BINDING /;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	src/external/glcorearb.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	d
GL_PATCHES	src/external/glcorearb.h	/^#define GL_PATCHES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	src/external/glcorearb.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	src/external/glcorearb.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	src/external/glcorearb.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PATH_CLIENT_LENGTH_NV	src/external/glcorearb.h	/^#define GL_PATH_CLIENT_LENGTH_NV /;"	d
GL_PATH_COMMAND_COUNT_NV	src/external/glcorearb.h	/^#define GL_PATH_COMMAND_COUNT_NV /;"	d
GL_PATH_COMPUTED_LENGTH_NV	src/external/glcorearb.h	/^#define GL_PATH_COMPUTED_LENGTH_NV /;"	d
GL_PATH_COORD_COUNT_NV	src/external/glcorearb.h	/^#define GL_PATH_COORD_COUNT_NV /;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	src/external/glcorearb.h	/^#define GL_PATH_COVER_DEPTH_FUNC_NV /;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	src/external/glcorearb.h	/^#define GL_PATH_DASH_ARRAY_COUNT_NV /;"	d
GL_PATH_DASH_CAPS_NV	src/external/glcorearb.h	/^#define GL_PATH_DASH_CAPS_NV /;"	d
GL_PATH_DASH_OFFSET_NV	src/external/glcorearb.h	/^#define GL_PATH_DASH_OFFSET_NV /;"	d
GL_PATH_DASH_OFFSET_RESET_NV	src/external/glcorearb.h	/^#define GL_PATH_DASH_OFFSET_RESET_NV /;"	d
GL_PATH_END_CAPS_NV	src/external/glcorearb.h	/^#define GL_PATH_END_CAPS_NV /;"	d
GL_PATH_ERROR_POSITION_NV	src/external/glcorearb.h	/^#define GL_PATH_ERROR_POSITION_NV /;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	src/external/glcorearb.h	/^#define GL_PATH_FILL_BOUNDING_BOX_NV /;"	d
GL_PATH_FILL_COVER_MODE_NV	src/external/glcorearb.h	/^#define GL_PATH_FILL_COVER_MODE_NV /;"	d
GL_PATH_FILL_MASK_NV	src/external/glcorearb.h	/^#define GL_PATH_FILL_MASK_NV /;"	d
GL_PATH_FILL_MODE_NV	src/external/glcorearb.h	/^#define GL_PATH_FILL_MODE_NV /;"	d
GL_PATH_FORMAT_PS_NV	src/external/glcorearb.h	/^#define GL_PATH_FORMAT_PS_NV /;"	d
GL_PATH_FORMAT_SVG_NV	src/external/glcorearb.h	/^#define GL_PATH_FORMAT_SVG_NV /;"	d
GL_PATH_GEN_COEFF_NV	src/external/glcorearb.h	/^#define GL_PATH_GEN_COEFF_NV /;"	d
GL_PATH_GEN_COMPONENTS_NV	src/external/glcorearb.h	/^#define GL_PATH_GEN_COMPONENTS_NV /;"	d
GL_PATH_GEN_MODE_NV	src/external/glcorearb.h	/^#define GL_PATH_GEN_MODE_NV /;"	d
GL_PATH_INITIAL_DASH_CAP_NV	src/external/glcorearb.h	/^#define GL_PATH_INITIAL_DASH_CAP_NV /;"	d
GL_PATH_INITIAL_END_CAP_NV	src/external/glcorearb.h	/^#define GL_PATH_INITIAL_END_CAP_NV /;"	d
GL_PATH_JOIN_STYLE_NV	src/external/glcorearb.h	/^#define GL_PATH_JOIN_STYLE_NV /;"	d
GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV	src/external/glcorearb.h	/^#define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV /;"	d
GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV	src/external/glcorearb.h	/^#define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV /;"	d
GL_PATH_MITER_LIMIT_NV	src/external/glcorearb.h	/^#define GL_PATH_MITER_LIMIT_NV /;"	d
GL_PATH_MODELVIEW_MATRIX_NV	src/external/glcorearb.h	/^#define GL_PATH_MODELVIEW_MATRIX_NV /;"	d
GL_PATH_MODELVIEW_NV	src/external/glcorearb.h	/^#define GL_PATH_MODELVIEW_NV /;"	d
GL_PATH_MODELVIEW_STACK_DEPTH_NV	src/external/glcorearb.h	/^#define GL_PATH_MODELVIEW_STACK_DEPTH_NV /;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	src/external/glcorearb.h	/^#define GL_PATH_OBJECT_BOUNDING_BOX_NV /;"	d
GL_PATH_PROJECTION_MATRIX_NV	src/external/glcorearb.h	/^#define GL_PATH_PROJECTION_MATRIX_NV /;"	d
GL_PATH_PROJECTION_NV	src/external/glcorearb.h	/^#define GL_PATH_PROJECTION_NV /;"	d
GL_PATH_PROJECTION_STACK_DEPTH_NV	src/external/glcorearb.h	/^#define GL_PATH_PROJECTION_STACK_DEPTH_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	src/external/glcorearb.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	src/external/glcorearb.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV /;"	d
GL_PATH_STENCIL_FUNC_NV	src/external/glcorearb.h	/^#define GL_PATH_STENCIL_FUNC_NV /;"	d
GL_PATH_STENCIL_REF_NV	src/external/glcorearb.h	/^#define GL_PATH_STENCIL_REF_NV /;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	src/external/glcorearb.h	/^#define GL_PATH_STENCIL_VALUE_MASK_NV /;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	src/external/glcorearb.h	/^#define GL_PATH_STROKE_BOUNDING_BOX_NV /;"	d
GL_PATH_STROKE_COVER_MODE_NV	src/external/glcorearb.h	/^#define GL_PATH_STROKE_COVER_MODE_NV /;"	d
GL_PATH_STROKE_MASK_NV	src/external/glcorearb.h	/^#define GL_PATH_STROKE_MASK_NV /;"	d
GL_PATH_STROKE_WIDTH_NV	src/external/glcorearb.h	/^#define GL_PATH_STROKE_WIDTH_NV /;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	src/external/glcorearb.h	/^#define GL_PATH_TERMINAL_DASH_CAP_NV /;"	d
GL_PATH_TERMINAL_END_CAP_NV	src/external/glcorearb.h	/^#define GL_PATH_TERMINAL_END_CAP_NV /;"	d
GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV	src/external/glcorearb.h	/^#define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV /;"	d
GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV	src/external/glcorearb.h	/^#define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV /;"	d
GL_PERCENTAGE_AMD	src/external/glcorearb.h	/^#define GL_PERCENTAGE_AMD /;"	d
GL_PERFMON_RESULT_AMD	src/external/glcorearb.h	/^#define GL_PERFMON_RESULT_AMD /;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	src/external/glcorearb.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	d
GL_PERFMON_RESULT_SIZE_AMD	src/external/glcorearb.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL /;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_EVENT_INTEL /;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL /;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL /;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_DONOT_FLUSH_INTEL /;"	d
GL_PERFQUERY_FLUSH_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_FLUSH_INTEL /;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL /;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL /;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL /;"	d
GL_PERFQUERY_WAIT_INTEL	src/external/glcorearb.h	/^#define GL_PERFQUERY_WAIT_INTEL /;"	d
GL_PINLIGHT_NV	src/external/glcorearb.h	/^#define GL_PINLIGHT_NV /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_PACK_BUFFER	src/external/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_ARB	src/external/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	src/external/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER	src/external/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	src/external/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	src/external/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	d
GL_PLUS_CLAMPED_ALPHA_NV	src/external/glcorearb.h	/^#define GL_PLUS_CLAMPED_ALPHA_NV /;"	d
GL_PLUS_CLAMPED_NV	src/external/glcorearb.h	/^#define GL_PLUS_CLAMPED_NV /;"	d
GL_PLUS_DARKER_NV	src/external/glcorearb.h	/^#define GL_PLUS_DARKER_NV /;"	d
GL_PLUS_NV	src/external/glcorearb.h	/^#define GL_PLUS_NV /;"	d
GL_POINT	src/external/glcorearb.h	/^#define GL_POINT /;"	d
GL_POINTS	src/external/glcorearb.h	/^#define GL_POINTS /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	src/external/glcorearb.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_SIZE	src/external/glcorearb.h	/^#define GL_POINT_SIZE /;"	d
GL_POINT_SIZE_GRANULARITY	src/external/glcorearb.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_RANGE	src/external/glcorearb.h	/^#define GL_POINT_SIZE_RANGE /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	src/external/glcorearb.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POLYGON_MODE	src/external/glcorearb.h	/^#define GL_POLYGON_MODE /;"	d
GL_POLYGON_OFFSET_CLAMP	src/external/glcorearb.h	/^#define GL_POLYGON_OFFSET_CLAMP /;"	d
GL_POLYGON_OFFSET_CLAMP_EXT	src/external/glcorearb.h	/^#define GL_POLYGON_OFFSET_CLAMP_EXT /;"	d
GL_POLYGON_OFFSET_COMMAND_NV	src/external/glcorearb.h	/^#define GL_POLYGON_OFFSET_COMMAND_NV /;"	d
GL_POLYGON_OFFSET_FACTOR	src/external/glcorearb.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FILL	src/external/glcorearb.h	/^#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_LINE	src/external/glcorearb.h	/^#define GL_POLYGON_OFFSET_LINE /;"	d
GL_POLYGON_OFFSET_POINT	src/external/glcorearb.h	/^#define GL_POLYGON_OFFSET_POINT /;"	d
GL_POLYGON_OFFSET_UNITS	src/external/glcorearb.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_SMOOTH	src/external/glcorearb.h	/^#define GL_POLYGON_SMOOTH /;"	d
GL_POLYGON_SMOOTH_HINT	src/external/glcorearb.h	/^#define GL_POLYGON_SMOOTH_HINT /;"	d
GL_PRIMITIVES_GENERATED	src/external/glcorearb.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_SUBMITTED	src/external/glcorearb.h	/^#define GL_PRIMITIVES_SUBMITTED /;"	d
GL_PRIMITIVES_SUBMITTED_ARB	src/external/glcorearb.h	/^#define GL_PRIMITIVES_SUBMITTED_ARB /;"	d
GL_PRIMITIVE_BOUNDING_BOX_ARB	src/external/glcorearb.h	/^#define GL_PRIMITIVE_BOUNDING_BOX_ARB /;"	d
GL_PRIMITIVE_RESTART	src/external/glcorearb.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	src/external/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	src/external/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	d
GL_PRIMITIVE_RESTART_INDEX	src/external/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PROGRAM	src/external/glcorearb.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB	src/external/glcorearb.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV	src/external/glcorearb.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB	src/external/glcorearb.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV	src/external/glcorearb.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV /;"	d
GL_PROGRAM_BINARY_FORMATS	src/external/glcorearb.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_LENGTH	src/external/glcorearb.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	src/external/glcorearb.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_INPUT	src/external/glcorearb.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_MATRIX_EXT	src/external/glcorearb.h	/^#define GL_PROGRAM_MATRIX_EXT /;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	src/external/glcorearb.h	/^#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT /;"	d
GL_PROGRAM_OBJECT_EXT	src/external/glcorearb.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	d
GL_PROGRAM_OUTPUT	src/external/glcorearb.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PIPELINE	src/external/glcorearb.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	src/external/glcorearb.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	src/external/glcorearb.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	d
GL_PROGRAM_POINT_SIZE	src/external/glcorearb.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_POINT_SIZE_ARB	src/external/glcorearb.h	/^#define GL_PROGRAM_POINT_SIZE_ARB /;"	d
GL_PROGRAM_SEPARABLE	src/external/glcorearb.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROVOKING_VERTEX	src/external/glcorearb.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROXY_TEXTURE_1D	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_1D /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_3D	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE	src/external/glcorearb.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_QUADRATIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_QUADRATIC_CURVE_TO_NV /;"	d
GL_QUADS	src/external/glcorearb.h	/^#define GL_QUADS /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	src/external/glcorearb.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUERY	src/external/glcorearb.h	/^#define GL_QUERY /;"	d
GL_QUERY_BUFFER	src/external/glcorearb.h	/^#define GL_QUERY_BUFFER /;"	d
GL_QUERY_BUFFER_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	d
GL_QUERY_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_QUERY_BUFFER_BINDING /;"	d
GL_QUERY_BY_REGION_NO_WAIT	src/external/glcorearb.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	src/external/glcorearb.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	src/external/glcorearb.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_NV /;"	d
GL_QUERY_BY_REGION_WAIT	src/external/glcorearb.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	src/external/glcorearb.h	/^#define GL_QUERY_BY_REGION_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_WAIT_NV	src/external/glcorearb.h	/^#define GL_QUERY_BY_REGION_WAIT_NV /;"	d
GL_QUERY_COUNTER_BITS	src/external/glcorearb.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_NO_WAIT	src/external/glcorearb.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT_INVERTED	src/external/glcorearb.h	/^#define GL_QUERY_NO_WAIT_INVERTED /;"	d
GL_QUERY_NO_WAIT_NV	src/external/glcorearb.h	/^#define GL_QUERY_NO_WAIT_NV /;"	d
GL_QUERY_OBJECT_EXT	src/external/glcorearb.h	/^#define GL_QUERY_OBJECT_EXT /;"	d
GL_QUERY_RESULT	src/external/glcorearb.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_AVAILABLE	src/external/glcorearb.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_NO_WAIT	src/external/glcorearb.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	d
GL_QUERY_TARGET	src/external/glcorearb.h	/^#define GL_QUERY_TARGET /;"	d
GL_QUERY_WAIT	src/external/glcorearb.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT_INVERTED	src/external/glcorearb.h	/^#define GL_QUERY_WAIT_INVERTED /;"	d
GL_QUERY_WAIT_NV	src/external/glcorearb.h	/^#define GL_QUERY_WAIT_NV /;"	d
GL_R11F_G11F_B10F	src/external/glcorearb.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R16	src/external/glcorearb.h	/^#define GL_R16 /;"	d
GL_R16F	src/external/glcorearb.h	/^#define GL_R16F /;"	d
GL_R16F_EXT	src/external/glcorearb.h	/^#define GL_R16F_EXT /;"	d
GL_R16I	src/external/glcorearb.h	/^#define GL_R16I /;"	d
GL_R16UI	src/external/glcorearb.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	src/external/glcorearb.h	/^#define GL_R16_SNORM /;"	d
GL_R32F	src/external/glcorearb.h	/^#define GL_R32F /;"	d
GL_R32F_EXT	src/external/glcorearb.h	/^#define GL_R32F_EXT /;"	d
GL_R32I	src/external/glcorearb.h	/^#define GL_R32I /;"	d
GL_R32UI	src/external/glcorearb.h	/^#define GL_R32UI /;"	d
GL_R3_G3_B2	src/external/glcorearb.h	/^#define GL_R3_G3_B2 /;"	d
GL_R8	src/external/glcorearb.h	/^#define GL_R8 /;"	d
GL_R8I	src/external/glcorearb.h	/^#define GL_R8I /;"	d
GL_R8UI	src/external/glcorearb.h	/^#define GL_R8UI /;"	d
GL_R8_EXT	src/external/glcorearb.h	/^#define GL_R8_EXT /;"	d
GL_R8_SNORM	src/external/glcorearb.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	src/external/glcorearb.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT	src/external/glcorearb.h	/^#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT /;"	d
GL_RASTER_MULTISAMPLE_EXT	src/external/glcorearb.h	/^#define GL_RASTER_MULTISAMPLE_EXT /;"	d
GL_RASTER_SAMPLES_EXT	src/external/glcorearb.h	/^#define GL_RASTER_SAMPLES_EXT /;"	d
GL_READ_BUFFER	src/external/glcorearb.h	/^#define GL_READ_BUFFER /;"	d
GL_READ_FRAMEBUFFER	src/external/glcorearb.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_BINDING	src/external/glcorearb.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_ONLY	src/external/glcorearb.h	/^#define GL_READ_ONLY /;"	d
GL_READ_PIXELS	src/external/glcorearb.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	src/external/glcorearb.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	src/external/glcorearb.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_WRITE	src/external/glcorearb.h	/^#define GL_READ_WRITE /;"	d
GL_RECT_NV	src/external/glcorearb.h	/^#define GL_RECT_NV /;"	d
GL_RED	src/external/glcorearb.h	/^#define GL_RED /;"	d
GL_RED_INTEGER	src/external/glcorearb.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_NV	src/external/glcorearb.h	/^#define GL_RED_NV /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	src/external/glcorearb.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	src/external/glcorearb.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	src/external/glcorearb.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_MESH_SHADER_NV	src/external/glcorearb.h	/^#define GL_REFERENCED_BY_MESH_SHADER_NV /;"	d
GL_REFERENCED_BY_TASK_SHADER_NV	src/external/glcorearb.h	/^#define GL_REFERENCED_BY_TASK_SHADER_NV /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	src/external/glcorearb.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	src/external/glcorearb.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	src/external/glcorearb.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_RELATIVE_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_ARC_TO_NV /;"	d
GL_RELATIVE_CONIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_CONIC_CURVE_TO_NV /;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV /;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_LARGE_CW_ARC_TO_NV /;"	d
GL_RELATIVE_LINE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_LINE_TO_NV /;"	d
GL_RELATIVE_MOVE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_MOVE_TO_NV /;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_RECT_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_RECT_NV /;"	d
GL_RELATIVE_ROUNDED_RECT2_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_ROUNDED_RECT2_NV /;"	d
GL_RELATIVE_ROUNDED_RECT4_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_ROUNDED_RECT4_NV /;"	d
GL_RELATIVE_ROUNDED_RECT8_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_ROUNDED_RECT8_NV /;"	d
GL_RELATIVE_ROUNDED_RECT_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_ROUNDED_RECT_NV /;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_SMALL_CW_ARC_TO_NV /;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	src/external/glcorearb.h	/^#define GL_RELATIVE_VERTICAL_LINE_TO_NV /;"	d
GL_RENDERBUFFER	src/external/glcorearb.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_BINDING	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BLUE_SIZE	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_COLOR_SAMPLES_NV /;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_HEIGHT	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_RED_SIZE	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_SAMPLES	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STORAGE_SAMPLES_AMD	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_STORAGE_SAMPLES_AMD /;"	d
GL_RENDERBUFFER_WIDTH	src/external/glcorearb.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERER	src/external/glcorearb.h	/^#define GL_RENDERER /;"	d
GL_REPEAT	src/external/glcorearb.h	/^#define GL_REPEAT /;"	d
GL_REPLACE	src/external/glcorearb.h	/^#define GL_REPLACE /;"	d
GL_REPRESENTATIVE_FRAGMENT_TEST_NV	src/external/glcorearb.h	/^#define GL_REPRESENTATIVE_FRAGMENT_TEST_NV /;"	d
GL_RESET_NOTIFICATION_STRATEGY	src/external/glcorearb.h	/^#define GL_RESET_NOTIFICATION_STRATEGY /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	src/external/glcorearb.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESTART_PATH_NV	src/external/glcorearb.h	/^#define GL_RESTART_PATH_NV /;"	d
GL_RG	src/external/glcorearb.h	/^#define GL_RG /;"	d
GL_RG16	src/external/glcorearb.h	/^#define GL_RG16 /;"	d
GL_RG16F	src/external/glcorearb.h	/^#define GL_RG16F /;"	d
GL_RG16F_EXT	src/external/glcorearb.h	/^#define GL_RG16F_EXT /;"	d
GL_RG16I	src/external/glcorearb.h	/^#define GL_RG16I /;"	d
GL_RG16UI	src/external/glcorearb.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	src/external/glcorearb.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	src/external/glcorearb.h	/^#define GL_RG32F /;"	d
GL_RG32F_EXT	src/external/glcorearb.h	/^#define GL_RG32F_EXT /;"	d
GL_RG32I	src/external/glcorearb.h	/^#define GL_RG32I /;"	d
GL_RG32UI	src/external/glcorearb.h	/^#define GL_RG32UI /;"	d
GL_RG8	src/external/glcorearb.h	/^#define GL_RG8 /;"	d
GL_RG8I	src/external/glcorearb.h	/^#define GL_RG8I /;"	d
GL_RG8UI	src/external/glcorearb.h	/^#define GL_RG8UI /;"	d
GL_RG8_EXT	src/external/glcorearb.h	/^#define GL_RG8_EXT /;"	d
GL_RG8_SNORM	src/external/glcorearb.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB	src/external/glcorearb.h	/^#define GL_RGB /;"	d
GL_RGB10	src/external/glcorearb.h	/^#define GL_RGB10 /;"	d
GL_RGB10_A2	src/external/glcorearb.h	/^#define GL_RGB10_A2 /;"	d
GL_RGB10_A2UI	src/external/glcorearb.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB10_A2_EXT	src/external/glcorearb.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_EXT	src/external/glcorearb.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB12	src/external/glcorearb.h	/^#define GL_RGB12 /;"	d
GL_RGB16	src/external/glcorearb.h	/^#define GL_RGB16 /;"	d
GL_RGB16F	src/external/glcorearb.h	/^#define GL_RGB16F /;"	d
GL_RGB16F_EXT	src/external/glcorearb.h	/^#define GL_RGB16F_EXT /;"	d
GL_RGB16I	src/external/glcorearb.h	/^#define GL_RGB16I /;"	d
GL_RGB16UI	src/external/glcorearb.h	/^#define GL_RGB16UI /;"	d
GL_RGB16_SNORM	src/external/glcorearb.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB32F	src/external/glcorearb.h	/^#define GL_RGB32F /;"	d
GL_RGB32F_EXT	src/external/glcorearb.h	/^#define GL_RGB32F_EXT /;"	d
GL_RGB32I	src/external/glcorearb.h	/^#define GL_RGB32I /;"	d
GL_RGB32UI	src/external/glcorearb.h	/^#define GL_RGB32UI /;"	d
GL_RGB4	src/external/glcorearb.h	/^#define GL_RGB4 /;"	d
GL_RGB5	src/external/glcorearb.h	/^#define GL_RGB5 /;"	d
GL_RGB565	src/external/glcorearb.h	/^#define GL_RGB565 /;"	d
GL_RGB5_A1	src/external/glcorearb.h	/^#define GL_RGB5_A1 /;"	d
GL_RGB8	src/external/glcorearb.h	/^#define GL_RGB8 /;"	d
GL_RGB8I	src/external/glcorearb.h	/^#define GL_RGB8I /;"	d
GL_RGB8UI	src/external/glcorearb.h	/^#define GL_RGB8UI /;"	d
GL_RGB8_SNORM	src/external/glcorearb.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	src/external/glcorearb.h	/^#define GL_RGB9_E5 /;"	d
GL_RGBA	src/external/glcorearb.h	/^#define GL_RGBA /;"	d
GL_RGBA12	src/external/glcorearb.h	/^#define GL_RGBA12 /;"	d
GL_RGBA16	src/external/glcorearb.h	/^#define GL_RGBA16 /;"	d
GL_RGBA16F	src/external/glcorearb.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16F_EXT	src/external/glcorearb.h	/^#define GL_RGBA16F_EXT /;"	d
GL_RGBA16I	src/external/glcorearb.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16UI	src/external/glcorearb.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16_SNORM	src/external/glcorearb.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2	src/external/glcorearb.h	/^#define GL_RGBA2 /;"	d
GL_RGBA32F	src/external/glcorearb.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32F_EXT	src/external/glcorearb.h	/^#define GL_RGBA32F_EXT /;"	d
GL_RGBA32I	src/external/glcorearb.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32UI	src/external/glcorearb.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA4	src/external/glcorearb.h	/^#define GL_RGBA4 /;"	d
GL_RGBA8	src/external/glcorearb.h	/^#define GL_RGBA8 /;"	d
GL_RGBA8I	src/external/glcorearb.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8UI	src/external/glcorearb.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8_SNORM	src/external/glcorearb.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_INTEGER	src/external/glcorearb.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGB_422_APPLE	src/external/glcorearb.h	/^#define GL_RGB_422_APPLE /;"	d
GL_RGB_INTEGER	src/external/glcorearb.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_RAW_422_APPLE	src/external/glcorearb.h	/^#define GL_RGB_RAW_422_APPLE /;"	d
GL_RG_INTEGER	src/external/glcorearb.h	/^#define GL_RG_INTEGER /;"	d
GL_RIGHT	src/external/glcorearb.h	/^#define GL_RIGHT /;"	d
GL_ROUNDED_RECT2_NV	src/external/glcorearb.h	/^#define GL_ROUNDED_RECT2_NV /;"	d
GL_ROUNDED_RECT4_NV	src/external/glcorearb.h	/^#define GL_ROUNDED_RECT4_NV /;"	d
GL_ROUNDED_RECT8_NV	src/external/glcorearb.h	/^#define GL_ROUNDED_RECT8_NV /;"	d
GL_ROUNDED_RECT_NV	src/external/glcorearb.h	/^#define GL_ROUNDED_RECT_NV /;"	d
GL_ROUND_NV	src/external/glcorearb.h	/^#define GL_ROUND_NV /;"	d
GL_SAMPLER	src/external/glcorearb.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	src/external/glcorearb.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARRAY	src/external/glcorearb.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	src/external/glcorearb.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW	src/external/glcorearb.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_2D	src/external/glcorearb.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARRAY	src/external/glcorearb.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	src/external/glcorearb.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	src/external/glcorearb.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_SHADOW	src/external/glcorearb.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW	src/external/glcorearb.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_3D	src/external/glcorearb.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_BINDING	src/external/glcorearb.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	src/external/glcorearb.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_CUBE	src/external/glcorearb.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	src/external/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	src/external/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	src/external/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_SHADOW	src/external/glcorearb.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLES	src/external/glcorearb.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_PASSED	src/external/glcorearb.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	src/external/glcorearb.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_ONE	src/external/glcorearb.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_BUFFERS	src/external/glcorearb.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_COVERAGE	src/external/glcorearb.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_INVERT	src/external/glcorearb.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_VALUE	src/external/glcorearb.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_LOCATION_ARB	src/external/glcorearb.h	/^#define GL_SAMPLE_LOCATION_ARB /;"	d
GL_SAMPLE_LOCATION_NV	src/external/glcorearb.h	/^#define GL_SAMPLE_LOCATION_NV /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB	src/external/glcorearb.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV	src/external/glcorearb.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB	src/external/glcorearb.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV	src/external/glcorearb.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV /;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB	src/external/glcorearb.h	/^#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB /;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV	src/external/glcorearb.h	/^#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV /;"	d
GL_SAMPLE_MASK	src/external/glcorearb.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_VALUE	src/external/glcorearb.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_POSITION	src/external/glcorearb.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_SHADING	src/external/glcorearb.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	src/external/glcorearb.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SCISSOR_BOX	src/external/glcorearb.h	/^#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_BOX_EXCLUSIVE_NV	src/external/glcorearb.h	/^#define GL_SCISSOR_BOX_EXCLUSIVE_NV /;"	d
GL_SCISSOR_COMMAND_NV	src/external/glcorearb.h	/^#define GL_SCISSOR_COMMAND_NV /;"	d
GL_SCISSOR_TEST	src/external/glcorearb.h	/^#define GL_SCISSOR_TEST /;"	d
GL_SCISSOR_TEST_EXCLUSIVE_NV	src/external/glcorearb.h	/^#define GL_SCISSOR_TEST_EXCLUSIVE_NV /;"	d
GL_SCREEN_KHR	src/external/glcorearb.h	/^#define GL_SCREEN_KHR /;"	d
GL_SCREEN_NV	src/external/glcorearb.h	/^#define GL_SCREEN_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV /;"	d
GL_SEPARATE_ATTRIBS	src/external/glcorearb.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SET	src/external/glcorearb.h	/^#define GL_SET /;"	d
GL_SHADER	src/external/glcorearb.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_FORMATS	src/external/glcorearb.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V	src/external/glcorearb.h	/^#define GL_SHADER_BINARY_FORMAT_SPIR_V /;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V_ARB	src/external/glcorearb.h	/^#define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB /;"	d
GL_SHADER_COMPILER	src/external/glcorearb.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	src/external/glcorearb.h	/^#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ATOMIC	src/external/glcorearb.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	src/external/glcorearb.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	src/external/glcorearb.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	src/external/glcorearb.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_OBJECT_EXT	src/external/glcorearb.h	/^#define GL_SHADER_OBJECT_EXT /;"	d
GL_SHADER_SOURCE_LENGTH	src/external/glcorearb.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	src/external/glcorearb.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	src/external/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	src/external/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	src/external/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	src/external/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	src/external/glcorearb.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADING_LANGUAGE_VERSION	src/external/glcorearb.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_IMAGE_BINDING_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_IMAGE_BINDING_NV /;"	d
GL_SHADING_RATE_IMAGE_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_IMAGE_NV /;"	d
GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV /;"	d
GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV /;"	d
GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV /;"	d
GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV /;"	d
GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV /;"	d
GL_SHADING_RATE_NO_INVOCATIONS_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_NO_INVOCATIONS_NV /;"	d
GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV /;"	d
GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV /;"	d
GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV	src/external/glcorearb.h	/^#define GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV /;"	d
GL_SHARED_EDGE_NV	src/external/glcorearb.h	/^#define GL_SHARED_EDGE_NV /;"	d
GL_SHORT	src/external/glcorearb.h	/^#define GL_SHORT /;"	d
GL_SIGNALED	src/external/glcorearb.h	/^#define GL_SIGNALED /;"	d
GL_SIGNED_NORMALIZED	src/external/glcorearb.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	src/external/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	src/external/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	src/external/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	src/external/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SKIP_DECODE_EXT	src/external/glcorearb.h	/^#define GL_SKIP_DECODE_EXT /;"	d
GL_SKIP_MISSING_GLYPH_NV	src/external/glcorearb.h	/^#define GL_SKIP_MISSING_GLYPH_NV /;"	d
GL_SMALL_CCW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_SMALL_CCW_ARC_TO_NV /;"	d
GL_SMALL_CW_ARC_TO_NV	src/external/glcorearb.h	/^#define GL_SMALL_CW_ARC_TO_NV /;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	src/external/glcorearb.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	src/external/glcorearb.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	src/external/glcorearb.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	src/external/glcorearb.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	src/external/glcorearb.h	/^#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_SM_COUNT_NV	src/external/glcorearb.h	/^#define GL_SM_COUNT_NV /;"	d
GL_SOFTLIGHT_KHR	src/external/glcorearb.h	/^#define GL_SOFTLIGHT_KHR /;"	d
GL_SOFTLIGHT_NV	src/external/glcorearb.h	/^#define GL_SOFTLIGHT_NV /;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	src/external/glcorearb.h	/^#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB /;"	d
GL_SPARSE_STORAGE_BIT_ARB	src/external/glcorearb.h	/^#define GL_SPARSE_STORAGE_BIT_ARB /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	src/external/glcorearb.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	d
GL_SPIR_V_BINARY	src/external/glcorearb.h	/^#define GL_SPIR_V_BINARY /;"	d
GL_SPIR_V_BINARY_ARB	src/external/glcorearb.h	/^#define GL_SPIR_V_BINARY_ARB /;"	d
GL_SPIR_V_EXTENSIONS	src/external/glcorearb.h	/^#define GL_SPIR_V_EXTENSIONS /;"	d
GL_SQUARE_NV	src/external/glcorearb.h	/^#define GL_SQUARE_NV /;"	d
GL_SR8_EXT	src/external/glcorearb.h	/^#define GL_SR8_EXT /;"	d
GL_SRC1_ALPHA	src/external/glcorearb.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	src/external/glcorearb.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC_ALPHA	src/external/glcorearb.h	/^#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	src/external/glcorearb.h	/^#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_ATOP_NV	src/external/glcorearb.h	/^#define GL_SRC_ATOP_NV /;"	d
GL_SRC_COLOR	src/external/glcorearb.h	/^#define GL_SRC_COLOR /;"	d
GL_SRC_IN_NV	src/external/glcorearb.h	/^#define GL_SRC_IN_NV /;"	d
GL_SRC_NV	src/external/glcorearb.h	/^#define GL_SRC_NV /;"	d
GL_SRC_OUT_NV	src/external/glcorearb.h	/^#define GL_SRC_OUT_NV /;"	d
GL_SRC_OVER_NV	src/external/glcorearb.h	/^#define GL_SRC_OVER_NV /;"	d
GL_SRG8_EXT	src/external/glcorearb.h	/^#define GL_SRG8_EXT /;"	d
GL_SRGB	src/external/glcorearb.h	/^#define GL_SRGB /;"	d
GL_SRGB8	src/external/glcorearb.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	src/external/glcorearb.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB_ALPHA	src/external/glcorearb.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_DECODE_ARB	src/external/glcorearb.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_READ	src/external/glcorearb.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	src/external/glcorearb.h	/^#define GL_SRGB_WRITE /;"	d
GL_STACK_OVERFLOW	src/external/glcorearb.h	/^#define GL_STACK_OVERFLOW /;"	d
GL_STACK_UNDERFLOW	src/external/glcorearb.h	/^#define GL_STACK_UNDERFLOW /;"	d
GL_STANDARD_FONT_FORMAT_NV	src/external/glcorearb.h	/^#define GL_STANDARD_FONT_FORMAT_NV /;"	d
GL_STANDARD_FONT_NAME_NV	src/external/glcorearb.h	/^#define GL_STANDARD_FONT_NAME_NV /;"	d
GL_STATIC_COPY	src/external/glcorearb.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_DRAW	src/external/glcorearb.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_READ	src/external/glcorearb.h	/^#define GL_STATIC_READ /;"	d
GL_STENCIL	src/external/glcorearb.h	/^#define GL_STENCIL /;"	d
GL_STENCIL_ATTACHMENT	src/external/glcorearb.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_BACK_FAIL	src/external/glcorearb.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FUNC	src/external/glcorearb.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	src/external/glcorearb.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	src/external/glcorearb.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_REF	src/external/glcorearb.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	src/external/glcorearb.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	src/external/glcorearb.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BUFFER_BIT	src/external/glcorearb.h	/^#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_CLEAR_VALUE	src/external/glcorearb.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_COMPONENTS	src/external/glcorearb.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_FAIL	src/external/glcorearb.h	/^#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FUNC	src/external/glcorearb.h	/^#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_INDEX	src/external/glcorearb.h	/^#define GL_STENCIL_INDEX /;"	d
GL_STENCIL_INDEX1	src/external/glcorearb.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	src/external/glcorearb.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX4	src/external/glcorearb.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX8	src/external/glcorearb.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	src/external/glcorearb.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_PASS	src/external/glcorearb.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_REF	src/external/glcorearb.h	/^#define GL_STENCIL_REF /;"	d
GL_STENCIL_REF_COMMAND_NV	src/external/glcorearb.h	/^#define GL_STENCIL_REF_COMMAND_NV /;"	d
GL_STENCIL_RENDERABLE	src/external/glcorearb.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_SAMPLES_NV	src/external/glcorearb.h	/^#define GL_STENCIL_SAMPLES_NV /;"	d
GL_STENCIL_TEST	src/external/glcorearb.h	/^#define GL_STENCIL_TEST /;"	d
GL_STENCIL_VALUE_MASK	src/external/glcorearb.h	/^#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_WRITEMASK	src/external/glcorearb.h	/^#define GL_STENCIL_WRITEMASK /;"	d
GL_STEREO	src/external/glcorearb.h	/^#define GL_STEREO /;"	d
GL_STREAM_COPY	src/external/glcorearb.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_DRAW	src/external/glcorearb.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_READ	src/external/glcorearb.h	/^#define GL_STREAM_READ /;"	d
GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_BASIC_BIT_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_BASIC_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV /;"	d
GL_SUBGROUP_FEATURE_QUAD_BIT_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_QUAD_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_VOTE_BIT_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_FEATURE_VOTE_BIT_KHR /;"	d
GL_SUBGROUP_QUAD_ALL_STAGES_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_QUAD_ALL_STAGES_KHR /;"	d
GL_SUBGROUP_SIZE_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_SIZE_KHR /;"	d
GL_SUBGROUP_SUPPORTED_FEATURES_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_SUPPORTED_FEATURES_KHR /;"	d
GL_SUBGROUP_SUPPORTED_STAGES_KHR	src/external/glcorearb.h	/^#define GL_SUBGROUP_SUPPORTED_STAGES_KHR /;"	d
GL_SUBPIXEL_BITS	src/external/glcorearb.h	/^#define GL_SUBPIXEL_BITS /;"	d
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV	src/external/glcorearb.h	/^#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV /;"	d
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV	src/external/glcorearb.h	/^#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV /;"	d
GL_SUPERSAMPLE_SCALE_X_NV	src/external/glcorearb.h	/^#define GL_SUPERSAMPLE_SCALE_X_NV /;"	d
GL_SUPERSAMPLE_SCALE_Y_NV	src/external/glcorearb.h	/^#define GL_SUPERSAMPLE_SCALE_Y_NV /;"	d
GL_SUPPORTED_MULTISAMPLE_MODES_AMD	src/external/glcorearb.h	/^#define GL_SUPPORTED_MULTISAMPLE_MODES_AMD /;"	d
GL_SYNC_CL_EVENT_ARB	src/external/glcorearb.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	src/external/glcorearb.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	src/external/glcorearb.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	src/external/glcorearb.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	src/external/glcorearb.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	src/external/glcorearb.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	src/external/glcorearb.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	src/external/glcorearb.h	/^#define GL_SYNC_STATUS /;"	d
GL_SYSTEM_FONT_NAME_NV	src/external/glcorearb.h	/^#define GL_SYSTEM_FONT_NAME_NV /;"	d
GL_TASK_SHADER_BIT_NV	src/external/glcorearb.h	/^#define GL_TASK_SHADER_BIT_NV /;"	d
GL_TASK_SHADER_NV	src/external/glcorearb.h	/^#define GL_TASK_SHADER_NV /;"	d
GL_TASK_SUBROUTINE_NV	src/external/glcorearb.h	/^#define GL_TASK_SUBROUTINE_NV /;"	d
GL_TASK_SUBROUTINE_UNIFORM_NV	src/external/glcorearb.h	/^#define GL_TASK_SUBROUTINE_UNIFORM_NV /;"	d
GL_TASK_WORK_GROUP_SIZE_NV	src/external/glcorearb.h	/^#define GL_TASK_WORK_GROUP_SIZE_NV /;"	d
GL_TERMINATE_SEQUENCE_COMMAND_NV	src/external/glcorearb.h	/^#define GL_TERMINATE_SEQUENCE_COMMAND_NV /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	src/external/glcorearb.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_SHADER	src/external/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	src/external/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SHADER_PATCHES	src/external/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER_PATCHES /;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	src/external/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER_PATCHES_ARB /;"	d
GL_TESS_CONTROL_SUBROUTINE	src/external/glcorearb.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	src/external/glcorearb.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	src/external/glcorearb.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_SHADER	src/external/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	src/external/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS	src/external/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER_INVOCATIONS /;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	src/external/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB /;"	d
GL_TESS_EVALUATION_SUBROUTINE	src/external/glcorearb.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	src/external/glcorearb.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	src/external/glcorearb.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	src/external/glcorearb.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_POINT_MODE	src/external/glcorearb.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_SPACING	src/external/glcorearb.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_VERTEX_ORDER	src/external/glcorearb.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TEXTURE	src/external/glcorearb.h	/^#define GL_TEXTURE /;"	d
GL_TEXTURE0	src/external/glcorearb.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE1	src/external/glcorearb.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	src/external/glcorearb.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE11	src/external/glcorearb.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE12	src/external/glcorearb.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE13	src/external/glcorearb.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE14	src/external/glcorearb.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE15	src/external/glcorearb.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE16	src/external/glcorearb.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE17	src/external/glcorearb.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE18	src/external/glcorearb.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE19	src/external/glcorearb.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE2	src/external/glcorearb.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	src/external/glcorearb.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE21	src/external/glcorearb.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE22	src/external/glcorearb.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE23	src/external/glcorearb.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE24	src/external/glcorearb.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE25	src/external/glcorearb.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE26	src/external/glcorearb.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE27	src/external/glcorearb.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE28	src/external/glcorearb.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE29	src/external/glcorearb.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE3	src/external/glcorearb.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	src/external/glcorearb.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE31	src/external/glcorearb.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE4	src/external/glcorearb.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE5	src/external/glcorearb.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE6	src/external/glcorearb.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE7	src/external/glcorearb.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE8	src/external/glcorearb.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE9	src/external/glcorearb.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE_1D	src/external/glcorearb.h	/^#define GL_TEXTURE_1D /;"	d
GL_TEXTURE_1D_ARRAY	src/external/glcorearb.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_2D	src/external/glcorearb.h	/^#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	src/external/glcorearb.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_3D	src/external/glcorearb.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_ALPHA_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_ALPHA_SIZE /;"	d
GL_TEXTURE_ALPHA_TYPE	src/external/glcorearb.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_BASE_LEVEL	src/external/glcorearb.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BINDING_1D	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_1D /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_BUFFER_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE	src/external/glcorearb.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BLUE_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_BLUE_SIZE /;"	d
GL_TEXTURE_BLUE_TYPE	src/external/glcorearb.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BORDER_COLOR	src/external/glcorearb.h	/^#define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_BUFFER	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_ARB	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER_ARB /;"	d
GL_TEXTURE_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB /;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER_FORMAT_ARB /;"	d
GL_TEXTURE_BUFFER_OFFSET	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_COMPARE_FUNC	src/external/glcorearb.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_MODE	src/external/glcorearb.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPRESSED	src/external/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	src/external/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	src/external/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSION_HINT	src/external/glcorearb.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV /;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV /;"	d
GL_TEXTURE_CUBE_MAP	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	src/external/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEPTH	src/external/glcorearb.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_TYPE	src/external/glcorearb.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	src/external/glcorearb.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_GATHER	src/external/glcorearb.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	src/external/glcorearb.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GREEN_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_GREEN_SIZE /;"	d
GL_TEXTURE_GREEN_TYPE	src/external/glcorearb.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_HEIGHT	src/external/glcorearb.h	/^#define GL_TEXTURE_HEIGHT /;"	d
GL_TEXTURE_IMAGE_FORMAT	src/external/glcorearb.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	src/external/glcorearb.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	src/external/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT_EXT	src/external/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	src/external/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INTERNAL_FORMAT	src/external/glcorearb.h	/^#define GL_TEXTURE_INTERNAL_FORMAT /;"	d
GL_TEXTURE_LOD_BIAS	src/external/glcorearb.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_MAG_FILTER	src/external/glcorearb.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAX_ANISOTROPY	src/external/glcorearb.h	/^#define GL_TEXTURE_MAX_ANISOTROPY /;"	d
GL_TEXTURE_MAX_LEVEL	src/external/glcorearb.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LOD	src/external/glcorearb.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MIN_FILTER	src/external/glcorearb.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	src/external/glcorearb.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_RECTANGLE	src/external/glcorearb.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_REDUCTION_MODE_ARB	src/external/glcorearb.h	/^#define GL_TEXTURE_REDUCTION_MODE_ARB /;"	d
GL_TEXTURE_REDUCTION_MODE_EXT	src/external/glcorearb.h	/^#define GL_TEXTURE_REDUCTION_MODE_EXT /;"	d
GL_TEXTURE_RED_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_RED_SIZE /;"	d
GL_TEXTURE_RED_TYPE	src/external/glcorearb.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_SAMPLES	src/external/glcorearb.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHADOW	src/external/glcorearb.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SPARSE_ARB	src/external/glcorearb.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	d
GL_TEXTURE_SRGB_DECODE_EXT	src/external/glcorearb.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	d
GL_TEXTURE_STENCIL_SIZE	src/external/glcorearb.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_SWIZZLE_A	src/external/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_B	src/external/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_G	src/external/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_R	src/external/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	src/external/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_TARGET	src/external/glcorearb.h	/^#define GL_TEXTURE_TARGET /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_VIEW	src/external/glcorearb.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	src/external/glcorearb.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	src/external/glcorearb.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	src/external/glcorearb.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	src/external/glcorearb.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_WIDTH	src/external/glcorearb.h	/^#define GL_TEXTURE_WIDTH /;"	d
GL_TEXTURE_WRAP_R	src/external/glcorearb.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_S	src/external/glcorearb.h	/^#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	src/external/glcorearb.h	/^#define GL_TEXTURE_WRAP_T /;"	d
GL_TIMEOUT_EXPIRED	src/external/glcorearb.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	src/external/glcorearb.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	src/external/glcorearb.h	/^#define GL_TIMESTAMP /;"	d
GL_TIME_ELAPSED	src/external/glcorearb.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	src/external/glcorearb.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	src/external/glcorearb.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_OVERFLOW /;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW /;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	src/external/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSLATE_2D_NV	src/external/glcorearb.h	/^#define GL_TRANSLATE_2D_NV /;"	d
GL_TRANSLATE_3D_NV	src/external/glcorearb.h	/^#define GL_TRANSLATE_3D_NV /;"	d
GL_TRANSLATE_X_NV	src/external/glcorearb.h	/^#define GL_TRANSLATE_X_NV /;"	d
GL_TRANSLATE_Y_NV	src/external/glcorearb.h	/^#define GL_TRANSLATE_Y_NV /;"	d
GL_TRANSPOSE_AFFINE_2D_NV	src/external/glcorearb.h	/^#define GL_TRANSPOSE_AFFINE_2D_NV /;"	d
GL_TRANSPOSE_AFFINE_3D_NV	src/external/glcorearb.h	/^#define GL_TRANSPOSE_AFFINE_3D_NV /;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	src/external/glcorearb.h	/^#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT /;"	d
GL_TRIANGLES	src/external/glcorearb.h	/^#define GL_TRIANGLES /;"	d
GL_TRIANGLES_ADJACENCY	src/external/glcorearb.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLES_ADJACENCY_ARB	src/external/glcorearb.h	/^#define GL_TRIANGLES_ADJACENCY_ARB /;"	d
GL_TRIANGLE_FAN	src/external/glcorearb.h	/^#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_STRIP	src/external/glcorearb.h	/^#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	src/external/glcorearb.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	src/external/glcorearb.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_ARB /;"	d
GL_TRIANGULAR_NV	src/external/glcorearb.h	/^#define GL_TRIANGULAR_NV /;"	d
GL_TRUE	src/external/glcorearb.h	/^#define GL_TRUE /;"	d
GL_TYPE	src/external/glcorearb.h	/^#define GL_TYPE /;"	d
GL_UNCORRELATED_NV	src/external/glcorearb.h	/^#define GL_UNCORRELATED_NV /;"	d
GL_UNDEFINED_VERTEX	src/external/glcorearb.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNIFORM	src/external/glcorearb.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ADDRESS_COMMAND_NV	src/external/glcorearb.h	/^#define GL_UNIFORM_ADDRESS_COMMAND_NV /;"	d
GL_UNIFORM_ARRAY_STRIDE	src/external/glcorearb.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	src/external/glcorearb.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BLOCK	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	src/external/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	src/external/glcorearb.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_UNIFORM_BUFFER_ADDRESS_NV /;"	d
GL_UNIFORM_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_LENGTH_NV	src/external/glcorearb.h	/^#define GL_UNIFORM_BUFFER_LENGTH_NV /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	src/external/glcorearb.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	src/external/glcorearb.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	src/external/glcorearb.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_BUFFER_UNIFIED_NV	src/external/glcorearb.h	/^#define GL_UNIFORM_BUFFER_UNIFIED_NV /;"	d
GL_UNIFORM_IS_ROW_MAJOR	src/external/glcorearb.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	src/external/glcorearb.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	src/external/glcorearb.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	src/external/glcorearb.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	src/external/glcorearb.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	src/external/glcorearb.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET	src/external/glcorearb.h	/^#define GL_UNKNOWN_CONTEXT_RESET /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	src/external/glcorearb.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNPACK_ALIGNMENT	src/external/glcorearb.h	/^#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	src/external/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	src/external/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	src/external/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	src/external/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_IMAGE_HEIGHT	src/external/glcorearb.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_LSB_FIRST	src/external/glcorearb.h	/^#define GL_UNPACK_LSB_FIRST /;"	d
GL_UNPACK_ROW_LENGTH	src/external/glcorearb.h	/^#define GL_UNPACK_ROW_LENGTH /;"	d
GL_UNPACK_SKIP_IMAGES	src/external/glcorearb.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_PIXELS	src/external/glcorearb.h	/^#define GL_UNPACK_SKIP_PIXELS /;"	d
GL_UNPACK_SKIP_ROWS	src/external/glcorearb.h	/^#define GL_UNPACK_SKIP_ROWS /;"	d
GL_UNPACK_SWAP_BYTES	src/external/glcorearb.h	/^#define GL_UNPACK_SWAP_BYTES /;"	d
GL_UNSIGNALED	src/external/glcorearb.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE	src/external/glcorearb.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	src/external/glcorearb.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	src/external/glcorearb.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_INT	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT16_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT16_NV /;"	d
GL_UNSIGNED_INT16_VEC2_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT16_VEC2_NV /;"	d
GL_UNSIGNED_INT16_VEC3_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT16_VEC3_NV /;"	d
GL_UNSIGNED_INT16_VEC4_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT16_VEC4_NV /;"	d
GL_UNSIGNED_INT64_AMD	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_AMD /;"	d
GL_UNSIGNED_INT64_ARB	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_ARB /;"	d
GL_UNSIGNED_INT64_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_NV /;"	d
GL_UNSIGNED_INT64_VEC2_ARB	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_VEC2_ARB /;"	d
GL_UNSIGNED_INT64_VEC2_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_VEC2_NV /;"	d
GL_UNSIGNED_INT64_VEC3_ARB	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_VEC3_ARB /;"	d
GL_UNSIGNED_INT64_VEC3_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_VEC3_NV /;"	d
GL_UNSIGNED_INT64_VEC4_ARB	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_VEC4_ARB /;"	d
GL_UNSIGNED_INT64_VEC4_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT64_VEC4_NV /;"	d
GL_UNSIGNED_INT8_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT8_NV /;"	d
GL_UNSIGNED_INT8_VEC2_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT8_VEC2_NV /;"	d
GL_UNSIGNED_INT8_VEC3_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT8_VEC3_NV /;"	d
GL_UNSIGNED_INT8_VEC4_NV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT8_VEC4_NV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10_10_10_2	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_24_8	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_8_8_8_8	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_VEC2	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC3	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC4	src/external/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_NORMALIZED	src/external/glcorearb.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_SHORT	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_6_5	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	src/external/glcorearb.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UPPER_LEFT	src/external/glcorearb.h	/^#define GL_UPPER_LEFT /;"	d
GL_USE_MISSING_GLYPH_NV	src/external/glcorearb.h	/^#define GL_USE_MISSING_GLYPH_NV /;"	d
GL_UTF16_NV	src/external/glcorearb.h	/^#define GL_UTF16_NV /;"	d
GL_UTF8_NV	src/external/glcorearb.h	/^#define GL_UTF8_NV /;"	d
GL_VALIDATE_STATUS	src/external/glcorearb.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VENDOR	src/external/glcorearb.h	/^#define GL_VENDOR /;"	d
GL_VERSION	src/external/glcorearb.h	/^#define GL_VERSION /;"	d
GL_VERSION_1_0	src/external/glcorearb.h	/^#define GL_VERSION_1_0 /;"	d
GL_VERSION_1_1	src/external/glcorearb.h	/^#define GL_VERSION_1_1 /;"	d
GL_VERSION_1_2	src/external/glcorearb.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	src/external/glcorearb.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	src/external/glcorearb.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	src/external/glcorearb.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	src/external/glcorearb.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	src/external/glcorearb.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	src/external/glcorearb.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	src/external/glcorearb.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	src/external/glcorearb.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	src/external/glcorearb.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	src/external/glcorearb.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	src/external/glcorearb.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	src/external/glcorearb.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	src/external/glcorearb.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_4	src/external/glcorearb.h	/^#define GL_VERSION_4_4 /;"	d
GL_VERSION_4_5	src/external/glcorearb.h	/^#define GL_VERSION_4_5 /;"	d
GL_VERSION_4_6	src/external/glcorearb.h	/^#define GL_VERSION_4_6 /;"	d
GL_VERTEX_ARRAY	src/external/glcorearb.h	/^#define GL_VERTEX_ARRAY /;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_VERTEX_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ARRAY_BINDING	src/external/glcorearb.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_VERTEX_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	src/external/glcorearb.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV /;"	d
GL_VERTEX_ATTRIB_BINDING	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	src/external/glcorearb.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_BUFFER	src/external/glcorearb.h	/^#define GL_VERTEX_BINDING_BUFFER /;"	d
GL_VERTEX_BINDING_DIVISOR	src/external/glcorearb.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	src/external/glcorearb.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	src/external/glcorearb.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	src/external/glcorearb.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_SHADER	src/external/glcorearb.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_BIT	src/external/glcorearb.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_INVOCATIONS	src/external/glcorearb.h	/^#define GL_VERTEX_SHADER_INVOCATIONS /;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	src/external/glcorearb.h	/^#define GL_VERTEX_SHADER_INVOCATIONS_ARB /;"	d
GL_VERTEX_SUBROUTINE	src/external/glcorearb.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	src/external/glcorearb.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	src/external/glcorearb.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTICAL_LINE_TO_NV	src/external/glcorearb.h	/^#define GL_VERTICAL_LINE_TO_NV /;"	d
GL_VERTICES_SUBMITTED	src/external/glcorearb.h	/^#define GL_VERTICES_SUBMITTED /;"	d
GL_VERTICES_SUBMITTED_ARB	src/external/glcorearb.h	/^#define GL_VERTICES_SUBMITTED_ARB /;"	d
GL_VIEWPORT	src/external/glcorearb.h	/^#define GL_VIEWPORT /;"	d
GL_VIEWPORT_BOUNDS_RANGE	src/external/glcorearb.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_COMMAND_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_COMMAND_NV /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	src/external/glcorearb.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_POSITION_W_SCALE_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_NV /;"	d
GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV /;"	d
GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	src/external/glcorearb.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV /;"	d
GL_VIEWPORT_SWIZZLE_W_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_X_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_Y_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_Z_NV	src/external/glcorearb.h	/^#define GL_VIEWPORT_SWIZZLE_Z_NV /;"	d
GL_VIEW_CLASS_128_BITS	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_ASTC_10x10_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_10x10_RGBA /;"	d
GL_VIEW_CLASS_ASTC_10x5_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_10x5_RGBA /;"	d
GL_VIEW_CLASS_ASTC_10x6_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_10x6_RGBA /;"	d
GL_VIEW_CLASS_ASTC_10x8_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_10x8_RGBA /;"	d
GL_VIEW_CLASS_ASTC_12x10_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_12x10_RGBA /;"	d
GL_VIEW_CLASS_ASTC_12x12_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_12x12_RGBA /;"	d
GL_VIEW_CLASS_ASTC_4x4_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_4x4_RGBA /;"	d
GL_VIEW_CLASS_ASTC_5x4_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_5x4_RGBA /;"	d
GL_VIEW_CLASS_ASTC_5x5_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_5x5_RGBA /;"	d
GL_VIEW_CLASS_ASTC_6x5_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_6x5_RGBA /;"	d
GL_VIEW_CLASS_ASTC_6x6_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_6x6_RGBA /;"	d
GL_VIEW_CLASS_ASTC_8x5_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_8x5_RGBA /;"	d
GL_VIEW_CLASS_ASTC_8x6_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_8x6_RGBA /;"	d
GL_VIEW_CLASS_ASTC_8x8_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ASTC_8x8_RGBA /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_EAC_R11	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_EAC_R11 /;"	d
GL_VIEW_CLASS_EAC_RG11	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_EAC_RG11 /;"	d
GL_VIEW_CLASS_ETC2_EAC_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ETC2_EAC_RGBA /;"	d
GL_VIEW_CLASS_ETC2_RGB	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ETC2_RGB /;"	d
GL_VIEW_CLASS_ETC2_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_ETC2_RGBA /;"	d
GL_VIEW_CLASS_RGTC1_RED	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	src/external/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	src/external/glcorearb.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	src/external/glcorearb.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	src/external/glcorearb.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	src/external/glcorearb.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	src/external/glcorearb.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	d
GL_VIVIDLIGHT_NV	src/external/glcorearb.h	/^#define GL_VIVIDLIGHT_NV /;"	d
GL_WAIT_FAILED	src/external/glcorearb.h	/^#define GL_WAIT_FAILED /;"	d
GL_WARPS_PER_SM_NV	src/external/glcorearb.h	/^#define GL_WARPS_PER_SM_NV /;"	d
GL_WARP_SIZE_NV	src/external/glcorearb.h	/^#define GL_WARP_SIZE_NV /;"	d
GL_WEIGHTED_AVERAGE_ARB	src/external/glcorearb.h	/^#define GL_WEIGHTED_AVERAGE_ARB /;"	d
GL_WEIGHTED_AVERAGE_EXT	src/external/glcorearb.h	/^#define GL_WEIGHTED_AVERAGE_EXT /;"	d
GL_WINDOW_RECTANGLE_EXT	src/external/glcorearb.h	/^#define GL_WINDOW_RECTANGLE_EXT /;"	d
GL_WINDOW_RECTANGLE_MODE_EXT	src/external/glcorearb.h	/^#define GL_WINDOW_RECTANGLE_MODE_EXT /;"	d
GL_WRITE_ONLY	src/external/glcorearb.h	/^#define GL_WRITE_ONLY /;"	d
GL_XOR	src/external/glcorearb.h	/^#define GL_XOR /;"	d
GL_XOR_NV	src/external/glcorearb.h	/^#define GL_XOR_NV /;"	d
GL_ZERO	src/external/glcorearb.h	/^#define GL_ZERO /;"	d
GL_ZERO_TO_ONE	src/external/glcorearb.h	/^#define GL_ZERO_TO_ONE /;"	d
GLbitfield	src/external/glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	src/external/glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	src/external/glcorearb.h	/^typedef khronos_int8_t GLbyte;$/;"	t	typeref:typename:khronos_int8_t
GLchar	src/external/glcorearb.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLclampd	src/external/glcorearb.h	/^typedef double GLclampd;$/;"	t	typeref:typename:double
GLclampf	src/external/glcorearb.h	/^typedef khronos_float_t GLclampf;$/;"	t	typeref:typename:khronos_float_t
GLdouble	src/external/glcorearb.h	/^typedef double GLdouble;$/;"	t	typeref:typename:double
GLeglImageOES	src/external/glcorearb.h	/^typedef void *GLeglImageOES;$/;"	t	typeref:typename:void *
GLenum	src/external/glcorearb.h	/^typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLfloat	src/external/glcorearb.h	/^typedef khronos_float_t GLfloat;$/;"	t	typeref:typename:khronos_float_t
GLhalf	src/external/glcorearb.h	/^typedef khronos_uint16_t GLhalf;$/;"	t	typeref:typename:khronos_uint16_t
GLint	src/external/glcorearb.h	/^typedef int GLint;$/;"	t	typeref:typename:int
GLint64	src/external/glcorearb.h	/^typedef khronos_int64_t GLint64;$/;"	t	typeref:typename:khronos_int64_t
GLint64EXT	src/external/glcorearb.h	/^typedef khronos_int64_t GLint64EXT;$/;"	t	typeref:typename:khronos_int64_t
GLintptr	src/external/glcorearb.h	/^typedef khronos_intptr_t GLintptr;$/;"	t	typeref:typename:khronos_intptr_t
GLshort	src/external/glcorearb.h	/^typedef khronos_int16_t GLshort;$/;"	t	typeref:typename:khronos_int16_t
GLsizei	src/external/glcorearb.h	/^typedef int GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	src/external/glcorearb.h	/^typedef khronos_ssize_t GLsizeiptr;$/;"	t	typeref:typename:khronos_ssize_t
GLsync	src/external/glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLubyte	src/external/glcorearb.h	/^typedef khronos_uint8_t GLubyte;$/;"	t	typeref:typename:khronos_uint8_t
GLuint	src/external/glcorearb.h	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint64	src/external/glcorearb.h	/^typedef khronos_uint64_t GLuint64;$/;"	t	typeref:typename:khronos_uint64_t
GLuint64EXT	src/external/glcorearb.h	/^typedef khronos_uint64_t GLuint64EXT;$/;"	t	typeref:typename:khronos_uint64_t
GLushort	src/external/glcorearb.h	/^typedef khronos_uint16_t GLushort;$/;"	t	typeref:typename:khronos_uint16_t
GLvoid	src/external/glcorearb.h	/^typedef void GLvoid;$/;"	t	typeref:typename:void
KHRONOS_APIATTRIBUTES	src/external/KHR/khrplatform.h	/^#define KHRONOS_APIATTRIBUTES /;"	d
KHRONOS_APIATTRIBUTES	src/external/KHR/khrplatform.h	/^#define KHRONOS_APIATTRIBUTES$/;"	d
KHRONOS_APICALL	src/external/KHR/khrplatform.h	/^#   define KHRONOS_APICALL /;"	d
KHRONOS_APICALL	src/external/KHR/khrplatform.h	/^#   define KHRONOS_APICALL$/;"	d
KHRONOS_APIENTRY	src/external/KHR/khrplatform.h	/^#   define KHRONOS_APIENTRY /;"	d
KHRONOS_APIENTRY	src/external/KHR/khrplatform.h	/^#   define KHRONOS_APIENTRY$/;"	d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	src/external/KHR/khrplatform.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anon81f5a0020103
KHRONOS_FALSE	src/external/KHR/khrplatform.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anon81f5a0020103
KHRONOS_MAX_ENUM	src/external/KHR/khrplatform.h	/^#define KHRONOS_MAX_ENUM /;"	d
KHRONOS_STATIC	src/external/KHR/khrplatform.h	/^#   define KHRONOS_STATIC /;"	d
KHRONOS_SUPPORT_FLOAT	src/external/KHR/khrplatform.h	/^#define KHRONOS_SUPPORT_FLOAT /;"	d
KHRONOS_SUPPORT_INT64	src/external/KHR/khrplatform.h	/^#define KHRONOS_SUPPORT_INT64 /;"	d
KHRONOS_TRUE	src/external/KHR/khrplatform.h	/^    KHRONOS_TRUE  = 1,$/;"	e	enum:__anon81f5a0020103
KHRONOS_USE_INTPTR_T	src/external/KHR/khrplatform.h	/^#define KHRONOS_USE_INTPTR_T$/;"	d
MIN3	src/main.cpp	/^#define MIN3(/;"	d	file:
PFNGLACTIVEPROGRAMEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVETEXTUREPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLATTACHSHADERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINPERFMONITORAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLBEGINPERFQUERYINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLBEGINQUERYINDEXEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINTRANSFORMFEEDBACKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBINDATTRIBLOCATIONPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERBASEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERSBASEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
PFNGLBINDBUFFERSRANGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAMEBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTURESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDMULTITEXTUREEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint tex/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint texture)
PFNGLBINDPROGRAMPIPELINEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLBINDRENDERBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *sampl/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * samplers)
PFNGLBINDSHADINGRATEIMAGENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSHADINGRATEIMAGENVPROC) (GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture)
PFNGLBINDTEXTUREPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTEXTURESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textu/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDTEXTUREUNITPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture)
PFNGLBINDTRANSFORMFEEDBACKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint */;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLBLENDBARRIERKHRPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBLENDBARRIERNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLBLENDCOLORPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDEQUATIONIARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactor,GLenum dfactor)
PFNGLBLENDFUNCSEPARATEIARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDPARAMETERINVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLBLITFRAMEBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITNAMEDFRAMEBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFrame/;"	t	typeref:typename:void (APIENTRYP)(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERADDRESSRANGENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT /;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
PFNGLBUFFERATTACHMEMORYNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 o/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint memory,GLuint64 offset)
PFNGLBUFFERDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERPAGECOMMITMENTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,GLboolean commit)
PFNGLBUFFERPAGECOMMITMENTMEMNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTMEMNVPROC) (GLenum target, GLintptr offset, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,GLuint memory,GLuint64 memOffset,GLboolean commit)
PFNGLBUFFERSTORAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCALLCOMMANDLISTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum t/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint framebuffer,GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum targ/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint framebuffer,GLenum target)
PFNGLCLAMPCOLORPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLEARBUFFERDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARCOLORPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLCLEARDEPTHDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARDEPTHFPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat d)
PFNGLCLEARDEPTHPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLEARSTENCILPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLint s)
PFNGLCLEARTEXIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLIENTATTRIBDEFAULTEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLIENTWAITSYNCPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:GLenum (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPCONTROLPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum origin,GLenum depth)
PFNGLCOLORFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLCOLORMASKIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLb/;"	t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLCOMMANDLISTSEGMENTSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLuint segments)
PFNGLCOMPILECOMMANDLISTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint list)
PFNGLCOMPILESHADERINCLUDEARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
PFNGLCOMPILESHADERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * bits)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat value)
PFNGLCONSERVATIVERASTERPARAMETERINVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLCOPYBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYIMAGESUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYNAMEDBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer,/;"	t	typeref:typename:void (APIENTRYP)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYPATHNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath)
PFNGLCOPYTEXIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOVERAGEMODULATIONNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum components)
PFNGLCOVERAGEMODULATIONTABLENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLfloat * v)
PFNGLCOVERFILLPATHINSTANCEDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTyp/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERFILLPATHNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERSTROKEPATHNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum coverMode)
PFNGLCREATEBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLCREATECOMMANDLISTSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * lists)
PFNGLCREATEFRAMEBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLCREATEPERFQUERYINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * queryHandle)
PFNGLCREATEPROGRAMPIPELINESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLCREATEPROGRAMPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATEQUERIESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,GLuint * ids)
PFNGLCREATERENDERBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLCREATESAMPLERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * samplers)
PFNGLCREATESHADERPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCREATESHADERPROGRAMEXTPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,const GLchar * string)
PFNGLCREATESHADERPROGRAMVPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESTATESNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * states)
PFNGLCREATESYNCFROMCLEVENTARBPROC	src/external/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struc/;"	t	typeref:typename:GLsync (APIENTRYP)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
PFNGLCREATETEXTURESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei n,GLuint * textures)
PFNGLCREATETRANSFORMFEEDBACKSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLCREATEVERTEXARRAYSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLCULLFACEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLDEBUGMESSAGECALLBACKARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void */;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCARB callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDELETEBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETECOMMANDLISTSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * lists)
PFNGLDELETEFRAMEBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETENAMEDSTRINGARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLDELETEPATHSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei range)
PFNGLDELETEPERFMONITORSAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFQUERYINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLDELETEPROGRAMPIPELINESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEQUERIESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * samplers)
PFNGLDELETESHADERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETESTATESNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * states)
PFNGLDELETESYNCPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync)
PFNGLDELETETEXTURESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDEPTHBOUNDSDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zmin,GLdouble zmax)
PFNGLDEPTHFUNCPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLDEPTHMASKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t	typeref:typename:void (APIENTRYP)(GLboolean flag)
PFNGLDEPTHRANGEARRAYDVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYDVNVPROC) (GLuint first, GLsizei count, const GLdoub/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEARRAYVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble zNear,GLdouble zFar)
PFNGLDEPTHRANGEFPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat n,GLfloat f)
PFNGLDEPTHRANGEINDEXEDDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDDNVPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEINDEXEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble n,GLdouble f)
PFNGLDETACHSHADERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDISABLECLIENTSTATEIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLDISABLEINDEXEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum cap)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYATTRIBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_g/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSINDIRECTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect)
PFNGLDRAWARRAYSINSTANCEDARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei coun/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWARRAYSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum buf)
PFNGLDRAWBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWCOMMANDSADDRESSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *i/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode,const GLuint64 * indirects,const GLsizei * sizes,GLuint count)
PFNGLDRAWCOMMANDSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLi/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode,GLuint buffer,const GLintptr * indirects,const GLsizei * sizes,GLuint count)
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const /;"	t	typeref:typename:void (APIENTRYP)(const GLuint64 * indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLDRAWCOMMANDSSTATESNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirects/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,const GLintptr * indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLDRAWELEMENTSBASEVERTEXPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect)
PFNGLDRAWELEMENTSINSTANCEDARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount)
PFNGLDRAWELEMENTSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const v/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWMESHTASKSINDIRECTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDRAWMESHTASKSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWMESHTASKSNVPROC) (GLuint first, GLuint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLuint count)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream)
PFNGLDRAWVKIMAGENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 vkImage,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLEDGEFLAGFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei stride)
PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) (GLenum target, GLeglImageOES imag/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLeglImageOES image,const GLint * attrib_list)
PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) (GLuint texture, GLeglImageOES/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLeglImageOES image,const GLint * attrib_list)
PFNGLENABLECLIENTSTATEIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum array,GLuint index)
PFNGLENABLEINDEXEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum cap)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYATTRIBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum array)
PFNGLENABLEVERTEXATTRIBARRAYPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENDCONDITIONALRENDERNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDPERFMONITORAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor)
PFNGLENDPERFQUERYINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle)
PFNGLENDQUERYINDEXEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDTRANSFORMFEEDBACKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLEVALUATEDEPTHVALUESARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFENCESYNCPROC	src/external/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFINISHPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFOGCOORDFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLFRAGMENTCOVERAGECOLORNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint color)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFRAMEBUFFERPARAMETERIMESAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIMESAPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERPARAMETERIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint start,GLsizei count,const GLfloat * v)
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint start,GLsizei count,const GLfloat * v)
PFNGLFRAMEBUFFERTEXTURE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTUREARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachme/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint baseViewIndex,GLsizei numViews)
PFNGLFRAMEBUFFERTEXTUREPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRONTFACEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLGENBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target)
PFNGLGENERATETEXTUREMIPMAPEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target)
PFNGLGENERATETEXTUREMIPMAPPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture)
PFNGLGENFRAMEBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENPATHSNVPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLsizei range)
PFNGLGENPERFMONITORSAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * monitors)
PFNGLGENPROGRAMPIPELINESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENQUERIESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,GLuint * samplers)
PFNGLGENTEXTURESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETATTACHEDSHADERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONPROC	src/external/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANINDEXEDVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint64EXT * params)
PFNGLGETBUFFERPOINTERVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCOMMANDHEADERNVPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum tokenID,GLuint size)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLsizei bufSize,void * pixels)
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void * pixels)
PFNGLGETCOVERAGEMODULATIONTABLENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufSize, GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei bufSize,GLfloat * v)
PFNGLGETDEBUGMESSAGELOGARBPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *s/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDOUBLEINDEXEDVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *d/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEI_VEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * data)
PFNGLGETERRORPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETFIRSTPERFQUERYIDINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint * queryId)
PFNGLGETFLOATINDEXEDVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATI_VEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * data)
PFNGLGETFRAGDATAINDEXPROC	src/external/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	src/external/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETGRAPHICSRESETSTATUSPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETIMAGEHANDLEARBPROC	src/external/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean /;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGEHANDLENVPROC	src/external/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean l/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETINTEGER64I_VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint64 * data)
PFNGLGETINTEGERINDEXEDVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERUI64I_VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint index,GLuint64EXT * result)
PFNGLGETINTEGERUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum value,GLuint64EXT * result)
PFNGLGETINTEGERVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * data)
PFNGLGETINTERNALFORMATI64VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei count,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei count,GLint * params)
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei samples,GLenum pname,GLsizei count,GLint * params)
PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC) (GLuint memory, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint memory,GLenum pname,GLint first,GLsizei count,GLuint * params)
PFNGLGETMULTISAMPLEFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTITEXENVFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXENVIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXGENDVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETMULTITEXGENFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXGENIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
PFNGLGETMULTITEXIMAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint leve/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
PFNGLGETMULTITEXPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint64 * params)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,GLuint64EXT * params)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void */;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERPOINTERVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * param)
PFNGLGETNAMEDPROGRAMIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint * params)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum pname,void * string)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCOMPRESSEDTEXIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,void * pixels)
PFNGLGETNEXTPERFQUERYIDINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint * nextQueryId)
PFNGLGETNTEXIMAGEARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNTEXIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETNUNIFORMDVARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMDVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei bu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint64 * params)
PFNGLGETNUNIFORMIVARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint64 * params)
PFNGLGETNUNIFORMUIVARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETNUNIFORMUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTLABELEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPTRLABELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETPATHCOMMANDSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLubyte * commands)
PFNGLGETPATHCOORDSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * coords)
PFNGLGETPATHDASHARRAYNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLfloat * dashArray)
PFNGLGETPATHLENGTHNVPROC	src/external/glcorearb.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei/;"	t	typeref:typename:GLfloat (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments)
PFNGLGETPATHMETRICRANGENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint first/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHMETRICSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHPARAMETERFVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat * value)
PFNGLGETPATHPARAMETERIVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint * value)
PFNGLGETPATHSPACINGNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
PFNGLGETPERFCOUNTERINFOINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLenum pname,void * data)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei counterSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, /;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORGROUPSAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize,/;"	t	typeref:typename:void (APIENTRYP)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFQUERYDATAINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryHandle,GLuint flags,GLsizei dataSize,void * data,GLuint * bytesWritten)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId)/;"	t	typeref:typename:void (APIENTRYP)(GLchar * queryName,GLuint * queryId)
PFNGLGETPERFQUERYINFOINTELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength,/;"	t	typeref:typename:void (APIENTRYP)(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
PFNGLGETPOINTERINDEXEDVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **dat/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,void ** data)
PFNGLGETPOINTERI_VEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,void ** params)
PFNGLGETPOINTERVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,void ** params)
PFNGLGETPROGRAMBINARYPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMINFOLOGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEFVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei count,GLsizei * length,GLfloat * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei count,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	src/external/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	src/external/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETQUERYBUFFEROBJECTI64VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTUI64VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYINDEXEDIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSHADERINFOLOGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERPRECISIONFORMATPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSHADINGRATEIMAGEPALETTENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint entry, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint viewport,GLuint entry,GLenum * rate)
PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC) (GLenum rate, GLuint samples,/;"	t	typeref:typename:void (APIENTRYP)(GLenum rate,GLuint samples,GLuint index,GLint * location)
PFNGLGETSTAGEINDEXNVPROC	src/external/glcorearb.h	/^typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);$/;"	t	typeref:typename:GLushort (APIENTRYP)(GLenum shadertype)
PFNGLGETSTRINGIPROC	src/external/glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name,GLuint index)
PFNGLGETSTRINGPROC	src/external/glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name)
PFNGLGETSUBROUTINEINDEXPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	src/external/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei */;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLenum pname,GLsizei count,GLsizei * length,GLint * values)
PFNGLGETTEXIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXLEVELPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXLEVELPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXPARAMETERIIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREHANDLEARBPROC	src/external/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREHANDLENVPROC	src/external/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture)
PFNGLGETTEXTUREIMAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXTUREIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTURELEVELPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLen/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLint * params)
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	src/external/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLENVPROC	src/external/glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler)/;"	t	typeref:typename:GLuint64 (APIENTRYP)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESUBIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETTRANSFORMFEEDBACKI64_VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint in/;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLenum pname,GLuint index,GLint64 * param)
PFNGLGETTRANSFORMFEEDBACKIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLenum pname,GLint * param)
PFNGLGETTRANSFORMFEEDBACKI_VPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint inde/;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLenum pname,GLuint index,GLint * param)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETUNIFORMBLOCKINDEXPROC	src/external/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMDVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 * params)
PFNGLGETUNIFORMI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT */;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT * params)
PFNGLGETUNIFORMINDICESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONPROC	src/external/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 */;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 * params)
PFNGLGETUNIFORMUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT * params)
PFNGLGETUNIFORMUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETVERTEXARRAYINDEXED64IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint64 * param)
PFNGLGETVERTEXARRAYINDEXEDIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint */;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLenum pname,void ** param)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLenum pname,void ** param)
PFNGLGETVERTEXATTRIBDVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBPOINTERVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **po/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVKPROCADDRNVPROC	src/external/glcorearb.h	/^typedef GLVULKANPROCNV (APIENTRYP PFNGLGETVKPROCADDRNVPROC) (const GLchar *name);$/;"	t	typeref:typename:GLVULKANPROCNV (APIENTRYP)(const GLchar * name)
PFNGLHINTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLINDEXFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLINSERTEVENTMARKEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLINTERPOLATEPATHSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
PFNGLINVALIDATEBUFFERDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei nu/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISBUFFERPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERRESIDENTNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLISCOMMANDLISTNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint list)
PFNGLISENABLEDINDEXEDEXTPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum cap)
PFNGLISFRAMEBUFFERPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISIMAGEHANDLERESIDENTARBPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISIMAGEHANDLERESIDENTNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISNAMEDBUFFERRESIDENTNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISNAMEDSTRINGARBPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLISPATHNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path)
PFNGLISPOINTINFILLPATHNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x,/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLuint mask,GLfloat x,GLfloat y)
PFNGLISPOINTINSTROKEPATHNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y)/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLfloat x,GLfloat y)
PFNGLISPROGRAMPIPELINEPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISQUERYPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISRENDERBUFFERPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint sampler)
PFNGLISSHADERPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISSTATENVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) (GLuint state);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint state)
PFNGLISSYNCPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsync sync)
PFNGLISTEXTUREHANDLERESIDENTARBPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTEXTUREHANDLERESIDENTNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint64 handle)
PFNGLISTEXTUREPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISTRANSFORMFEEDBACKPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISVERTEXARRAYPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLLABELOBJECTEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, co/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLINEWIDTHPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat width)
PFNGLLINKPROGRAMPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, c/;"	t	typeref:typename:void (APIENTRYP)(GLuint list,GLuint segment,const void ** indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLLOGICOPPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum opcode)
PFNGLMAKEBUFFERNONRESIDENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLMAKEBUFFERRESIDENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle,GLenum access)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 handle)
PFNGLMAPBUFFERPROC	src/external/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEPROC	src/external/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr le/;"	t	typeref:typename:void * (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPNAMEDBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERPROC	src/external/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	src/external/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPNAMEDBUFFERRANGEPROC	src/external/glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeip/;"	t	typeref:typename:void * (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMATRIXFRUSTUMEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXLOAD3X2FNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOAD3X3FNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOADDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXLOADIDENTITYEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULT3X2FNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULT3X3FNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m/;"	t	typeref:typename:void (APIENTRYP)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLdouble * m)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLfloat * m)
PFNGLMATRIXORTHOEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar)
PFNGLMATRIXPOPEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXPUSHEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLMATRIXROTATEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLd/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXROTATEFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLflo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXSCALEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXSCALEFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXTRANSLATEDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXTRANSLATEFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMAXSHADERCOMPILERTHREADSARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint count)
PFNGLMAXSHADERCOMPILERTHREADSKHRPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) (GLuint count);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint count)
PFNGLMEMORYBARRIERBYREGIONPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMINSAMPLESHADINGARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *in/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, const void *indi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) (GLenum mode, const void *indirec/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) (GLenum mode, GLenum type, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC) (GLintptr indirect, GLintptr/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect, GLsizei drawc/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTITEXBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLMULTITEXCOORDPOINTEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMULTITEXENVFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXENVFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXENVIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXENVIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXGENDEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
PFNGLMULTITEXGENDVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
PFNGLMULTITEXGENFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
PFNGLMULTITEXGENFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
PFNGLMULTITEXGENIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,GLint param)
PFNGLMULTITEXGENIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
PFNGLMULTITEXIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXPARAMETERFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXPARAMETERFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXPARAMETERIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXPARAMETERIIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXPARAMETERIUIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
PFNGLMULTITEXPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXRENDERBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLuint renderbuffer)
PFNGLMULTITEXSUBIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (APIENTRYP)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLNAMEDBUFFERATTACHMEMORYNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERATTACHMEMORYNVPROC) (GLuint buffer, GLuint memory, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLuint memory,GLuint64 offset)
PFNGLNAMEDBUFFERDATAEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *d/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit)
PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC) (GLuint buffer, GLintptr offset/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLuint memory,GLuint64 memOffset,GLboolean commit)
PFNGLNAMEDBUFFERSTORAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSTORAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSUBDATAEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDBUFFERSUBDATAPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuff/;"	t	typeref:typename:void (APIENTRYP)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum buf)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, co/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum src)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat * v)
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat * v)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachm/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attac/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLdouble * params)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum targe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,const GLuint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum targ/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLNAMEDPROGRAMSTRINGEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum f/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLuint renderb/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLsizei storageSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderb/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internal/;"	t	typeref:typename:void (APIENTRYP)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDSTRINGARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNORMALFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLsizei stride)
PFNGLOBJECTLABELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLPATCHPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLPATHCOMMANDSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyt/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOORDSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOVERDEPTHFUNCNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLPATHDASHARRAYNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
PFNGLPATHGLYPHINDEXARRAYNVPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarg/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHINDEXRANGENVPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontNa/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint pathParameterTemplate,GLfloat emScale,GLuint * baseAndCount)
PFNGLPATHGLYPHRANGENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const v/;"	t	typeref:typename:void (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC	src/external/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fo/;"	t	typeref:typename:GLenum (APIENTRYP)(GLuint firstPathName,GLenum fontTarget,GLsizeiptr fontSize,const void * fontData,GLsizei faceIndex,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHPARAMETERFNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLfloat value)
PFNGLPATHPARAMETERFVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *v/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLfloat * value)
PFNGLPATHPARAMETERINVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,GLint value)
PFNGLPATHPARAMETERIVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *val/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum pname,const GLint * value)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPATHSTENCILFUNCNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLPATHSTRINGNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum format,GLsizei length,const void * pathString)
PFNGLPATHSUBCOMMANDSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHSUBCOORDSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numC/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPAUSETRANSFORMFEEDBACKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPIXELSTOREFPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELSTOREIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTALONGPATHNVPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsi/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
PFNGLPOINTPARAMETERFPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTSIZEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat size)
PFNGLPOLYGONMODEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLPOLYGONOFFSETCLAMPEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units,GLfloat clamp)
PFNGLPOLYGONOFFSETCLAMPPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPPROC) (GLfloat factor, GLfloat units, GLfloat cla/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units,GLfloat clamp)
PFNGLPOLYGONOFFSETPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPOPDEBUGGROUPPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPGROUPMARKEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRIMITIVEBOUNDINGBOXARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat m/;"	t	typeref:typename:void (APIENTRYP)(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW)
PFNGLPRIMITIVERESTARTINDEXPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPROGRAMBINARYPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLPROGRAMPARAMETERIARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPROGRAMUNIFORM1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x)
PFNGLPROGRAMUNIFORM1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0)
PFNGLPROGRAMUNIFORM1DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1I64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 x)
PFNGLPROGRAMUNIFORM1I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x)
PFNGLPROGRAMUNIFORM1I64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM1I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM1IEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 x)
PFNGLPROGRAMUNIFORM1UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x)
PFNGLPROGRAMUNIFORM1UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM1UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM1UIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y)
PFNGLPROGRAMUNIFORM2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
PFNGLPROGRAMUNIFORM2DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2I64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 x,GLint64 y)
PFNGLPROGRAMUNIFORM2I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
PFNGLPROGRAMUNIFORM2I64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM2I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM2IEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 x,GLuint64 y)
PFNGLPROGRAMUNIFORM2UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLPROGRAMUNIFORM2UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM2UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM2UIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLPROGRAMUNIFORM3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
PFNGLPROGRAMUNIFORM3DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3I64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z)
PFNGLPROGRAMUNIFORM3I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLPROGRAMUNIFORM3I64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM3I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM3IEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z)
PFNGLPROGRAMUNIFORM3UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLPROGRAMUNIFORM3UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM3UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM3UIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMUNIFORM4DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
PFNGLPROGRAMUNIFORM4DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4I64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)
PFNGLPROGRAMUNIFORM4I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64E/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLPROGRAMUNIFORM4I64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM4I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM4IEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)
PFNGLPROGRAMUNIFORM4UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLPROGRAMUNIFORM4UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM4UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM4UIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMUI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint64EXT value)
PFNGLPROGRAMUNIFORMUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROVOKINGVERTEXPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHGROUPMARKEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei length,const GLchar * marker)
PFNGLQUERYCOUNTERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum target)
PFNGLRASTERSAMPLESEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocatio/;"	t	typeref:typename:void (APIENTRYP)(GLuint samples,GLboolean fixedsamplelocations)
PFNGLREADBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum src);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum src)
PFNGLREADNPIXELSARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADNPIXELSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, /;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADPIXELSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, G/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,void * pixels)
PFNGLRELEASESHADERCOMPILERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLenum target, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLsizei storageSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRESETMEMORYOBJECTPARAMETERNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESETMEMORYOBJECTPARAMETERNVPROC) (GLuint memory, GLenum pname);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint memory,GLenum pname)
PFNGLRESOLVEDEPTHVALUESNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLSAMPLECOVERAGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLEMASKIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint maskNumber,GLbitfield mask)
PFNGLSAMPLERPARAMETERFPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERIIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSCISSORARRAYVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSOREXCLUSIVEARRAYVNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVEARRAYVNVPROC) (GLuint first, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSOREXCLUSIVENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVENVPROC) (GLint x, GLint y, GLsizei width, GLsizei h/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLSCISSORPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLSECONDARYCOLORFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei strid/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable/;"	t	typeref:typename:void (APIENTRYP)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
PFNGLSHADERBINARYPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * shaders,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLSHADERSOURCEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHADINGRATEIMAGEBARRIERNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEBARRIERNVPROC) (GLboolean synchronize);$/;"	t	typeref:typename:void (APIENTRYP)(GLboolean synchronize)
PFNGLSHADINGRATEIMAGEPALETTENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint first, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLuint viewport,GLuint first,GLsizei count,const GLenum * rates)
PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC) (GLenum rate, GLuint samples, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum rate,GLuint samples,const GLint * locations)
PFNGLSHADINGRATESAMPLEORDERNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERNVPROC) (GLenum order);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum order)
PFNGLSIGNALVKFENCENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 vkFence)
PFNGLSIGNALVKSEMAPHORENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 vkSemaphore)
PFNGLSPECIALIZESHADERARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar *pEntryPoint,/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,const GLchar * pEntryPoint,GLuint numSpecializationConstants,const GLuint * pConstantIndex,const GLuint * pConstantValue)
PFNGLSPECIALIZESHADERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERPROC) (GLuint shader, const GLchar *pEntryPoint, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,const GLchar * pEntryPoint,GLuint numSpecializationConstants,const GLuint * pConstantIndex,const GLuint * pConstantValue)
PFNGLSTATECAPTURENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint state,GLenum mode)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameT/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILFILLPATHNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum fillMode,GLuint mask)
PFNGLSTENCILFUNCPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILOPPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum fail,GLenum zfail,GLenum zpass)
PFNGLSTENCILOPSEPARATEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNam/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILSTROKEPATHNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLint reference,GLuint mask)
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILTHENCOVERFILLPATHNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLenum fillMode,GLuint mask,GLenum coverMode)
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint path,GLint reference,GLuint mask,GLenum coverMode)
PFNGLSUBPIXELPRECISIONBIASNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint xbits,GLuint ybits)
PFNGLTEXATTACHMEMORYNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 offs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint memory,GLuint64 offset)
PFNGLTEXBUFFERARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buf/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERRANGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXCOORDFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLTEXIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPAGECOMMITMENTARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXPAGECOMMITMENTMEMNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTMEMNVPROC) (GLenum target, GLint layer, GLint leve/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint layer,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset,GLboolean commit)
PFNGLTEXPARAMETERFPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLTEXPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXPARAMETERIIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLTEXPARAMETERIUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXSTORAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSUBIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREATTACHMEMORYNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREATTACHMEMORYNVPROC) (GLuint texture, GLuint memory, GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLuint memory,GLuint64 offset)
PFNGLTEXTUREBARRIERNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTEXTUREBARRIERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLTEXTUREBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum intern/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERRANGEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum i/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTUREBUFFERRANGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTUREIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC) (GLuint texture, GLint layer, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint layer,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset,GLboolean commit)
PFNGLTEXTUREPARAMETERFEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXTUREPARAMETERFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,const GLfloat * param)
PFNGLTEXTUREPARAMETERIEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pn/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIUIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIVEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum pname,const GLint * param)
PFNGLTEXTURERENDERBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint renderbuffer)
PFNGLTEXTURESTORAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, /;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESUBIMAGE1DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREVIEWPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLuint index,GLuint buffer)
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMPATHNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum tra/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
PFNGLUNIFORM1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1I64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64 x)
PFNGLUNIFORM1I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x)
PFNGLUNIFORM1I64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM1I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM1IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 x)
PFNGLUNIFORM1UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x)
PFNGLUNIFORM1UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM1UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM1UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2I64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64 x,GLint64 y)
PFNGLUNIFORM2I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y)
PFNGLUNIFORM2I64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM2I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM2IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 x,GLuint64 y)
PFNGLUNIFORM2UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLUNIFORM2UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM2UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM2UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3I64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64 x,GLint64 y,GLint64 z)
PFNGLUNIFORM3I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLUNIFORM3I64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM3I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM3IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 x,GLuint64 y,GLuint64 z)
PFNGLUNIFORM3UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLUNIFORM3UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM3UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM3UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4I64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)
PFNGLUNIFORM4I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLUNIFORM4I64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM4I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EX/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM4IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuin/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)
PFNGLUNIFORM4UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, /;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLUNIFORM4UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint6/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM4UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM4UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMHANDLEUI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GL/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMMATRIX2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMUI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint64EXT value)
PFNGLUNIFORMUI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64E/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNMAPBUFFERPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPNAMEDBUFFEREXTPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLUNMAPNAMEDBUFFERPROC	src/external/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLUSEPROGRAMPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSESHADERPROGRAMEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint program)
PFNGLVALIDATEPROGRAMPIPELINEPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVERTEXARRAYATTRIBBINDINGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYATTRIBFORMATPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYATTRIBIFORMATPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYATTRIBLFORMATPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYBINDINGDIVISORPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingin/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYELEMENTBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffe/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint index,GLuint divisor)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer,/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXBUFFERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYVERTEXBUFFERSPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXATTRIB1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1SPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2SPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3SPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBBINDINGPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
PFNGLVERTEXATTRIBFORMATPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4BVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4IPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4SVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4UBVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4USVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBIFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBIFORMATPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBL1DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x)
PFNGLVERTEXATTRIBL1I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL1UI64ARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64VARBPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL1UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL2DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y)
PFNGLVERTEXATTRIBL2I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL2UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y)
PFNGLVERTEXATTRIBL2UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL3DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLVERTEXATTRIBL3I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL3UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLVERTEXATTRIBL3UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL4DPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4I64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLVERTEXATTRIBL4I64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL4UI64NVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLVERTEXATTRIBL4UI64VNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBLFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBLFORMATPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPOINTERPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXBINDINGDIVISORPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXFORMATNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (APIENTRYP)(GLint size,GLenum type,GLsizei stride)
PFNGLVIEWPORTARRAYVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVIEWPORTPOSITIONWSCALENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat xcoeff,GLfloat ycoeff)
PFNGLVIEWPORTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLVIEWPORTSWIZZLENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum swizz/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum swizzlex,GLenum swizzley,GLenum swizzlez,GLenum swizzlew)
PFNGLWAITSYNCPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWAITVKSEMAPHORENVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint64 vkSemaphore)
PFNGLWEIGHTPATHSNVPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint resultPath,GLsizei numPaths,const GLuint * paths,const GLfloat * weights)
PFNGLWINDOWRECTANGLESEXTPROC	src/external/glcorearb.h	/^typedef void (APIENTRYP PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLint */;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,const GLint * box)
PFNWGLALLOCATEMEMORYNVPROC	src/external/wglext.h	/^typedef void *(WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat wri/;"	t	typeref:typename:void * (WINAPI *)(GLsizei size,GLfloat readfreq,GLfloat writefreq,GLfloat priority)
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,const HANDLE * pEvent,const LPVOID * pAddress,const DWORD * pSize,UINT count)
PFNWGLBEGINFRAMETRACKINGI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	src/external/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:GLboolean (WINAPI *)(GLushort id)
PFNWGLBINDSWAPBARRIERNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDSWAPBARRIERNVPROC) (GLuint group, GLuint barrier);$/;"	t	typeref:typename:BOOL (WINAPI *)(GLuint group,GLuint barrier)
PFNWGLBINDTEXIMAGEARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBuffer)
PFNWGLBINDVIDEOCAPTUREDEVICENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEOCAPTUREDEVICENVPROC) (UINT uVideoSlot, HVIDEOINPUTDEVICENV/;"	t	typeref:typename:BOOL (WINAPI *)(UINT uVideoSlot,HVIDEOINPUTDEVICENV hDevice)
PFNWGLBINDVIDEODEVICENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEODEVICENVPROC) (HDC hDc, unsigned int uVideoSlot, HVIDEOOUT/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,unsigned int uVideoSlot,HVIDEOOUTPUTDEVICENV hVideoDevice,const int * piAttribList)
PFNWGLBINDVIDEOIMAGENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEOIMAGENVPROC) (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffe/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hVideoDevice,HPBUFFERARB hPbuffer,int iVideoBuffer)
PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC	src/external/wglext.h	/^typedef VOID (WINAPI * PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC) (HGLRC dstCtx, GLint srcX0, GLint sr/;"	t	typeref:typename:VOID (WINAPI *)(HGLRC dstCtx,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNWGLCHOOSEPIXELFORMATARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, const/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
PFNWGLCHOOSEPIXELFORMATEXTPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, const/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
PFNWGLCOPYIMAGESUBDATANVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLCOPYIMAGESUBDATANVPROC) (HGLRC hSrcRC, GLuint srcName, GLenum srcTa/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hSrcRC,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,HGLRC hDstRC,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNWGLCREATEAFFINITYDCNVPROC	src/external/wglext.h	/^typedef HDC (WINAPI * PFNWGLCREATEAFFINITYDCNVPROC) (const HGPUNV *phGpuList);$/;"	t	typeref:typename:HDC (WINAPI *)(const HGPUNV * phGpuList)
PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC	src/external/wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC) (UINT id);$/;"	t	typeref:typename:HGLRC (WINAPI *)(UINT id)
PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC	src/external/wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (UINT id, HGLRC hShareConte/;"	t	typeref:typename:HGLRC (WINAPI *)(UINT id,HGLRC hShareContext,const int * attribList)
PFNWGLCREATEBUFFERREGIONARBPROC	src/external/wglext.h	/^typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType)/;"	t	typeref:typename:HANDLE (WINAPI *)(HDC hDC,int iLayerPlane,UINT uType)
PFNWGLCREATECONTEXTATTRIBSARBPROC	src/external/wglext.h	/^typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC) (HDC hDC, HGLRC hShareContext, const /;"	t	typeref:typename:HGLRC (WINAPI *)(HDC hDC,HGLRC hShareContext,const int * attribList)
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	src/external/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:GLboolean (WINAPI *)(GLushort id)
PFNWGLCREATEIMAGEBUFFERI3DPROC	src/external/wglext.h	/^typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t	typeref:typename:LPVOID (WINAPI *)(HDC hDC,DWORD dwSize,UINT uFlags)
PFNWGLCREATEPBUFFERARBPROC	src/external/wglext.h	/^typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth/;"	t	typeref:typename:HPBUFFERARB (WINAPI *)(HDC hDC,int iPixelFormat,int iWidth,int iHeight,const int * piAttribList)
PFNWGLCREATEPBUFFEREXTPROC	src/external/wglext.h	/^typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth/;"	t	typeref:typename:HPBUFFEREXT (WINAPI *)(HDC hDC,int iPixelFormat,int iWidth,int iHeight,const int * piAttribList)
PFNWGLDELAYBEFORESWAPNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELAYBEFORESWAPNVPROC) (HDC hDC, GLfloat seconds);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLfloat seconds)
PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hglrc)
PFNWGLDELETEBUFFERREGIONARBPROC	src/external/wglext.h	/^typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t	typeref:typename:VOID (WINAPI *)(HANDLE hRegion)
PFNWGLDELETEDCNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDELETEDCNVPROC) (HDC hdc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc)
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	src/external/wglext.h	/^typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:VOID (WINAPI *)(GLushort id)
PFNWGLDESTROYIMAGEBUFFERI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,LPVOID pAddress)
PFNWGLDESTROYPBUFFERARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer)
PFNWGLDESTROYPBUFFEREXTPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFEREXT hPbuffer)
PFNWGLDISABLEFRAMELOCKI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLDISABLEGENLOCKI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLDXCLOSEDEVICENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXCLOSEDEVICENVPROC) (HANDLE hDevice);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice)
PFNWGLDXLOCKOBJECTSNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjects/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,GLint count,HANDLE * hObjects)
PFNWGLDXOBJECTACCESSNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hObject,GLenum access)
PFNWGLDXOPENDEVICENVPROC	src/external/wglext.h	/^typedef HANDLE (WINAPI * PFNWGLDXOPENDEVICENVPROC) (void *dxDevice);$/;"	t	typeref:typename:HANDLE (WINAPI *)(void * dxDevice)
PFNWGLDXREGISTEROBJECTNVPROC	src/external/wglext.h	/^typedef HANDLE (WINAPI * PFNWGLDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint n/;"	t	typeref:typename:HANDLE (WINAPI *)(HANDLE hDevice,void * dxObject,GLuint name,GLenum type,GLenum access)
PFNWGLDXSETRESOURCESHAREHANDLENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandle/;"	t	typeref:typename:BOOL (WINAPI *)(void * dxObject,HANDLE shareHandle)
PFNWGLDXUNLOCKOBJECTSNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjec/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,GLint count,HANDLE * hObjects)
PFNWGLDXUNREGISTEROBJECTNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,HANDLE hObject)
PFNWGLENABLEFRAMELOCKI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLENABLEGENLOCKI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLENDFRAMETRACKINGI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC	src/external/wglext.h	/^typedef UINT (WINAPI * PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC) (HDC hDc, HVIDEOINPUTDEVICENV */;"	t	typeref:typename:UINT (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV * phDeviceList)
PFNWGLENUMERATEVIDEODEVICESNVPROC	src/external/wglext.h	/^typedef int (WINAPI * PFNWGLENUMERATEVIDEODEVICESNVPROC) (HDC hDc, HVIDEOOUTPUTDEVICENV *phDevic/;"	t	typeref:typename:int (WINAPI *)(HDC hDc,HVIDEOOUTPUTDEVICENV * phDeviceList)
PFNWGLENUMGPUDEVICESNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUDEVICESNVPROC) (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE /;"	t	typeref:typename:BOOL (WINAPI *)(HGPUNV hGpu,UINT iDeviceIndex,PGPU_DEVICE lpGpuDevice)
PFNWGLENUMGPUSFROMAFFINITYDCNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUSFROMAFFINITYDCNVPROC) (HDC hAffinityDC, UINT iGpuIndex, HGP/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hAffinityDC,UINT iGpuIndex,HGPUNV * hGpu)
PFNWGLENUMGPUSNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUSNVPROC) (UINT iGpuIndex, HGPUNV *phGpu);$/;"	t	typeref:typename:BOOL (WINAPI *)(UINT iGpuIndex,HGPUNV * phGpu)
PFNWGLFREEMEMORYNVPROC	src/external/wglext.h	/^typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);$/;"	t	typeref:typename:void (WINAPI *)(void * pointer)
PFNWGLGENLOCKSAMPLERATEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uRate)
PFNWGLGENLOCKSOURCEDELAYI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uDelay)
PFNWGLGENLOCKSOURCEEDGEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uEdge)
PFNWGLGENLOCKSOURCEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uSource)
PFNWGLGETCONTEXTGPUIDAMDPROC	src/external/wglext.h	/^typedef UINT (WINAPI * PFNWGLGETCONTEXTGPUIDAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:UINT (WINAPI *)(HGLRC hglrc)
PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC	src/external/wglext.h	/^typedef HGLRC (WINAPI * PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC) (void);$/;"	t	typeref:typename:HGLRC (WINAPI *)(void)
PFNWGLGETCURRENTREADDCARBPROC	src/external/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t	typeref:typename:HDC (WINAPI *)(void)
PFNWGLGETCURRENTREADDCEXTPROC	src/external/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t	typeref:typename:HDC (WINAPI *)(void)
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *pi/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,int * piValue)
PFNWGLGETEXTENSIONSSTRINGARBPROC	src/external/wglext.h	/^typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t	typeref:typename:const char * (WINAPI *)(HDC hdc)
PFNWGLGETEXTENSIONSSTRINGEXTPROC	src/external/wglext.h	/^typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t	typeref:typename:const char * (WINAPI *)(void)
PFNWGLGETFRAMEUSAGEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);$/;"	t	typeref:typename:BOOL (WINAPI *)(float * pUsage)
PFNWGLGETGAMMATABLEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORT/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iEntries,USHORT * puRed,USHORT * puGreen,USHORT * puBlue)
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piVa/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,int * piValue)
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uRate)
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uDelay)
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uEdge)
PFNWGLGETGENLOCKSOURCEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uSource)
PFNWGLGETGPUIDSAMDPROC	src/external/wglext.h	/^typedef UINT (WINAPI * PFNWGLGETGPUIDSAMDPROC) (UINT maxCount, UINT *ids);$/;"	t	typeref:typename:UINT (WINAPI *)(UINT maxCount,UINT * ids)
PFNWGLGETGPUINFOAMDPROC	src/external/wglext.h	/^typedef INT (WINAPI * PFNWGLGETGPUINFOAMDPROC) (UINT id, INT property, GLenum dataType, UINT siz/;"	t	typeref:typename:INT (WINAPI *)(UINT id,INT property,GLenum dataType,UINT size,void * data)
PFNWGLGETMSCRATEOMLPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT32 * numerator,INT32 * denominator)
PFNWGLGETPBUFFERDCARBPROC	src/external/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t	typeref:typename:HDC (WINAPI *)(HPBUFFERARB hPbuffer)
PFNWGLGETPBUFFERDCEXTPROC	src/external/wglext.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t	typeref:typename:HDC (WINAPI *)(HPBUFFEREXT hPbuffer)
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLay/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,const int * piAttributes,FLOAT * pfValues)
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLay/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,int * piAttributes,FLOAT * pfValues)
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLay/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,const int * piAttributes,int * piValues)
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLay/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,int * piAttributes,int * piValues)
PFNWGLGETSWAPINTERVALEXTPROC	src/external/wglext.h	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t	typeref:typename:int (WINAPI *)(void)
PFNWGLGETSYNCVALUESOMLPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc)/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 * ust,INT64 * msc,INT64 * sbc)
PFNWGLGETVIDEODEVICENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETVIDEODEVICENVPROC) (HDC hDC, int numDevices, HPVIDEODEV *hVideoD/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int numDevices,HPVIDEODEV * hVideoDevice)
PFNWGLGETVIDEOINFONVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLGETVIDEOINFONVPROC) (HPVIDEODEV hpVideoDevice, unsigned long *pulCo/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hpVideoDevice,unsigned long * pulCounterOutputPbuffer,unsigned long * pulCounterOutputVideo)
PFNWGLISENABLEDFRAMELOCKI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(BOOL * pFlag)
PFNWGLISENABLEDGENLOCKI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,BOOL * pFlag)
PFNWGLJOINSWAPGROUPNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLJOINSWAPGROUPNVPROC) (HDC hDC, GLuint group);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint group)
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	src/external/wglext.h	/^typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint l/;"	t	typeref:typename:GLboolean (WINAPI *)(const GLushort * table,GLuint length)
PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevice/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice)
PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hglrc)
PFNWGLMAKECONTEXTCURRENTARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDrawDC,HDC hReadDC,HGLRC hglrc)
PFNWGLMAKECONTEXTCURRENTEXTPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDrawDC,HDC hReadDC,HGLRC hglrc)
PFNWGLQUERYCURRENTCONTEXTNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYCURRENTCONTEXTNVPROC) (int iAttribute, int *piValue);$/;"	t	typeref:typename:BOOL (WINAPI *)(int iAttribute,int * piValue)
PFNWGLQUERYFRAMECOUNTNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMECOUNTNVPROC) (HDC hDC, GLuint *count);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * count)
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(BOOL * pFlag)
PFNWGLQUERYFRAMETRACKINGI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFrame/;"	t	typeref:typename:BOOL (WINAPI *)(DWORD * pFrameCount,DWORD * pMissedFrames,float * pLastMissedUsage)
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, U/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uMaxLineDelay,UINT * uMaxPixelDelay)
PFNWGLQUERYMAXSWAPGROUPSNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYMAXSWAPGROUPSNVPROC) (HDC hDC, GLuint *maxGroups, GLuint *maxB/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * maxGroups,GLuint * maxBarriers)
PFNWGLQUERYPBUFFERARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *pi/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iAttribute,int * piValue)
PFNWGLQUERYPBUFFEREXTPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *pi/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFEREXT hPbuffer,int iAttribute,int * piValue)
PFNWGLQUERYSWAPGROUPNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYSWAPGROUPNVPROC) (HDC hDC, GLuint *group, GLuint *barrier);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * group,GLuint * barrier)
PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevic/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice,int iAttribute,int * piValue)
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,const LPVOID * pAddress,UINT count)
PFNWGLRELEASEPBUFFERDCARBPROC	src/external/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t	typeref:typename:int (WINAPI *)(HPBUFFERARB hPbuffer,HDC hDC)
PFNWGLRELEASEPBUFFERDCEXTPROC	src/external/wglext.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t	typeref:typename:int (WINAPI *)(HPBUFFEREXT hPbuffer,HDC hDC)
PFNWGLRELEASETEXIMAGEARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBuffer)
PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDev/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice)
PFNWGLRELEASEVIDEODEVICENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEODEVICENVPROC) (HPVIDEODEV hVideoDevice);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hVideoDevice)
PFNWGLRELEASEVIDEOIMAGENVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOIMAGENVPROC) (HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iVideoBuffer)
PFNWGLRESETFRAMECOUNTNVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESETFRAMECOUNTNVPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLRESTOREBUFFERREGIONARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int widt/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hRegion,int x,int y,int width,int height,int xSrc,int ySrc)
PFNWGLSAVEBUFFERREGIONARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, /;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hRegion,int x,int y,int width,int height)
PFNWGLSENDPBUFFERTOVIDEONVPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSENDPBUFFERTOVIDEONVPROC) (HPBUFFERARB hPbuffer, int iBufferType, u/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBufferType,unsigned long * pulCounterPbuffer,BOOL bBlock)
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const i/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,const int * piValue)
PFNWGLSETGAMMATABLEI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iEntries,const USHORT * puRed,const USHORT * puGreen,const USHORT * puBlue)
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,const int * piValue)
PFNWGLSETPBUFFERATTRIBARBPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttrib/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,const int * piAttribList)
PFNWGLSETSTEREOEMITTERSTATE3DLPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSETSTEREOEMITTERSTATE3DLPROC) (HDC hDC, UINT uState);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uState)
PFNWGLSWAPBUFFERSMSCOMLPROC	src/external/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, /;"	t	typeref:typename:INT64 (WINAPI *)(HDC hdc,INT64 target_msc,INT64 divisor,INT64 remainder)
PFNWGLSWAPINTERVALEXTPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t	typeref:typename:BOOL (WINAPI *)(int interval)
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	src/external/wglext.h	/^typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, INT fuPlanes, INT64 target_m/;"	t	typeref:typename:INT64 (WINAPI *)(HDC hdc,INT fuPlanes,INT64 target_msc,INT64 divisor,INT64 remainder)
PFNWGLWAITFORMSCOMLPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 target_msc,INT64 divisor,INT64 remainder,INT64 * ust,INT64 * msc,INT64 * sbc)
PFNWGLWAITFORSBCOMLPROC	src/external/wglext.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *m/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 target_sbc,INT64 * ust,INT64 * msc,INT64 * sbc)
PGPU_DEVICE	src/external/wglext.h	/^typedef struct _GPU_DEVICE *PGPU_DEVICE;$/;"	t	typeref:struct:_GPU_DEVICE *
STBIDEF	src/external/stb_image.h	/^#define STBIDEF /;"	d
STBI_ASSERT	src/external/stb_image.h	/^#define STBI_ASSERT(/;"	d
STBI_ASSERT	src/main.cpp	/^#define STBI_ASSERT /;"	d	file:
STBI_EXTERN	src/external/stb_image.h	/^#define STBI_EXTERN /;"	d
STBI_FREE	src/external/stb_image.h	/^#define STBI_FREE(/;"	d
STBI_HAS_LROTL	src/external/stb_image.h	/^#define STBI_HAS_LROTL$/;"	d
STBI_INCLUDE_STB_IMAGE_H	src/external/stb_image.h	/^#define STBI_INCLUDE_STB_IMAGE_H$/;"	d
STBI_MALLOC	src/external/stb_image.h	/^#define STBI_MALLOC(/;"	d
STBI_MAX_DIMENSIONS	src/external/stb_image.h	/^#define STBI_MAX_DIMENSIONS /;"	d
STBI_NOTUSED	src/external/stb_image.h	/^#define STBI_NOTUSED(/;"	d
STBI_NO_BMP	src/external/stb_image.h	/^   #define STBI_NO_BMP$/;"	d
STBI_NO_GIF	src/external/stb_image.h	/^   #define STBI_NO_GIF$/;"	d
STBI_NO_HDR	src/external/stb_image.h	/^   #define STBI_NO_HDR$/;"	d
STBI_NO_JPEG	src/external/stb_image.h	/^   #define STBI_NO_JPEG$/;"	d
STBI_NO_PIC	src/external/stb_image.h	/^   #define STBI_NO_PIC$/;"	d
STBI_NO_PNG	src/external/stb_image.h	/^   #define STBI_NO_PNG$/;"	d
STBI_NO_PNM	src/external/stb_image.h	/^   #define STBI_NO_PNM$/;"	d
STBI_NO_PSD	src/external/stb_image.h	/^   #define STBI_NO_PSD$/;"	d
STBI_NO_SIMD	src/external/stb_image.h	/^#define STBI_NO_SIMD$/;"	d
STBI_NO_TGA	src/external/stb_image.h	/^   #define STBI_NO_TGA$/;"	d
STBI_NO_ZLIB	src/external/stb_image.h	/^#define STBI_NO_ZLIB$/;"	d
STBI_ORDER_BGR	src/external/stb_image.h	/^   STBI_ORDER_BGR$/;"	e	enum:__anon11d2a80f0403
STBI_ORDER_RGB	src/external/stb_image.h	/^   STBI_ORDER_RGB,$/;"	e	enum:__anon11d2a80f0403
STBI_REALLOC	src/external/stb_image.h	/^#define STBI_REALLOC(/;"	d
STBI_REALLOC_SIZED	src/external/stb_image.h	/^#define STBI_REALLOC_SIZED(/;"	d
STBI_SIMD_ALIGN	src/external/stb_image.h	/^#define STBI_SIMD_ALIGN(/;"	d
STBI_SSE2	src/external/stb_image.h	/^#define STBI_SSE2$/;"	d
STBI_THREAD_LOCAL	src/external/stb_image.h	/^        #define STBI_THREAD_LOCAL /;"	d
STBI_THREAD_LOCAL	src/external/stb_image.h	/^      #define STBI_THREAD_LOCAL /;"	d
STBI_VERSION	src/external/stb_image.h	/^#define STBI_VERSION /;"	d
STBI__BYTECAST	src/external/stb_image.h	/^#define STBI__BYTECAST(/;"	d
STBI__CASE	src/external/stb_image.h	/^         #define STBI__CASE(/;"	d
STBI__CASE	src/external/stb_image.h	/^      #define STBI__CASE(/;"	d
STBI__COMBO	src/external/stb_image.h	/^      #define STBI__COMBO(/;"	d
STBI__F_avg	src/external/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon11d2a80f0f03
STBI__F_avg_first	src/external/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anon11d2a80f0f03
STBI__F_none	src/external/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon11d2a80f0f03
STBI__F_paeth	src/external/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon11d2a80f0f03
STBI__F_paeth_first	src/external/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anon11d2a80f0f03
STBI__F_sub	src/external/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon11d2a80f0f03
STBI__F_up	src/external/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon11d2a80f0f03
STBI__HDR_BUFLEN	src/external/stb_image.h	/^#define STBI__HDR_BUFLEN /;"	d
STBI__IDCT_1D	src/external/stb_image.h	/^#define STBI__IDCT_1D(/;"	d
STBI__MARKER_none	src/external/stb_image.h	/^#define STBI__MARKER_none /;"	d
STBI__PNG_TYPE	src/external/stb_image.h	/^#define STBI__PNG_TYPE(/;"	d
STBI__RESTART	src/external/stb_image.h	/^#define STBI__RESTART(/;"	d
STBI__SCAN_header	src/external/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon11d2a80f0603
STBI__SCAN_load	src/external/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon11d2a80f0603
STBI__SCAN_type	src/external/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon11d2a80f0603
STBI__X64_TARGET	src/external/stb_image.h	/^#define STBI__X64_TARGET$/;"	d
STBI__X86_TARGET	src/external/stb_image.h	/^#define STBI__X86_TARGET$/;"	d
STBI__ZFAST_BITS	src/external/stb_image.h	/^#define STBI__ZFAST_BITS /;"	d
STBI__ZFAST_MASK	src/external/stb_image.h	/^#define STBI__ZFAST_MASK /;"	d
STBI__ZNSYMS	src/external/stb_image.h	/^#define STBI__ZNSYMS /;"	d
STBI_default	src/external/stb_image.h	/^   STBI_default = 0, \/\/ only used for desired_channels$/;"	e	enum:__anon11d2a80f0103
STBI_grey	src/external/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon11d2a80f0103
STBI_grey_alpha	src/external/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon11d2a80f0103
STBI_rgb	src/external/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon11d2a80f0103
STBI_rgb_alpha	src/external/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon11d2a80f0103
STBTT_DEF	src/external/stb_truetype.h	/^#define STBTT_DEF /;"	d
STBTT_FIX	src/external/stb_truetype.h	/^#define STBTT_FIX        (1 << STBTT_FIXS/;"	d
STBTT_FIXMASK	src/external/stb_truetype.h	/^#define STBTT_FIXMASK /;"	d
STBTT_FIXSHIFT	src/external/stb_truetype.h	/^#define STBTT_FIXSHIFT /;"	d
STBTT_GPOS_TODO_assert	src/external/stb_truetype.h	/^#define STBTT_GPOS_TODO_assert(/;"	d
STBTT_MACSTYLE_BOLD	src/external/stb_truetype.h	/^#define STBTT_MACSTYLE_BOLD /;"	d
STBTT_MACSTYLE_DONTCARE	src/external/stb_truetype.h	/^#define STBTT_MACSTYLE_DONTCARE /;"	d
STBTT_MACSTYLE_ITALIC	src/external/stb_truetype.h	/^#define STBTT_MACSTYLE_ITALIC /;"	d
STBTT_MACSTYLE_NONE	src/external/stb_truetype.h	/^#define STBTT_MACSTYLE_NONE /;"	d
STBTT_MACSTYLE_UNDERSCORE	src/external/stb_truetype.h	/^#define STBTT_MACSTYLE_UNDERSCORE /;"	d
STBTT_MAC_EID_ARABIC	src/external/stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon6b1d216e0c03
STBTT_MAC_EID_CHINESE_TRAD	src/external/stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon6b1d216e0c03
STBTT_MAC_EID_GREEK	src/external/stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon6b1d216e0c03
STBTT_MAC_EID_HEBREW	src/external/stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon6b1d216e0c03
STBTT_MAC_EID_JAPANESE	src/external/stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon6b1d216e0c03
STBTT_MAC_EID_KOREAN	src/external/stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon6b1d216e0c03
STBTT_MAC_EID_ROMAN	src/external/stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon6b1d216e0c03
STBTT_MAC_EID_RUSSIAN	src/external/stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon6b1d216e0c03
STBTT_MAC_LANG_ARABIC	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_CHINESE_SIMPLIFIED	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_CHINESE_TRAD	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_DUTCH	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_ENGLISH	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_FRENCH	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_GERMAN	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_HEBREW	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_ITALIAN	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_JAPANESE	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_KOREAN	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_RUSSIAN	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_SPANISH	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAC_LANG_SWEDISH	src/external/stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon6b1d216e0e03
STBTT_MAX_OVERSAMPLE	src/external/stb_truetype.h	/^#define STBTT_MAX_OVERSAMPLE /;"	d
STBTT_MS_EID_SHIFTJIS	src/external/stb_truetype.h	/^   STBTT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon6b1d216e0b03
STBTT_MS_EID_SYMBOL	src/external/stb_truetype.h	/^   STBTT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon6b1d216e0b03
STBTT_MS_EID_UNICODE_BMP	src/external/stb_truetype.h	/^   STBTT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon6b1d216e0b03
STBTT_MS_EID_UNICODE_FULL	src/external/stb_truetype.h	/^   STBTT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon6b1d216e0b03
STBTT_MS_LANG_CHINESE	src/external/stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_DUTCH	src/external/stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_ENGLISH	src/external/stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_FRENCH	src/external/stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_GERMAN	src/external/stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_HEBREW	src/external/stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_ITALIAN	src/external/stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_JAPANESE	src/external/stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_KOREAN	src/external/stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_RUSSIAN	src/external/stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_SPANISH	src/external/stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon6b1d216e0d03
STBTT_MS_LANG_SWEDISH	src/external/stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon6b1d216e0d03
STBTT_PLATFORM_ID_ISO	src/external/stb_truetype.h	/^   STBTT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon6b1d216e0903
STBTT_PLATFORM_ID_MAC	src/external/stb_truetype.h	/^   STBTT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon6b1d216e0903
STBTT_PLATFORM_ID_MICROSOFT	src/external/stb_truetype.h	/^   STBTT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon6b1d216e0903
STBTT_PLATFORM_ID_UNICODE	src/external/stb_truetype.h	/^   STBTT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon6b1d216e0903
STBTT_POINT_SIZE	src/external/stb_truetype.h	/^#define STBTT_POINT_SIZE(/;"	d
STBTT_RASTERIZER_VERSION	src/external/stb_truetype.h	/^#define STBTT_RASTERIZER_VERSION /;"	d
STBTT_UNICODE_EID_ISO_10646	src/external/stb_truetype.h	/^   STBTT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon6b1d216e0a03
STBTT_UNICODE_EID_UNICODE_1_0	src/external/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon6b1d216e0a03
STBTT_UNICODE_EID_UNICODE_1_1	src/external/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon6b1d216e0a03
STBTT_UNICODE_EID_UNICODE_2_0_BMP	src/external/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon6b1d216e0a03
STBTT_UNICODE_EID_UNICODE_2_0_FULL	src/external/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon6b1d216e0a03
STBTT__COMPARE	src/external/stb_truetype.h	/^#define STBTT__COMPARE(/;"	d
STBTT__CSCTX_INIT	src/external/stb_truetype.h	/^#define STBTT__CSCTX_INIT(/;"	d
STBTT__CSERR	src/external/stb_truetype.h	/^#define STBTT__CSERR(/;"	d
STBTT__NOTUSED	src/external/stb_truetype.h	/^#define STBTT__NOTUSED(/;"	d
STBTT__OVER_MASK	src/external/stb_truetype.h	/^#define STBTT__OVER_MASK /;"	d
STBTT_acos	src/external/stb_truetype.h	/^   #define STBTT_acos(/;"	d
STBTT_assert	src/external/stb_truetype.h	/^   #define STBTT_assert(/;"	d
STBTT_assert	src/main.cpp	/^#define STBTT_assert /;"	d	file:
STBTT_cos	src/external/stb_truetype.h	/^   #define STBTT_cos(/;"	d
STBTT_fabs	src/external/stb_truetype.h	/^   #define STBTT_fabs(/;"	d
STBTT_fmod	src/external/stb_truetype.h	/^   #define STBTT_fmod(/;"	d
STBTT_free	src/external/stb_truetype.h	/^   #define STBTT_free(/;"	d
STBTT_iceil	src/external/stb_truetype.h	/^   #define STBTT_iceil(/;"	d
STBTT_ifloor	src/external/stb_truetype.h	/^   #define STBTT_ifloor(/;"	d
STBTT_malloc	src/external/stb_truetype.h	/^   #define STBTT_malloc(/;"	d
STBTT_max	src/external/stb_truetype.h	/^#define STBTT_max(/;"	d
STBTT_memcpy	src/external/stb_truetype.h	/^   #define STBTT_memcpy /;"	d
STBTT_memset	src/external/stb_truetype.h	/^   #define STBTT_memset /;"	d
STBTT_min	src/external/stb_truetype.h	/^#define STBTT_min(/;"	d
STBTT_pow	src/external/stb_truetype.h	/^   #define STBTT_pow(/;"	d
STBTT_sqrt	src/external/stb_truetype.h	/^   #define STBTT_sqrt(/;"	d
STBTT_strlen	src/external/stb_truetype.h	/^   #define STBTT_strlen(/;"	d
STBTT_vcubic	src/external/stb_truetype.h	/^      STBTT_vcubic$/;"	e	enum:__anon6b1d216e0603
STBTT_vcurve	src/external/stb_truetype.h	/^      STBTT_vcurve,$/;"	e	enum:__anon6b1d216e0603
STBTT_vline	src/external/stb_truetype.h	/^      STBTT_vline,$/;"	e	enum:__anon6b1d216e0603
STBTT_vmove	src/external/stb_truetype.h	/^      STBTT_vmove=1,$/;"	e	enum:__anon6b1d216e0603
STB_IMAGE_IMPLEMENTATION	src/main.cpp	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_TRUETYPE_IMPLEMENTATION	src/main.cpp	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
WGL_3DFX_multisample	src/external/wglext.h	/^#define WGL_3DFX_multisample /;"	d
WGL_3DL_stereo_control	src/external/wglext.h	/^#define WGL_3DL_stereo_control /;"	d
WGL_ACCELERATION_ARB	src/external/wglext.h	/^#define WGL_ACCELERATION_ARB /;"	d
WGL_ACCELERATION_EXT	src/external/wglext.h	/^#define WGL_ACCELERATION_EXT /;"	d
WGL_ACCESS_READ_ONLY_NV	src/external/wglext.h	/^#define WGL_ACCESS_READ_ONLY_NV /;"	d
WGL_ACCESS_READ_WRITE_NV	src/external/wglext.h	/^#define WGL_ACCESS_READ_WRITE_NV /;"	d
WGL_ACCESS_WRITE_DISCARD_NV	src/external/wglext.h	/^#define WGL_ACCESS_WRITE_DISCARD_NV /;"	d
WGL_ACCUM_ALPHA_BITS_ARB	src/external/wglext.h	/^#define WGL_ACCUM_ALPHA_BITS_ARB /;"	d
WGL_ACCUM_ALPHA_BITS_EXT	src/external/wglext.h	/^#define WGL_ACCUM_ALPHA_BITS_EXT /;"	d
WGL_ACCUM_BITS_ARB	src/external/wglext.h	/^#define WGL_ACCUM_BITS_ARB /;"	d
WGL_ACCUM_BITS_EXT	src/external/wglext.h	/^#define WGL_ACCUM_BITS_EXT /;"	d
WGL_ACCUM_BLUE_BITS_ARB	src/external/wglext.h	/^#define WGL_ACCUM_BLUE_BITS_ARB /;"	d
WGL_ACCUM_BLUE_BITS_EXT	src/external/wglext.h	/^#define WGL_ACCUM_BLUE_BITS_EXT /;"	d
WGL_ACCUM_GREEN_BITS_ARB	src/external/wglext.h	/^#define WGL_ACCUM_GREEN_BITS_ARB /;"	d
WGL_ACCUM_GREEN_BITS_EXT	src/external/wglext.h	/^#define WGL_ACCUM_GREEN_BITS_EXT /;"	d
WGL_ACCUM_RED_BITS_ARB	src/external/wglext.h	/^#define WGL_ACCUM_RED_BITS_ARB /;"	d
WGL_ACCUM_RED_BITS_EXT	src/external/wglext.h	/^#define WGL_ACCUM_RED_BITS_EXT /;"	d
WGL_ALPHA_BITS_ARB	src/external/wglext.h	/^#define WGL_ALPHA_BITS_ARB /;"	d
WGL_ALPHA_BITS_EXT	src/external/wglext.h	/^#define WGL_ALPHA_BITS_EXT /;"	d
WGL_ALPHA_SHIFT_ARB	src/external/wglext.h	/^#define WGL_ALPHA_SHIFT_ARB /;"	d
WGL_ALPHA_SHIFT_EXT	src/external/wglext.h	/^#define WGL_ALPHA_SHIFT_EXT /;"	d
WGL_AMD_gpu_association	src/external/wglext.h	/^#define WGL_AMD_gpu_association /;"	d
WGL_ARB_buffer_region	src/external/wglext.h	/^#define WGL_ARB_buffer_region /;"	d
WGL_ARB_context_flush_control	src/external/wglext.h	/^#define WGL_ARB_context_flush_control /;"	d
WGL_ARB_create_context	src/external/wglext.h	/^#define WGL_ARB_create_context /;"	d
WGL_ARB_create_context_no_error	src/external/wglext.h	/^#define WGL_ARB_create_context_no_error /;"	d
WGL_ARB_create_context_profile	src/external/wglext.h	/^#define WGL_ARB_create_context_profile /;"	d
WGL_ARB_create_context_robustness	src/external/wglext.h	/^#define WGL_ARB_create_context_robustness /;"	d
WGL_ARB_extensions_string	src/external/wglext.h	/^#define WGL_ARB_extensions_string /;"	d
WGL_ARB_framebuffer_sRGB	src/external/wglext.h	/^#define WGL_ARB_framebuffer_sRGB /;"	d
WGL_ARB_make_current_read	src/external/wglext.h	/^#define WGL_ARB_make_current_read /;"	d
WGL_ARB_multisample	src/external/wglext.h	/^#define WGL_ARB_multisample /;"	d
WGL_ARB_pbuffer	src/external/wglext.h	/^#define WGL_ARB_pbuffer /;"	d
WGL_ARB_pixel_format	src/external/wglext.h	/^#define WGL_ARB_pixel_format /;"	d
WGL_ARB_pixel_format_float	src/external/wglext.h	/^#define WGL_ARB_pixel_format_float /;"	d
WGL_ARB_render_texture	src/external/wglext.h	/^#define WGL_ARB_render_texture /;"	d
WGL_ARB_robustness_application_isolation	src/external/wglext.h	/^#define WGL_ARB_robustness_application_isolation /;"	d
WGL_ARB_robustness_share_group_isolation	src/external/wglext.h	/^#define WGL_ARB_robustness_share_group_isolation /;"	d
WGL_ATI_pixel_format_float	src/external/wglext.h	/^#define WGL_ATI_pixel_format_float /;"	d
WGL_ATI_render_texture_rectangle	src/external/wglext.h	/^#define WGL_ATI_render_texture_rectangle /;"	d
WGL_AUX0_ARB	src/external/wglext.h	/^#define WGL_AUX0_ARB /;"	d
WGL_AUX1_ARB	src/external/wglext.h	/^#define WGL_AUX1_ARB /;"	d
WGL_AUX2_ARB	src/external/wglext.h	/^#define WGL_AUX2_ARB /;"	d
WGL_AUX3_ARB	src/external/wglext.h	/^#define WGL_AUX3_ARB /;"	d
WGL_AUX4_ARB	src/external/wglext.h	/^#define WGL_AUX4_ARB /;"	d
WGL_AUX5_ARB	src/external/wglext.h	/^#define WGL_AUX5_ARB /;"	d
WGL_AUX6_ARB	src/external/wglext.h	/^#define WGL_AUX6_ARB /;"	d
WGL_AUX7_ARB	src/external/wglext.h	/^#define WGL_AUX7_ARB /;"	d
WGL_AUX8_ARB	src/external/wglext.h	/^#define WGL_AUX8_ARB /;"	d
WGL_AUX9_ARB	src/external/wglext.h	/^#define WGL_AUX9_ARB /;"	d
WGL_AUX_BUFFERS_ARB	src/external/wglext.h	/^#define WGL_AUX_BUFFERS_ARB /;"	d
WGL_AUX_BUFFERS_EXT	src/external/wglext.h	/^#define WGL_AUX_BUFFERS_EXT /;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	src/external/wglext.h	/^#define WGL_BACK_COLOR_BUFFER_BIT_ARB /;"	d
WGL_BACK_LEFT_ARB	src/external/wglext.h	/^#define WGL_BACK_LEFT_ARB /;"	d
WGL_BACK_RIGHT_ARB	src/external/wglext.h	/^#define WGL_BACK_RIGHT_ARB /;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_DEPTH_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV /;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RGBA_ARB /;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	src/external/wglext.h	/^#define WGL_BIND_TO_TEXTURE_RGB_ARB /;"	d
WGL_BIND_TO_VIDEO_RGBA_NV	src/external/wglext.h	/^#define WGL_BIND_TO_VIDEO_RGBA_NV /;"	d
WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV	src/external/wglext.h	/^#define WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV /;"	d
WGL_BIND_TO_VIDEO_RGB_NV	src/external/wglext.h	/^#define WGL_BIND_TO_VIDEO_RGB_NV /;"	d
WGL_BLUE_BITS_ARB	src/external/wglext.h	/^#define WGL_BLUE_BITS_ARB /;"	d
WGL_BLUE_BITS_EXT	src/external/wglext.h	/^#define WGL_BLUE_BITS_EXT /;"	d
WGL_BLUE_SHIFT_ARB	src/external/wglext.h	/^#define WGL_BLUE_SHIFT_ARB /;"	d
WGL_BLUE_SHIFT_EXT	src/external/wglext.h	/^#define WGL_BLUE_SHIFT_EXT /;"	d
WGL_COLORSPACE_EXT	src/external/wglext.h	/^#define WGL_COLORSPACE_EXT /;"	d
WGL_COLORSPACE_LINEAR_EXT	src/external/wglext.h	/^#define WGL_COLORSPACE_LINEAR_EXT /;"	d
WGL_COLORSPACE_SRGB_EXT	src/external/wglext.h	/^#define WGL_COLORSPACE_SRGB_EXT /;"	d
WGL_COLOR_BITS_ARB	src/external/wglext.h	/^#define WGL_COLOR_BITS_ARB /;"	d
WGL_COLOR_BITS_EXT	src/external/wglext.h	/^#define WGL_COLOR_BITS_EXT /;"	d
WGL_COLOR_SAMPLES_NV	src/external/wglext.h	/^#define WGL_COLOR_SAMPLES_NV /;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB /;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d
WGL_CONTEXT_DEBUG_BIT_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d
WGL_CONTEXT_ES2_PROFILE_BIT_EXT	src/external/wglext.h	/^#define WGL_CONTEXT_ES2_PROFILE_BIT_EXT /;"	d
WGL_CONTEXT_ES_PROFILE_BIT_EXT	src/external/wglext.h	/^#define WGL_CONTEXT_ES_PROFILE_BIT_EXT /;"	d
WGL_CONTEXT_FLAGS_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d
WGL_CONTEXT_LAYER_PLANE_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_LAYER_PLANE_ARB /;"	d
WGL_CONTEXT_MAJOR_VERSION_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d
WGL_CONTEXT_MINOR_VERSION_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV	src/external/wglext.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV	src/external/wglext.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV	src/external/wglext.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_NV	src/external/wglext.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_NV /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV	src/external/wglext.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV /;"	d
WGL_CONTEXT_OPENGL_NO_ERROR_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_OPENGL_NO_ERROR_ARB /;"	d
WGL_CONTEXT_PROFILE_MASK_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB /;"	d
WGL_CONTEXT_RESET_ISOLATION_BIT_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_RESET_ISOLATION_BIT_ARB /;"	d
WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB	src/external/wglext.h	/^#define WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB /;"	d
WGL_COVERAGE_SAMPLES_NV	src/external/wglext.h	/^#define WGL_COVERAGE_SAMPLES_NV /;"	d
WGL_CUBE_MAP_FACE_ARB	src/external/wglext.h	/^#define WGL_CUBE_MAP_FACE_ARB /;"	d
WGL_DEPTH_BITS_ARB	src/external/wglext.h	/^#define WGL_DEPTH_BITS_ARB /;"	d
WGL_DEPTH_BITS_EXT	src/external/wglext.h	/^#define WGL_DEPTH_BITS_EXT /;"	d
WGL_DEPTH_BUFFER_BIT_ARB	src/external/wglext.h	/^#define WGL_DEPTH_BUFFER_BIT_ARB /;"	d
WGL_DEPTH_COMPONENT_NV	src/external/wglext.h	/^#define WGL_DEPTH_COMPONENT_NV /;"	d
WGL_DEPTH_FLOAT_EXT	src/external/wglext.h	/^#define WGL_DEPTH_FLOAT_EXT /;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	src/external/wglext.h	/^#define WGL_DEPTH_TEXTURE_FORMAT_NV /;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	src/external/wglext.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D /;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	src/external/wglext.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D /;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	src/external/wglext.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D /;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	src/external/wglext.h	/^#define WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D /;"	d
WGL_DOUBLE_BUFFER_ARB	src/external/wglext.h	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d
WGL_DOUBLE_BUFFER_EXT	src/external/wglext.h	/^#define WGL_DOUBLE_BUFFER_EXT /;"	d
WGL_DRAW_TO_BITMAP_ARB	src/external/wglext.h	/^#define WGL_DRAW_TO_BITMAP_ARB /;"	d
WGL_DRAW_TO_BITMAP_EXT	src/external/wglext.h	/^#define WGL_DRAW_TO_BITMAP_EXT /;"	d
WGL_DRAW_TO_PBUFFER_ARB	src/external/wglext.h	/^#define WGL_DRAW_TO_PBUFFER_ARB /;"	d
WGL_DRAW_TO_PBUFFER_EXT	src/external/wglext.h	/^#define WGL_DRAW_TO_PBUFFER_EXT /;"	d
WGL_DRAW_TO_WINDOW_ARB	src/external/wglext.h	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d
WGL_DRAW_TO_WINDOW_EXT	src/external/wglext.h	/^#define WGL_DRAW_TO_WINDOW_EXT /;"	d
WGL_EXT_colorspace	src/external/wglext.h	/^#define WGL_EXT_colorspace /;"	d
WGL_EXT_create_context_es2_profile	src/external/wglext.h	/^#define WGL_EXT_create_context_es2_profile /;"	d
WGL_EXT_create_context_es_profile	src/external/wglext.h	/^#define WGL_EXT_create_context_es_profile /;"	d
WGL_EXT_depth_float	src/external/wglext.h	/^#define WGL_EXT_depth_float /;"	d
WGL_EXT_display_color_table	src/external/wglext.h	/^#define WGL_EXT_display_color_table /;"	d
WGL_EXT_extensions_string	src/external/wglext.h	/^#define WGL_EXT_extensions_string /;"	d
WGL_EXT_framebuffer_sRGB	src/external/wglext.h	/^#define WGL_EXT_framebuffer_sRGB /;"	d
WGL_EXT_make_current_read	src/external/wglext.h	/^#define WGL_EXT_make_current_read /;"	d
WGL_EXT_multisample	src/external/wglext.h	/^#define WGL_EXT_multisample /;"	d
WGL_EXT_pbuffer	src/external/wglext.h	/^#define WGL_EXT_pbuffer /;"	d
WGL_EXT_pixel_format	src/external/wglext.h	/^#define WGL_EXT_pixel_format /;"	d
WGL_EXT_pixel_format_packed_float	src/external/wglext.h	/^#define WGL_EXT_pixel_format_packed_float /;"	d
WGL_EXT_swap_control	src/external/wglext.h	/^#define WGL_EXT_swap_control /;"	d
WGL_EXT_swap_control_tear	src/external/wglext.h	/^#define WGL_EXT_swap_control_tear /;"	d
WGL_FLOAT_COMPONENTS_NV	src/external/wglext.h	/^#define WGL_FLOAT_COMPONENTS_NV /;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	src/external/wglext.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT	src/external/wglext.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	src/external/wglext.h	/^#define WGL_FRONT_COLOR_BUFFER_BIT_ARB /;"	d
WGL_FRONT_LEFT_ARB	src/external/wglext.h	/^#define WGL_FRONT_LEFT_ARB /;"	d
WGL_FRONT_RIGHT_ARB	src/external/wglext.h	/^#define WGL_FRONT_RIGHT_ARB /;"	d
WGL_FULL_ACCELERATION_ARB	src/external/wglext.h	/^#define WGL_FULL_ACCELERATION_ARB /;"	d
WGL_FULL_ACCELERATION_EXT	src/external/wglext.h	/^#define WGL_FULL_ACCELERATION_EXT /;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	src/external/wglext.h	/^#define WGL_GAMMA_EXCLUDE_DESKTOP_I3D /;"	d
WGL_GAMMA_TABLE_SIZE_I3D	src/external/wglext.h	/^#define WGL_GAMMA_TABLE_SIZE_I3D /;"	d
WGL_GENERIC_ACCELERATION_ARB	src/external/wglext.h	/^#define WGL_GENERIC_ACCELERATION_ARB /;"	d
WGL_GENERIC_ACCELERATION_EXT	src/external/wglext.h	/^#define WGL_GENERIC_ACCELERATION_EXT /;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D /;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_EDGE_RISING_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D /;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	src/external/wglext.h	/^#define WGL_GENLOCK_SOURCE_MULTIVIEW_I3D /;"	d
WGL_GPU_CLOCK_AMD	src/external/wglext.h	/^#define WGL_GPU_CLOCK_AMD /;"	d
WGL_GPU_FASTEST_TARGET_GPUS_AMD	src/external/wglext.h	/^#define WGL_GPU_FASTEST_TARGET_GPUS_AMD /;"	d
WGL_GPU_NUM_PIPES_AMD	src/external/wglext.h	/^#define WGL_GPU_NUM_PIPES_AMD /;"	d
WGL_GPU_NUM_RB_AMD	src/external/wglext.h	/^#define WGL_GPU_NUM_RB_AMD /;"	d
WGL_GPU_NUM_SIMD_AMD	src/external/wglext.h	/^#define WGL_GPU_NUM_SIMD_AMD /;"	d
WGL_GPU_NUM_SPI_AMD	src/external/wglext.h	/^#define WGL_GPU_NUM_SPI_AMD /;"	d
WGL_GPU_OPENGL_VERSION_STRING_AMD	src/external/wglext.h	/^#define WGL_GPU_OPENGL_VERSION_STRING_AMD /;"	d
WGL_GPU_RAM_AMD	src/external/wglext.h	/^#define WGL_GPU_RAM_AMD /;"	d
WGL_GPU_RENDERER_STRING_AMD	src/external/wglext.h	/^#define WGL_GPU_RENDERER_STRING_AMD /;"	d
WGL_GPU_VENDOR_AMD	src/external/wglext.h	/^#define WGL_GPU_VENDOR_AMD /;"	d
WGL_GREEN_BITS_ARB	src/external/wglext.h	/^#define WGL_GREEN_BITS_ARB /;"	d
WGL_GREEN_BITS_EXT	src/external/wglext.h	/^#define WGL_GREEN_BITS_EXT /;"	d
WGL_GREEN_SHIFT_ARB	src/external/wglext.h	/^#define WGL_GREEN_SHIFT_ARB /;"	d
WGL_GREEN_SHIFT_EXT	src/external/wglext.h	/^#define WGL_GREEN_SHIFT_EXT /;"	d
WGL_I3D_digital_video_control	src/external/wglext.h	/^#define WGL_I3D_digital_video_control /;"	d
WGL_I3D_gamma	src/external/wglext.h	/^#define WGL_I3D_gamma /;"	d
WGL_I3D_genlock	src/external/wglext.h	/^#define WGL_I3D_genlock /;"	d
WGL_I3D_image_buffer	src/external/wglext.h	/^#define WGL_I3D_image_buffer /;"	d
WGL_I3D_swap_frame_lock	src/external/wglext.h	/^#define WGL_I3D_swap_frame_lock /;"	d
WGL_I3D_swap_frame_usage	src/external/wglext.h	/^#define WGL_I3D_swap_frame_usage /;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	src/external/wglext.h	/^#define WGL_IMAGE_BUFFER_LOCK_I3D /;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	src/external/wglext.h	/^#define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D /;"	d
WGL_LOSE_CONTEXT_ON_RESET_ARB	src/external/wglext.h	/^#define WGL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	src/external/wglext.h	/^#define WGL_MAX_PBUFFER_HEIGHT_ARB /;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	src/external/wglext.h	/^#define WGL_MAX_PBUFFER_HEIGHT_EXT /;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	src/external/wglext.h	/^#define WGL_MAX_PBUFFER_PIXELS_ARB /;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	src/external/wglext.h	/^#define WGL_MAX_PBUFFER_PIXELS_EXT /;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	src/external/wglext.h	/^#define WGL_MAX_PBUFFER_WIDTH_ARB /;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	src/external/wglext.h	/^#define WGL_MAX_PBUFFER_WIDTH_EXT /;"	d
WGL_MIPMAP_LEVEL_ARB	src/external/wglext.h	/^#define WGL_MIPMAP_LEVEL_ARB /;"	d
WGL_MIPMAP_TEXTURE_ARB	src/external/wglext.h	/^#define WGL_MIPMAP_TEXTURE_ARB /;"	d
WGL_NEED_PALETTE_ARB	src/external/wglext.h	/^#define WGL_NEED_PALETTE_ARB /;"	d
WGL_NEED_PALETTE_EXT	src/external/wglext.h	/^#define WGL_NEED_PALETTE_EXT /;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	src/external/wglext.h	/^#define WGL_NEED_SYSTEM_PALETTE_ARB /;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	src/external/wglext.h	/^#define WGL_NEED_SYSTEM_PALETTE_EXT /;"	d
WGL_NO_ACCELERATION_ARB	src/external/wglext.h	/^#define WGL_NO_ACCELERATION_ARB /;"	d
WGL_NO_ACCELERATION_EXT	src/external/wglext.h	/^#define WGL_NO_ACCELERATION_EXT /;"	d
WGL_NO_RESET_NOTIFICATION_ARB	src/external/wglext.h	/^#define WGL_NO_RESET_NOTIFICATION_ARB /;"	d
WGL_NO_TEXTURE_ARB	src/external/wglext.h	/^#define WGL_NO_TEXTURE_ARB /;"	d
WGL_NUMBER_OVERLAYS_ARB	src/external/wglext.h	/^#define WGL_NUMBER_OVERLAYS_ARB /;"	d
WGL_NUMBER_OVERLAYS_EXT	src/external/wglext.h	/^#define WGL_NUMBER_OVERLAYS_EXT /;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	src/external/wglext.h	/^#define WGL_NUMBER_PIXEL_FORMATS_ARB /;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	src/external/wglext.h	/^#define WGL_NUMBER_PIXEL_FORMATS_EXT /;"	d
WGL_NUMBER_UNDERLAYS_ARB	src/external/wglext.h	/^#define WGL_NUMBER_UNDERLAYS_ARB /;"	d
WGL_NUMBER_UNDERLAYS_EXT	src/external/wglext.h	/^#define WGL_NUMBER_UNDERLAYS_EXT /;"	d
WGL_NUM_VIDEO_CAPTURE_SLOTS_NV	src/external/wglext.h	/^#define WGL_NUM_VIDEO_CAPTURE_SLOTS_NV /;"	d
WGL_NUM_VIDEO_SLOTS_NV	src/external/wglext.h	/^#define WGL_NUM_VIDEO_SLOTS_NV /;"	d
WGL_NV_DX_interop	src/external/wglext.h	/^#define WGL_NV_DX_interop /;"	d
WGL_NV_DX_interop2	src/external/wglext.h	/^#define WGL_NV_DX_interop2 /;"	d
WGL_NV_copy_image	src/external/wglext.h	/^#define WGL_NV_copy_image /;"	d
WGL_NV_delay_before_swap	src/external/wglext.h	/^#define WGL_NV_delay_before_swap /;"	d
WGL_NV_float_buffer	src/external/wglext.h	/^#define WGL_NV_float_buffer /;"	d
WGL_NV_gpu_affinity	src/external/wglext.h	/^#define WGL_NV_gpu_affinity /;"	d
WGL_NV_multigpu_context	src/external/wglext.h	/^#define WGL_NV_multigpu_context /;"	d
WGL_NV_multisample_coverage	src/external/wglext.h	/^#define WGL_NV_multisample_coverage /;"	d
WGL_NV_present_video	src/external/wglext.h	/^#define WGL_NV_present_video /;"	d
WGL_NV_render_depth_texture	src/external/wglext.h	/^#define WGL_NV_render_depth_texture /;"	d
WGL_NV_render_texture_rectangle	src/external/wglext.h	/^#define WGL_NV_render_texture_rectangle /;"	d
WGL_NV_swap_group	src/external/wglext.h	/^#define WGL_NV_swap_group /;"	d
WGL_NV_vertex_array_range	src/external/wglext.h	/^#define WGL_NV_vertex_array_range /;"	d
WGL_NV_video_capture	src/external/wglext.h	/^#define WGL_NV_video_capture /;"	d
WGL_NV_video_output	src/external/wglext.h	/^#define WGL_NV_video_output /;"	d
WGL_OML_sync_control	src/external/wglext.h	/^#define WGL_OML_sync_control /;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	src/external/wglext.h	/^#define WGL_OPTIMAL_PBUFFER_HEIGHT_EXT /;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	src/external/wglext.h	/^#define WGL_OPTIMAL_PBUFFER_WIDTH_EXT /;"	d
WGL_PBUFFER_HEIGHT_ARB	src/external/wglext.h	/^#define WGL_PBUFFER_HEIGHT_ARB /;"	d
WGL_PBUFFER_HEIGHT_EXT	src/external/wglext.h	/^#define WGL_PBUFFER_HEIGHT_EXT /;"	d
WGL_PBUFFER_LARGEST_ARB	src/external/wglext.h	/^#define WGL_PBUFFER_LARGEST_ARB /;"	d
WGL_PBUFFER_LARGEST_EXT	src/external/wglext.h	/^#define WGL_PBUFFER_LARGEST_EXT /;"	d
WGL_PBUFFER_LOST_ARB	src/external/wglext.h	/^#define WGL_PBUFFER_LOST_ARB /;"	d
WGL_PBUFFER_WIDTH_ARB	src/external/wglext.h	/^#define WGL_PBUFFER_WIDTH_ARB /;"	d
WGL_PBUFFER_WIDTH_EXT	src/external/wglext.h	/^#define WGL_PBUFFER_WIDTH_EXT /;"	d
WGL_PIXEL_TYPE_ARB	src/external/wglext.h	/^#define WGL_PIXEL_TYPE_ARB /;"	d
WGL_PIXEL_TYPE_EXT	src/external/wglext.h	/^#define WGL_PIXEL_TYPE_EXT /;"	d
WGL_RED_BITS_ARB	src/external/wglext.h	/^#define WGL_RED_BITS_ARB /;"	d
WGL_RED_BITS_EXT	src/external/wglext.h	/^#define WGL_RED_BITS_EXT /;"	d
WGL_RED_SHIFT_ARB	src/external/wglext.h	/^#define WGL_RED_SHIFT_ARB /;"	d
WGL_RED_SHIFT_EXT	src/external/wglext.h	/^#define WGL_RED_SHIFT_EXT /;"	d
WGL_SAMPLES_3DFX	src/external/wglext.h	/^#define WGL_SAMPLES_3DFX /;"	d
WGL_SAMPLES_ARB	src/external/wglext.h	/^#define WGL_SAMPLES_ARB /;"	d
WGL_SAMPLES_EXT	src/external/wglext.h	/^#define WGL_SAMPLES_EXT /;"	d
WGL_SAMPLE_BUFFERS_3DFX	src/external/wglext.h	/^#define WGL_SAMPLE_BUFFERS_3DFX /;"	d
WGL_SAMPLE_BUFFERS_ARB	src/external/wglext.h	/^#define WGL_SAMPLE_BUFFERS_ARB /;"	d
WGL_SAMPLE_BUFFERS_EXT	src/external/wglext.h	/^#define WGL_SAMPLE_BUFFERS_EXT /;"	d
WGL_SHARE_ACCUM_ARB	src/external/wglext.h	/^#define WGL_SHARE_ACCUM_ARB /;"	d
WGL_SHARE_ACCUM_EXT	src/external/wglext.h	/^#define WGL_SHARE_ACCUM_EXT /;"	d
WGL_SHARE_DEPTH_ARB	src/external/wglext.h	/^#define WGL_SHARE_DEPTH_ARB /;"	d
WGL_SHARE_DEPTH_EXT	src/external/wglext.h	/^#define WGL_SHARE_DEPTH_EXT /;"	d
WGL_SHARE_STENCIL_ARB	src/external/wglext.h	/^#define WGL_SHARE_STENCIL_ARB /;"	d
WGL_SHARE_STENCIL_EXT	src/external/wglext.h	/^#define WGL_SHARE_STENCIL_EXT /;"	d
WGL_STENCIL_BITS_ARB	src/external/wglext.h	/^#define WGL_STENCIL_BITS_ARB /;"	d
WGL_STENCIL_BITS_EXT	src/external/wglext.h	/^#define WGL_STENCIL_BITS_EXT /;"	d
WGL_STENCIL_BUFFER_BIT_ARB	src/external/wglext.h	/^#define WGL_STENCIL_BUFFER_BIT_ARB /;"	d
WGL_STEREO_ARB	src/external/wglext.h	/^#define WGL_STEREO_ARB /;"	d
WGL_STEREO_EMITTER_DISABLE_3DL	src/external/wglext.h	/^#define WGL_STEREO_EMITTER_DISABLE_3DL /;"	d
WGL_STEREO_EMITTER_ENABLE_3DL	src/external/wglext.h	/^#define WGL_STEREO_EMITTER_ENABLE_3DL /;"	d
WGL_STEREO_EXT	src/external/wglext.h	/^#define WGL_STEREO_EXT /;"	d
WGL_STEREO_POLARITY_INVERT_3DL	src/external/wglext.h	/^#define WGL_STEREO_POLARITY_INVERT_3DL /;"	d
WGL_STEREO_POLARITY_NORMAL_3DL	src/external/wglext.h	/^#define WGL_STEREO_POLARITY_NORMAL_3DL /;"	d
WGL_SUPPORT_GDI_ARB	src/external/wglext.h	/^#define WGL_SUPPORT_GDI_ARB /;"	d
WGL_SUPPORT_GDI_EXT	src/external/wglext.h	/^#define WGL_SUPPORT_GDI_EXT /;"	d
WGL_SUPPORT_OPENGL_ARB	src/external/wglext.h	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d
WGL_SUPPORT_OPENGL_EXT	src/external/wglext.h	/^#define WGL_SUPPORT_OPENGL_EXT /;"	d
WGL_SWAP_COPY_ARB	src/external/wglext.h	/^#define WGL_SWAP_COPY_ARB /;"	d
WGL_SWAP_COPY_EXT	src/external/wglext.h	/^#define WGL_SWAP_COPY_EXT /;"	d
WGL_SWAP_EXCHANGE_ARB	src/external/wglext.h	/^#define WGL_SWAP_EXCHANGE_ARB /;"	d
WGL_SWAP_EXCHANGE_EXT	src/external/wglext.h	/^#define WGL_SWAP_EXCHANGE_EXT /;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	src/external/wglext.h	/^#define WGL_SWAP_LAYER_BUFFERS_ARB /;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	src/external/wglext.h	/^#define WGL_SWAP_LAYER_BUFFERS_EXT /;"	d
WGL_SWAP_METHOD_ARB	src/external/wglext.h	/^#define WGL_SWAP_METHOD_ARB /;"	d
WGL_SWAP_METHOD_EXT	src/external/wglext.h	/^#define WGL_SWAP_METHOD_EXT /;"	d
WGL_SWAP_UNDEFINED_ARB	src/external/wglext.h	/^#define WGL_SWAP_UNDEFINED_ARB /;"	d
WGL_SWAP_UNDEFINED_EXT	src/external/wglext.h	/^#define WGL_SWAP_UNDEFINED_EXT /;"	d
WGL_TEXTURE_1D_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_1D_ARB /;"	d
WGL_TEXTURE_2D_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_2D_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	src/external/wglext.h	/^#define WGL_TEXTURE_DEPTH_COMPONENT_NV /;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	src/external/wglext.h	/^#define WGL_TEXTURE_FLOAT_RGBA_NV /;"	d
WGL_TEXTURE_FLOAT_RGB_NV	src/external/wglext.h	/^#define WGL_TEXTURE_FLOAT_RGB_NV /;"	d
WGL_TEXTURE_FLOAT_RG_NV	src/external/wglext.h	/^#define WGL_TEXTURE_FLOAT_RG_NV /;"	d
WGL_TEXTURE_FLOAT_R_NV	src/external/wglext.h	/^#define WGL_TEXTURE_FLOAT_R_NV /;"	d
WGL_TEXTURE_FORMAT_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_FORMAT_ARB /;"	d
WGL_TEXTURE_RECTANGLE_ATI	src/external/wglext.h	/^#define WGL_TEXTURE_RECTANGLE_ATI /;"	d
WGL_TEXTURE_RECTANGLE_NV	src/external/wglext.h	/^#define WGL_TEXTURE_RECTANGLE_NV /;"	d
WGL_TEXTURE_RGBA_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_RGBA_ARB /;"	d
WGL_TEXTURE_RGB_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_RGB_ARB /;"	d
WGL_TEXTURE_TARGET_ARB	src/external/wglext.h	/^#define WGL_TEXTURE_TARGET_ARB /;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	src/external/wglext.h	/^#define WGL_TRANSPARENT_ALPHA_VALUE_ARB /;"	d
WGL_TRANSPARENT_ARB	src/external/wglext.h	/^#define WGL_TRANSPARENT_ARB /;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	src/external/wglext.h	/^#define WGL_TRANSPARENT_BLUE_VALUE_ARB /;"	d
WGL_TRANSPARENT_EXT	src/external/wglext.h	/^#define WGL_TRANSPARENT_EXT /;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	src/external/wglext.h	/^#define WGL_TRANSPARENT_GREEN_VALUE_ARB /;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	src/external/wglext.h	/^#define WGL_TRANSPARENT_INDEX_VALUE_ARB /;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	src/external/wglext.h	/^#define WGL_TRANSPARENT_RED_VALUE_ARB /;"	d
WGL_TRANSPARENT_VALUE_EXT	src/external/wglext.h	/^#define WGL_TRANSPARENT_VALUE_EXT /;"	d
WGL_TYPE_COLORINDEX_ARB	src/external/wglext.h	/^#define WGL_TYPE_COLORINDEX_ARB /;"	d
WGL_TYPE_COLORINDEX_EXT	src/external/wglext.h	/^#define WGL_TYPE_COLORINDEX_EXT /;"	d
WGL_TYPE_RGBA_ARB	src/external/wglext.h	/^#define WGL_TYPE_RGBA_ARB /;"	d
WGL_TYPE_RGBA_EXT	src/external/wglext.h	/^#define WGL_TYPE_RGBA_EXT /;"	d
WGL_TYPE_RGBA_FLOAT_ARB	src/external/wglext.h	/^#define WGL_TYPE_RGBA_FLOAT_ARB /;"	d
WGL_TYPE_RGBA_FLOAT_ATI	src/external/wglext.h	/^#define WGL_TYPE_RGBA_FLOAT_ATI /;"	d
WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT	src/external/wglext.h	/^#define WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT /;"	d
WGL_UNIQUE_ID_NV	src/external/wglext.h	/^#define WGL_UNIQUE_ID_NV /;"	d
WGL_VIDEO_OUT_ALPHA_NV	src/external/wglext.h	/^#define WGL_VIDEO_OUT_ALPHA_NV /;"	d
WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV	src/external/wglext.h	/^#define WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV /;"	d
WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV	src/external/wglext.h	/^#define WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV /;"	d
WGL_VIDEO_OUT_COLOR_NV	src/external/wglext.h	/^#define WGL_VIDEO_OUT_COLOR_NV /;"	d
WGL_VIDEO_OUT_DEPTH_NV	src/external/wglext.h	/^#define WGL_VIDEO_OUT_DEPTH_NV /;"	d
WGL_VIDEO_OUT_FIELD_1	src/external/wglext.h	/^#define WGL_VIDEO_OUT_FIELD_1 /;"	d
WGL_VIDEO_OUT_FIELD_2	src/external/wglext.h	/^#define WGL_VIDEO_OUT_FIELD_2 /;"	d
WGL_VIDEO_OUT_FRAME	src/external/wglext.h	/^#define WGL_VIDEO_OUT_FRAME /;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_1_2	src/external/wglext.h	/^#define WGL_VIDEO_OUT_STACKED_FIELDS_1_2 /;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_2_1	src/external/wglext.h	/^#define WGL_VIDEO_OUT_STACKED_FIELDS_2_1 /;"	d
WGL_WGLEXT_VERSION	src/external/wglext.h	/^#define WGL_WGLEXT_VERSION /;"	d
WIN32_LEAN_AND_MEAN	src/external/glcorearb.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	src/external/wglext.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
X	src/main.cpp	/^#define X(/;"	d	file:
YCbCr_to_RGB_kernel	src/external/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc/;"	m	struct:__anon11d2a80f0808	typeref:typename:void (*)(stbi_uc * out,const stbi_uc * y,const stbi_uc * pcb,const stbi_uc * pcr,int count,int step)
_GPU_DEVICE	src/external/wglext.h	/^struct _GPU_DEVICE {$/;"	s
__STB_INCLUDE_STB_TRUETYPE_H__	src/external/stb_truetype.h	/^#define __STB_INCLUDE_STB_TRUETYPE_H__$/;"	d
__anon11d2a80f0103	src/external/stb_image.h	/^{$/;"	g
__anon11d2a80f0208	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0308	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0403	src/external/stb_image.h	/^{$/;"	g
__anon11d2a80f0508	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0603	src/external/stb_image.h	/^{$/;"	g
__anon11d2a80f0708	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0808	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0908	src/external/stb_image.h	/^   {$/;"	s	struct:__anon11d2a80f0808
__anon11d2a80f0a08	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0b08	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0c08	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0d08	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0e08	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f0f03	src/external/stb_image.h	/^enum {$/;"	g
__anon11d2a80f1008	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f1108	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f1208	src/external/stb_image.h	/^{$/;"	s
__anon11d2a80f1308	src/external/stb_image.h	/^{$/;"	s
__anon6b1d216e0108	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e0208	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e0308	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e0408	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e0508	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e0603	src/external/stb_truetype.h	/^   enum {$/;"	g
__anon6b1d216e0708	src/external/stb_truetype.h	/^   {$/;"	s
__anon6b1d216e0808	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e0903	src/external/stb_truetype.h	/^enum { \/\/ platformID$/;"	g
__anon6b1d216e0a03	src/external/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_UNICODE$/;"	g
__anon6b1d216e0b03	src/external/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_MICROSOFT$/;"	g
__anon6b1d216e0c03	src/external/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_MAC; same as Script Manager codes$/;"	g
__anon6b1d216e0d03	src/external/stb_truetype.h	/^enum { \/\/ languageID for STBTT_PLATFORM_ID_MICROSOFT; same as LCID...$/;"	g
__anon6b1d216e0e03	src/external/stb_truetype.h	/^enum { \/\/ languageID for STBTT_PLATFORM_ID_MAC$/;"	g
__anon6b1d216e0f08	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e1008	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e1108	src/external/stb_truetype.h	/^{$/;"	s
__anon6b1d216e1208	src/external/stb_truetype.h	/^{$/;"	s
__anon81f5a0020103	src/external/KHR/khrplatform.h	/^typedef enum {$/;"	g
__anon9687efeb0108	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0208	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0303	src/external/mp3lib.h	/^{$/;"	g
__anon9687efeb0408	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0508	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0608	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0708	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0808	src/external/mp3lib.h	/^    {$/;"	s	struct:__anon9687efeb0708
__anon9687efeb0908	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0a08	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0b08	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0c08	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0d08	src/external/mp3lib.h	/^{$/;"	s
__anon9687efeb0e08	src/external/mp3lib.h	/^{$/;"	s
__gl_glcorearb_h_	src/external/glcorearb.h	/^#define __gl_glcorearb_h_ /;"	d
__khrplatform_h_	src/external/KHR/khrplatform.h	/^#define __khrplatform_h_$/;"	d
__wgl_wglext_h_	src/external/wglext.h	/^#define __wgl_wglext_h_ /;"	d
active	src/ui.h	/^	s_ui_id active;$/;"	m	struct:s_ui	typeref:typename:s_ui_id
active_this_frame	src/ui.h	/^	s_ui_id active_this_frame;$/;"	m	struct:s_ui	typeref:typename:s_ui_id
add	src/hashtable.cpp	/^T* s_hashtable<T>::add(char* key, T value)$/;"	f	class:s_hashtable	typeref:typename:T *
add	src/main.h	/^	void add(T new_element)$/;"	f	struct:s_dynamic_array	typeref:typename:void
advance	src/external/stb_truetype.h	/^   int advance;$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
advance_width	src/main.h	/^	int advance_width;$/;"	m	struct:s_glyph	typeref:typename:int
all_a	src/external/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:unsigned int
allocationCallbacks	src/external/mp3lib.h	/^    drmp3_allocation_callbacks allocationCallbacks;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_allocation_callbacks
app14_color_transform	src/external/stb_image.h	/^   int            app14_color_transform; \/\/ Adobe APP14 tag$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
apply_event_to_input	src/main.cpp	/^func void apply_event_to_input(s_input* in_input, s_stored_input event)$/;"	f	typeref:typename:func void
array_of_unicode_codepoints	src/external/stb_truetype.h	/^   int *array_of_unicode_codepoints;       \/\/ if non-zero, then this is an array of unicode co/;"	m	struct:__anon6b1d216e0508	typeref:typename:int *
ascent	src/main.h	/^	int ascent;$/;"	m	struct:s_font	typeref:typename:int
atEnd	src/external/mp3lib.h	/^    drmp3_bool32 atEnd : 1;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_bool32:1
background	src/external/stb_image.h	/^   stbi_uc *background;          \/\/ The current "background" as far as a gif is concerned$/;"	m	struct:__anon11d2a80f1308	typeref:typename:stbi_uc *
band_count	src/external/mp3lib.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon9687efeb0b08	typeref:typename:drmp3_uint8
bgindex	src/external/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
big_values	src/external/mp3lib.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint16
bitalloc	src/external/mp3lib.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon9687efeb0a08	typeref:typename:drmp3_uint8[64]
bitrate_kbps	src/external/mp3lib.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon9687efeb0108	typeref:typename:int
bits_per_channel	src/external/stb_image.h	/^   int bits_per_channel;$/;"	m	struct:__anon11d2a80f0508	typeref:typename:int
block_type	src/external/mp3lib.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
blocking	src/ui.h	/^	b8 blocking;$/;"	m	struct:s_ui_layer	typeref:typename:b8
bottom_y	src/external/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon6b1d216e1108	typeref:typename:int
bounds	src/external/stb_truetype.h	/^   int bounds;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:int
bpp	src/external/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:int
bs	src/external/mp3lib.h	/^    drmp3_bs bs;$/;"	m	struct:__anon9687efeb0d08	typeref:typename:drmp3_bs
buf	src/external/mp3lib.h	/^    const drmp3_uint8 *buf;$/;"	m	struct:__anon9687efeb0908	typeref:typename:const drmp3_uint8 *
buffer_start	src/external/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon11d2a80f0308	typeref:typename:stbi_uc[128]
buflen	src/external/stb_image.h	/^   int buflen;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:int
bytePos	src/external/mp3lib.h	/^    drmp3_uint64 bytePos;$/;"	m	struct:__anon9687efeb0e08	typeref:typename:drmp3_uint64
c	src/main.h	/^	int c;$/;"	m	struct:s_char_event	typeref:typename:int
c_base_res	src/config.h	/^global constexpr s_v2 c_base_res = v2(1280, 720);$/;"	v	typeref:typename:global s_v2
c_button_color	src/config.h	/^global constexpr s_v4 c_button_color = rgb(0x929576);$/;"	v	typeref:typename:global s_v4
c_max_hashtable_elements	src/hashtable.h	/^global constexpr u32 c_max_hashtable_elements = 8192;$/;"	v	typeref:typename:global u32
c_max_keys	src/config.h	/^global constexpr int c_max_keys = 1024;$/;"	v	typeref:typename:global int
c_origin_bottomleft	src/config.h	/^global constexpr s_v2 c_origin_bottomleft = v2(1.0f, 1.0f);$/;"	v	typeref:typename:global s_v2
c_origin_center	src/config.h	/^global constexpr s_v2 c_origin_center = v2(0, 0);$/;"	v	typeref:typename:global s_v2
c_origin_topleft	src/config.h	/^global constexpr s_v2 c_origin_topleft = v2(1.0f, -1.0f);$/;"	v	typeref:typename:global s_v2
c_text_color	src/config.h	/^global constexpr s_v4 c_text_color = rgb(0xFAD592);$/;"	v	typeref:typename:global s_v4
callback_already_read	src/external/stb_image.h	/^   int callback_already_read;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:int
canceled	src/ui.h	/^	b8 canceled;$/;"	m	struct:s_ui_result	typeref:typename:b8
capacity	src/main.h	/^	int capacity;$/;"	m	struct:s_dynamic_array	typeref:typename:int
cb	src/external/wglext.h	/^    DWORD  cb;$/;"	m	struct:_GPU_DEVICE	typeref:typename:DWORD
cff	src/external/stb_truetype.h	/^   stbtt__buf cff;                    \/\/ cff font data$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
channel	src/external/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon11d2a80f1108	typeref:typename:stbi_uc
channel_order	src/external/stb_image.h	/^   int channel_order;$/;"	m	struct:__anon11d2a80f0508	typeref:typename:int
channels	src/external/mp3lib.h	/^    drmp3_uint32 channels;$/;"	m	struct:__anon9687efeb0608	typeref:typename:drmp3_uint32
channels	src/external/mp3lib.h	/^    drmp3_uint32 channels;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint32
channels	src/external/mp3lib.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon9687efeb0108	typeref:typename:int
char_event_arr	src/main.cpp	/^global s_sarray<s_char_event, 64> char_event_arr;$/;"	v	typeref:typename:global s_sarray<s_char_event,64>
chardata_for_range	src/external/stb_truetype.h	/^   stbtt_packedchar *chardata_for_range; \/\/ output$/;"	m	struct:__anon6b1d216e0508	typeref:typename:stbtt_packedchar *
charstrings	src/external/stb_truetype.h	/^   stbtt__buf charstrings;            \/\/ the charstring index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
check_for_shader_errors	src/main.cpp	/^func b8 check_for_shader_errors(u32 id, char* out_error)$/;"	f	typeref:typename:func b8
checked	src/ui.h	/^	b8 checked;$/;"	m	struct:s_ui_data	typeref:typename:b8
checked	src/ui.h	/^	b8 checked;$/;"	m	struct:s_ui_result	typeref:typename:b8
clicked	src/ui.h	/^	b8 clicked;$/;"	m	struct:s_ui_result	typeref:typename:b8
clip_pos	src/shader_shared.h	/^	shader_v2 clip_pos;$/;"	m	struct:s_transform	typeref:typename:shader_v2
clip_size	src/shader_shared.h	/^	shader_v2 clip_size;$/;"	m	struct:s_transform	typeref:typename:shader_v2
code	src/external/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon11d2a80f0708	typeref:typename:stbi__uint16[256]
code_bits	src/external/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
code_buffer	src/external/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon11d2a80f0808	typeref:typename:stbi__uint32
code_buffer	src/external/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:stbi__uint32
code_tab_width	src/external/mp3lib.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon9687efeb0b08	typeref:typename:drmp3_uint8
codes	src/external/stb_image.h	/^   stbi__gif_lzw codes[8192];$/;"	m	struct:__anon11d2a80f1308	typeref:typename:stbi__gif_lzw[8192]
coeff	src/external/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:short *
coeff_h	src/external/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
coeff_w	src/external/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
color	src/shader_shared.h	/^	shader_v4 color;$/;"	m	struct:s_transform	typeref:typename:shader_v4
color	src/ui.h	/^	s_v4 color;$/;"	m	struct:s_ui_data	typeref:typename:s_v4
color_table	src/external/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:stbi_uc *
comp	build.bat	/^	set comp=%comp% -O2 -Dm_debug -MTd$/;"	v
comp	build.bat	/^	set comp=%comp% -O2 -MT$/;"	v
comp	build.bat	/^	set comp=%comp% -Od -Dm_debug -Zi -MTd$/;"	v
comp	build.bat	/^set comp=-nologo -std:c++20 -Zc:strictStrings- -W4 -wd4505 -wd4324 -wd4127 -FC -I ..\/..\/my_lib/;"	v
count	src/main.h	/^	int count;$/;"	m	struct:s_dynamic_array	typeref:typename:int
count	src/main.h	/^	int count;$/;"	m	struct:s_key	typeref:typename:int
count1_table	src/external/mp3lib.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
cur_x	src/external/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
cur_y	src/external/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
currentPCMFrame	src/external/mp3lib.h	/^    drmp3_uint64 currentPCMFrame;       \/* The current PCM frame, globally, based on the output/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint64
currentReadPos	src/external/mp3lib.h	/^        size_t currentReadPos;$/;"	m	struct:__anon9687efeb0708::__anon9687efeb0808	typeref:typename:size_t
cursor	src/external/stb_truetype.h	/^   int cursor;$/;"	m	struct:__anon6b1d216e0108	typeref:typename:int
cursor	src/ui.h	/^	int cursor;$/;"	m	struct:s_input_str	typeref:typename:int
cx	src/external/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon6b1d216e0708	typeref:typename:stbtt_vertex_type
cx1	src/external/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon6b1d216e0708	typeref:typename:stbtt_vertex_type
cy	src/external/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon6b1d216e0708	typeref:typename:stbtt_vertex_type
cy1	src/external/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon6b1d216e0708	typeref:typename:stbtt_vertex_type
data	src/external/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:stbi_uc *
data	src/external/stb_truetype.h	/^   unsigned char  * data;              \/\/ pointer to .ttf file$/;"	m	struct:stbtt_fontinfo	typeref:typename:unsigned char *
data	src/external/stb_truetype.h	/^   unsigned char *data;$/;"	m	struct:__anon6b1d216e0108	typeref:typename:unsigned char *
data	src/ui.h	/^	char data[max_chars + 1];$/;"	m	struct:s_input_str	typeref:typename:char[]
dataCapacity	src/external/mp3lib.h	/^    size_t dataCapacity;$/;"	m	struct:__anon9687efeb0708	typeref:typename:size_t
dataConsumed	src/external/mp3lib.h	/^    size_t dataConsumed;$/;"	m	struct:__anon9687efeb0708	typeref:typename:size_t
dataSize	src/external/mp3lib.h	/^        size_t dataSize;$/;"	m	struct:__anon9687efeb0708::__anon9687efeb0808	typeref:typename:size_t
dataSize	src/external/mp3lib.h	/^    size_t dataSize;$/;"	m	struct:__anon9687efeb0708	typeref:typename:size_t
dc_pred	src/external/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
dct_bfly32o	src/external/stb_image.h	/^   #define dct_bfly32o(/;"	d
dct_bfly32o	src/external/stb_image.h	/^#define dct_bfly32o(/;"	d
dct_const	src/external/stb_image.h	/^   #define dct_const(/;"	d
dct_interleave16	src/external/stb_image.h	/^   #define dct_interleave16(/;"	d
dct_interleave8	src/external/stb_image.h	/^   #define dct_interleave8(/;"	d
dct_long_mac	src/external/stb_image.h	/^#define dct_long_mac(/;"	d
dct_long_mul	src/external/stb_image.h	/^#define dct_long_mul(/;"	d
dct_pass	src/external/stb_image.h	/^   #define dct_pass(/;"	d
dct_pass	src/external/stb_image.h	/^#define dct_pass(/;"	d
dct_rot	src/external/stb_image.h	/^   #define dct_rot(/;"	d
dct_trn16	src/external/stb_image.h	/^#define dct_trn16(/;"	d
dct_trn32	src/external/stb_image.h	/^#define dct_trn32(/;"	d
dct_trn64	src/external/stb_image.h	/^#define dct_trn64(/;"	d
dct_trn8_16	src/external/stb_image.h	/^#define dct_trn8_16(/;"	d
dct_trn8_32	src/external/stb_image.h	/^#define dct_trn8_32(/;"	d
dct_trn8_8	src/external/stb_image.h	/^#define dct_trn8_8(/;"	d
dct_wadd	src/external/stb_image.h	/^   #define dct_wadd(/;"	d
dct_wadd	src/external/stb_image.h	/^#define dct_wadd(/;"	d
dct_widen	src/external/stb_image.h	/^   #define dct_widen(/;"	d
dct_widen	src/external/stb_image.h	/^#define dct_widen(/;"	d
dct_wsub	src/external/stb_image.h	/^   #define dct_wsub(/;"	d
dct_wsub	src/external/stb_image.h	/^#define dct_wsub(/;"	d
debug	build.bat	/^set debug=2$/;"	v
decoder	src/external/mp3lib.h	/^    drmp3dec decoder;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3dec
delay	src/external/stb_image.h	/^   int delay;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
delta	src/external/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon11d2a80f0708	typeref:typename:int[17]
delta	src/main.cpp	/^global float delta = 0;$/;"	v	typeref:typename:global float
depth	src/external/stb_image.h	/^   int depth;$/;"	m	struct:__anon11d2a80f0e08	typeref:typename:int
dequant	src/external/stb_image.h	/^   stbi__uint16 dequant[4][64];$/;"	m	struct:__anon11d2a80f0808	typeref:typename:stbi__uint16[4][64]
descent	src/main.h	/^	int descent;$/;"	m	struct:s_font	typeref:typename:int
direction	src/external/stb_truetype.h	/^   float direction;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
direction	src/external/stb_truetype.h	/^   int direction;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
do_clip	src/shader_shared.h	/^	shader_bool do_clip;$/;"	m	struct:s_transform	typeref:typename:shader_bool
dr_mp3_c	src/external/mp3lib.h	/^#define dr_mp3_c$/;"	d
dr_mp3_h	src/external/mp3lib.h	/^#define dr_mp3_h$/;"	d
draw_rect	src/draw.cpp	/^func void draw_rect(s_v2 pos, int layer, s_v2 size, s_v4 color, s_transform t)$/;"	f	typeref:typename:func void
draw_size	src/shader_shared.h	/^	shader_v2 draw_size;$/;"	m	struct:s_transform	typeref:typename:shader_v2
draw_text	src/draw.cpp	/^func void draw_text(char* text, s_v2 in_pos, int layer, s_v4 color, e_font font_id, b8 centered,/;"	f	typeref:typename:func void
draw_texture	src/draw.cpp	/^func void draw_texture(s_v2 pos, int layer, s_v2 size, s_v4 color, s_transform t)$/;"	f	typeref:typename:func void
drmp3	src/external/mp3lib.h	/^} drmp3;$/;"	t	typeref:struct:__anon9687efeb0708
drmp3_L12_apply_scf_384	src/external/mp3lib.h	/^static void drmp3_L12_apply_scf_384(drmp3_L12_scale_info *sci, const float *scf, float *dst)$/;"	f	typeref:typename:void
drmp3_L12_dequantize_granule	src/external/mp3lib.h	/^static int drmp3_L12_dequantize_granule(float *grbuf, drmp3_bs *bs, drmp3_L12_scale_info *sci, i/;"	f	typeref:typename:int
drmp3_L12_read_scale_info	src/external/mp3lib.h	/^static void drmp3_L12_read_scale_info(const drmp3_uint8 *hdr, drmp3_bs *bs, drmp3_L12_scale_info/;"	f	typeref:typename:void
drmp3_L12_read_scalefactors	src/external/mp3lib.h	/^static void drmp3_L12_read_scalefactors(drmp3_bs *bs, drmp3_uint8 *pba, drmp3_uint8 *scfcod, int/;"	f	typeref:typename:void
drmp3_L12_scale_info	src/external/mp3lib.h	/^} drmp3_L12_scale_info;$/;"	t	typeref:struct:__anon9687efeb0a08
drmp3_L12_subband_alloc	src/external/mp3lib.h	/^} drmp3_L12_subband_alloc;$/;"	t	typeref:struct:__anon9687efeb0b08
drmp3_L12_subband_alloc_table	src/external/mp3lib.h	/^static const drmp3_L12_subband_alloc *drmp3_L12_subband_alloc_table(const drmp3_uint8 *hdr, drmp/;"	f	typeref:typename:const drmp3_L12_subband_alloc *
drmp3_L3_antialias	src/external/mp3lib.h	/^static void drmp3_L3_antialias(float *grbuf, int nbands)$/;"	f	typeref:typename:void
drmp3_L3_change_sign	src/external/mp3lib.h	/^static void drmp3_L3_change_sign(float *grbuf)$/;"	f	typeref:typename:void
drmp3_L3_dct3_9	src/external/mp3lib.h	/^static void drmp3_L3_dct3_9(float *y)$/;"	f	typeref:typename:void
drmp3_L3_decode	src/external/mp3lib.h	/^static void drmp3_L3_decode(drmp3dec *h, drmp3dec_scratch *s, drmp3_L3_gr_info *gr_info, int nch/;"	f	typeref:typename:void
drmp3_L3_decode_scalefactors	src/external/mp3lib.h	/^static void drmp3_L3_decode_scalefactors(const drmp3_uint8 *hdr, drmp3_uint8 *ist_pos, drmp3_bs /;"	f	typeref:typename:void
drmp3_L3_gr_info	src/external/mp3lib.h	/^} drmp3_L3_gr_info;$/;"	t	typeref:struct:__anon9687efeb0c08
drmp3_L3_huffman	src/external/mp3lib.h	/^static void drmp3_L3_huffman(float *dst, drmp3_bs *bs, const drmp3_L3_gr_info *gr_info, const fl/;"	f	typeref:typename:void
drmp3_L3_idct3	src/external/mp3lib.h	/^static void drmp3_L3_idct3(float x0, float x1, float x2, float *dst)$/;"	f	typeref:typename:void
drmp3_L3_imdct12	src/external/mp3lib.h	/^static void drmp3_L3_imdct12(float *x, float *dst, float *overlap)$/;"	f	typeref:typename:void
drmp3_L3_imdct36	src/external/mp3lib.h	/^static void drmp3_L3_imdct36(float *grbuf, float *overlap, const float *window, int nbands)$/;"	f	typeref:typename:void
drmp3_L3_imdct_gr	src/external/mp3lib.h	/^static void drmp3_L3_imdct_gr(float *grbuf, float *overlap, unsigned block_type, unsigned n_long/;"	f	typeref:typename:void
drmp3_L3_imdct_short	src/external/mp3lib.h	/^static void drmp3_L3_imdct_short(float *grbuf, float *overlap, int nbands)$/;"	f	typeref:typename:void
drmp3_L3_intensity_stereo	src/external/mp3lib.h	/^static void drmp3_L3_intensity_stereo(float *left, drmp3_uint8 *ist_pos, const drmp3_L3_gr_info /;"	f	typeref:typename:void
drmp3_L3_intensity_stereo_band	src/external/mp3lib.h	/^static void drmp3_L3_intensity_stereo_band(float *left, int n, float kl, float kr)$/;"	f	typeref:typename:void
drmp3_L3_ldexp_q2	src/external/mp3lib.h	/^static float drmp3_L3_ldexp_q2(float y, int exp_q2)$/;"	f	typeref:typename:float
drmp3_L3_midside_stereo	src/external/mp3lib.h	/^static void drmp3_L3_midside_stereo(float *left, int n)$/;"	f	typeref:typename:void
drmp3_L3_pow_43	src/external/mp3lib.h	/^static float drmp3_L3_pow_43(int x)$/;"	f	typeref:typename:float
drmp3_L3_read_scalefactors	src/external/mp3lib.h	/^static void drmp3_L3_read_scalefactors(drmp3_uint8 *scf, drmp3_uint8 *ist_pos, const drmp3_uint8/;"	f	typeref:typename:void
drmp3_L3_read_side_info	src/external/mp3lib.h	/^static int drmp3_L3_read_side_info(drmp3_bs *bs, drmp3_L3_gr_info *gr, const drmp3_uint8 *hdr)$/;"	f	typeref:typename:int
drmp3_L3_reorder	src/external/mp3lib.h	/^static void drmp3_L3_reorder(float *grbuf, float *scratch, const drmp3_uint8 *sfb)$/;"	f	typeref:typename:void
drmp3_L3_restore_reservoir	src/external/mp3lib.h	/^static int drmp3_L3_restore_reservoir(drmp3dec *h, drmp3_bs *bs, drmp3dec_scratch *s, int main_d/;"	f	typeref:typename:int
drmp3_L3_save_reservoir	src/external/mp3lib.h	/^static void drmp3_L3_save_reservoir(drmp3dec *h, drmp3dec_scratch *s)$/;"	f	typeref:typename:void
drmp3_L3_stereo_process	src/external/mp3lib.h	/^static void drmp3_L3_stereo_process(float *left, const drmp3_uint8 *ist_pos, const drmp3_uint8 */;"	f	typeref:typename:void
drmp3_L3_stereo_top_band	src/external/mp3lib.h	/^static void drmp3_L3_stereo_top_band(const float *right, const drmp3_uint8 *sfb, int nbands, int/;"	f	typeref:typename:void
drmp3__accumulate_running_pcm_frame_count	src/external/mp3lib.h	/^static void drmp3__accumulate_running_pcm_frame_count(drmp3* pMP3, drmp3_uint32 pcmFrameCountIn,/;"	f	typeref:typename:void
drmp3__free_default	src/external/mp3lib.h	/^static void drmp3__free_default(void* p, void* pUserData)$/;"	f	typeref:typename:void
drmp3__free_from_callbacks	src/external/mp3lib.h	/^static void drmp3__free_from_callbacks(void* p, const drmp3_allocation_callbacks* pAllocationCal/;"	f	typeref:typename:void
drmp3__full_read_and_close_f32	src/external/mp3lib.h	/^static float* drmp3__full_read_and_close_f32(drmp3* pMP3, drmp3_config* pConfig, drmp3_uint64* p/;"	f	typeref:typename:float *
drmp3__full_read_and_close_s16	src/external/mp3lib.h	/^static drmp3_int16* drmp3__full_read_and_close_s16(drmp3* pMP3, drmp3_config* pConfig, drmp3_uin/;"	f	typeref:typename:drmp3_int16 *
drmp3__malloc_default	src/external/mp3lib.h	/^static void* drmp3__malloc_default(size_t sz, void* pUserData)$/;"	f	typeref:typename:void *
drmp3__malloc_from_callbacks	src/external/mp3lib.h	/^static void* drmp3__malloc_from_callbacks(size_t sz, const drmp3_allocation_callbacks* pAllocati/;"	f	typeref:typename:void *
drmp3__on_read	src/external/mp3lib.h	/^static size_t drmp3__on_read(drmp3* pMP3, void* pBufferOut, size_t bytesToRead)$/;"	f	typeref:typename:size_t
drmp3__on_read_memory	src/external/mp3lib.h	/^static size_t drmp3__on_read_memory(void* pUserData, void* pBufferOut, size_t bytesToRead)$/;"	f	typeref:typename:size_t
drmp3__on_read_stdio	src/external/mp3lib.h	/^static size_t drmp3__on_read_stdio(void* pUserData, void* pBufferOut, size_t bytesToRead)$/;"	f	typeref:typename:size_t
drmp3__on_seek	src/external/mp3lib.h	/^static drmp3_bool32 drmp3__on_seek(drmp3* pMP3, int offset, drmp3_seek_origin origin)$/;"	f	typeref:typename:drmp3_bool32
drmp3__on_seek_64	src/external/mp3lib.h	/^static drmp3_bool32 drmp3__on_seek_64(drmp3* pMP3, drmp3_uint64 offset, drmp3_seek_origin origin/;"	f	typeref:typename:drmp3_bool32
drmp3__on_seek_memory	src/external/mp3lib.h	/^static drmp3_bool32 drmp3__on_seek_memory(void* pUserData, int byteOffset, drmp3_seek_origin ori/;"	f	typeref:typename:drmp3_bool32
drmp3__on_seek_stdio	src/external/mp3lib.h	/^static drmp3_bool32 drmp3__on_seek_stdio(void* pUserData, int offset, drmp3_seek_origin origin)$/;"	f	typeref:typename:drmp3_bool32
drmp3__realloc_default	src/external/mp3lib.h	/^static void* drmp3__realloc_default(void* p, size_t sz, void* pUserData)$/;"	f	typeref:typename:void *
drmp3__realloc_from_callbacks	src/external/mp3lib.h	/^static void* drmp3__realloc_from_callbacks(void* p, size_t szNew, size_t szOld, const drmp3_allo/;"	f	typeref:typename:void *
drmp3__seeking_mp3_frame_info	src/external/mp3lib.h	/^} drmp3__seeking_mp3_frame_info;$/;"	t	typeref:struct:__anon9687efeb0e08
drmp3_allocation_callbacks	src/external/mp3lib.h	/^} drmp3_allocation_callbacks;$/;"	t	typeref:struct:__anon9687efeb0508
drmp3_bind_seek_table	src/external/mp3lib.h	/^DRMP3_API drmp3_bool32 drmp3_bind_seek_table(drmp3* pMP3, drmp3_uint32 seekPointCount, drmp3_see/;"	f	typeref:typename:DRMP3_API drmp3_bool32
drmp3_bool32	src/external/mp3lib.h	/^typedef drmp3_uint32            drmp3_bool32;$/;"	t	typeref:typename:drmp3_uint32
drmp3_bool8	src/external/mp3lib.h	/^typedef drmp3_uint8             drmp3_bool8;$/;"	t	typeref:typename:drmp3_uint8
drmp3_bs	src/external/mp3lib.h	/^} drmp3_bs;$/;"	t	typeref:struct:__anon9687efeb0908
drmp3_bs_get_bits	src/external/mp3lib.h	/^static drmp3_uint32 drmp3_bs_get_bits(drmp3_bs *bs, int n)$/;"	f	typeref:typename:drmp3_uint32
drmp3_bs_init	src/external/mp3lib.h	/^static void drmp3_bs_init(drmp3_bs *bs, const drmp3_uint8 *data, int bytes)$/;"	f	typeref:typename:void
drmp3_calculate_seek_points	src/external/mp3lib.h	/^DRMP3_API drmp3_bool32 drmp3_calculate_seek_points(drmp3* pMP3, drmp3_uint32* pSeekPointCount, d/;"	f	typeref:typename:DRMP3_API drmp3_bool32
drmp3_clip_int16_arm	src/external/mp3lib.h	/^static __inline__ __attribute__((always_inline)) drmp3_int32 drmp3_clip_int16_arm(drmp3_int32 a)$/;"	f	typeref:typename:drmp3_int32
drmp3_config	src/external/mp3lib.h	/^} drmp3_config;$/;"	t	typeref:struct:__anon9687efeb0608
drmp3_copy_allocation_callbacks_or_defaults	src/external/mp3lib.h	/^static drmp3_allocation_callbacks drmp3_copy_allocation_callbacks_or_defaults(const drmp3_alloca/;"	f	typeref:typename:drmp3_allocation_callbacks
drmp3_cpuid	src/external/mp3lib.h	/^#define drmp3_cpuid /;"	d
drmp3_cpuid	src/external/mp3lib.h	/^static __inline__ __attribute__((always_inline)) void drmp3_cpuid(int CPUInfo[], const int InfoT/;"	f	typeref:typename:void
drmp3_decode_next_frame	src/external/mp3lib.h	/^static drmp3_uint32 drmp3_decode_next_frame(drmp3* pMP3)$/;"	f	typeref:typename:drmp3_uint32
drmp3_decode_next_frame_ex	src/external/mp3lib.h	/^static drmp3_uint32 drmp3_decode_next_frame_ex(drmp3* pMP3, drmp3d_sample_t* pPCMFrames)$/;"	f	typeref:typename:drmp3_uint32
drmp3_decode_next_frame_ex__callbacks	src/external/mp3lib.h	/^static drmp3_uint32 drmp3_decode_next_frame_ex__callbacks(drmp3* pMP3, drmp3d_sample_t* pPCMFram/;"	f	typeref:typename:drmp3_uint32
drmp3_decode_next_frame_ex__memory	src/external/mp3lib.h	/^static drmp3_uint32 drmp3_decode_next_frame_ex__memory(drmp3* pMP3, drmp3d_sample_t* pPCMFrames)$/;"	f	typeref:typename:drmp3_uint32
drmp3_f32_to_s16	src/external/mp3lib.h	/^static void drmp3_f32_to_s16(drmp3_int16* dst, const float* src, drmp3_uint64 sampleCount)$/;"	f	typeref:typename:void
drmp3_f4	src/external/mp3lib.h	/^typedef __m128 drmp3_f4;$/;"	t	typeref:typename:__m128
drmp3_f4	src/external/mp3lib.h	/^typedef float32x4_t drmp3_f4;$/;"	t	typeref:typename:float32x4_t
drmp3_find_closest_seek_point	src/external/mp3lib.h	/^static drmp3_bool32 drmp3_find_closest_seek_point(drmp3* pMP3, drmp3_uint64 frameIndex, drmp3_ui/;"	f	typeref:typename:drmp3_bool32
drmp3_fopen	src/external/mp3lib.h	/^static drmp3_result drmp3_fopen(FILE** ppFile, const char* pFilePath, const char* pOpenMode)$/;"	f	typeref:typename:drmp3_result
drmp3_free	src/external/mp3lib.h	/^DRMP3_API void drmp3_free(void* p, const drmp3_allocation_callbacks* pAllocationCallbacks)$/;"	f	typeref:typename:DRMP3_API void
drmp3_gcf_u32	src/external/mp3lib.h	/^static DRMP3_INLINE drmp3_uint32 drmp3_gcf_u32(drmp3_uint32 a, drmp3_uint32 b)$/;"	f	typeref:typename:DRMP3_INLINE drmp3_uint32
drmp3_get_mp3_and_pcm_frame_count	src/external/mp3lib.h	/^DRMP3_API drmp3_bool32 drmp3_get_mp3_and_pcm_frame_count(drmp3* pMP3, drmp3_uint64* pMP3FrameCou/;"	f	typeref:typename:DRMP3_API drmp3_bool32
drmp3_get_mp3_frame_count	src/external/mp3lib.h	/^DRMP3_API drmp3_uint64 drmp3_get_mp3_frame_count(drmp3* pMP3)$/;"	f	typeref:typename:DRMP3_API drmp3_uint64
drmp3_get_pcm_frame_count	src/external/mp3lib.h	/^DRMP3_API drmp3_uint64 drmp3_get_pcm_frame_count(drmp3* pMP3)$/;"	f	typeref:typename:DRMP3_API drmp3_uint64
drmp3_have_simd	src/external/mp3lib.h	/^static int drmp3_have_simd(void)$/;"	f	typeref:typename:int
drmp3_hdr_bitrate_kbps	src/external/mp3lib.h	/^static unsigned drmp3_hdr_bitrate_kbps(const drmp3_uint8 *h)$/;"	f	typeref:typename:unsigned
drmp3_hdr_compare	src/external/mp3lib.h	/^static int drmp3_hdr_compare(const drmp3_uint8 *h1, const drmp3_uint8 *h2)$/;"	f	typeref:typename:int
drmp3_hdr_frame_bytes	src/external/mp3lib.h	/^static int drmp3_hdr_frame_bytes(const drmp3_uint8 *h, int free_format_size)$/;"	f	typeref:typename:int
drmp3_hdr_frame_samples	src/external/mp3lib.h	/^static unsigned drmp3_hdr_frame_samples(const drmp3_uint8 *h)$/;"	f	typeref:typename:unsigned
drmp3_hdr_padding	src/external/mp3lib.h	/^static int drmp3_hdr_padding(const drmp3_uint8 *h)$/;"	f	typeref:typename:int
drmp3_hdr_sample_rate_hz	src/external/mp3lib.h	/^static unsigned drmp3_hdr_sample_rate_hz(const drmp3_uint8 *h)$/;"	f	typeref:typename:unsigned
drmp3_hdr_valid	src/external/mp3lib.h	/^static int drmp3_hdr_valid(const drmp3_uint8 *h)$/;"	f	typeref:typename:int
drmp3_init	src/external/mp3lib.h	/^DRMP3_API drmp3_bool32 drmp3_init(drmp3* pMP3, drmp3_read_proc onRead, drmp3_seek_proc onSeek, v/;"	f	typeref:typename:DRMP3_API drmp3_bool32
drmp3_init_file	src/external/mp3lib.h	/^DRMP3_API drmp3_bool32 drmp3_init_file(drmp3* pMP3, const char* pFilePath, const drmp3_allocatio/;"	f	typeref:typename:DRMP3_API drmp3_bool32
drmp3_init_file_w	src/external/mp3lib.h	/^DRMP3_API drmp3_bool32 drmp3_init_file_w(drmp3* pMP3, const wchar_t* pFilePath, const drmp3_allo/;"	f	typeref:typename:DRMP3_API drmp3_bool32
drmp3_init_internal	src/external/mp3lib.h	/^static drmp3_bool32 drmp3_init_internal(drmp3* pMP3, drmp3_read_proc onRead, drmp3_seek_proc onS/;"	f	typeref:typename:drmp3_bool32
drmp3_init_memory	src/external/mp3lib.h	/^DRMP3_API drmp3_bool32 drmp3_init_memory(drmp3* pMP3, const void* pData, size_t dataSize, const /;"	f	typeref:typename:DRMP3_API drmp3_bool32
drmp3_int16	src/external/mp3lib.h	/^typedef   signed short          drmp3_int16;$/;"	t	typeref:typename:signed short
drmp3_int32	src/external/mp3lib.h	/^typedef   signed int            drmp3_int32;$/;"	t	typeref:typename:signed int
drmp3_int64	src/external/mp3lib.h	/^    typedef   signed __int64    drmp3_int64;$/;"	t	typeref:typename:signed __int64
drmp3_int64	src/external/mp3lib.h	/^    typedef   signed long long  drmp3_int64;$/;"	t	typeref:typename:signed long long
drmp3_int8	src/external/mp3lib.h	/^typedef   signed char           drmp3_int8;$/;"	t	typeref:typename:signed char
drmp3_malloc	src/external/mp3lib.h	/^DRMP3_API void* drmp3_malloc(size_t sz, const drmp3_allocation_callbacks* pAllocationCallbacks)$/;"	f	typeref:typename:DRMP3_API void *
drmp3_mix_f32	src/external/mp3lib.h	/^static DRMP3_INLINE float drmp3_mix_f32(float x, float y, float a)$/;"	f	typeref:typename:DRMP3_INLINE float
drmp3_mix_f32_fast	src/external/mp3lib.h	/^static DRMP3_INLINE float drmp3_mix_f32_fast(float x, float y, float a)$/;"	f	typeref:typename:DRMP3_INLINE float
drmp3_open_and_read_pcm_frames_f32	src/external/mp3lib.h	/^DRMP3_API float* drmp3_open_and_read_pcm_frames_f32(drmp3_read_proc onRead, drmp3_seek_proc onSe/;"	f	typeref:typename:DRMP3_API float *
drmp3_open_and_read_pcm_frames_s16	src/external/mp3lib.h	/^DRMP3_API drmp3_int16* drmp3_open_and_read_pcm_frames_s16(drmp3_read_proc onRead, drmp3_seek_pro/;"	f	typeref:typename:DRMP3_API drmp3_int16 *
drmp3_open_file_and_read_pcm_frames_f32	src/external/mp3lib.h	/^DRMP3_API float* drmp3_open_file_and_read_pcm_frames_f32(const char* filePath, drmp3_config* pCo/;"	f	typeref:typename:DRMP3_API float *
drmp3_open_file_and_read_pcm_frames_s16	src/external/mp3lib.h	/^DRMP3_API drmp3_int16* drmp3_open_file_and_read_pcm_frames_s16(const char* filePath, drmp3_confi/;"	f	typeref:typename:DRMP3_API drmp3_int16 *
drmp3_open_memory_and_read_pcm_frames_f32	src/external/mp3lib.h	/^DRMP3_API float* drmp3_open_memory_and_read_pcm_frames_f32(const void* pData, size_t dataSize, d/;"	f	typeref:typename:DRMP3_API float *
drmp3_open_memory_and_read_pcm_frames_s16	src/external/mp3lib.h	/^DRMP3_API drmp3_int16* drmp3_open_memory_and_read_pcm_frames_s16(const void* pData, size_t dataS/;"	f	typeref:typename:DRMP3_API drmp3_int16 *
drmp3_read_pcm_frames_f32	src/external/mp3lib.h	/^DRMP3_API drmp3_uint64 drmp3_read_pcm_frames_f32(drmp3* pMP3, drmp3_uint64 framesToRead, float* /;"	f	typeref:typename:DRMP3_API drmp3_uint64
drmp3_read_pcm_frames_raw	src/external/mp3lib.h	/^static drmp3_uint64 drmp3_read_pcm_frames_raw(drmp3* pMP3, drmp3_uint64 framesToRead, void* pBuf/;"	f	typeref:typename:drmp3_uint64
drmp3_read_pcm_frames_s16	src/external/mp3lib.h	/^DRMP3_API drmp3_uint64 drmp3_read_pcm_frames_s16(drmp3* pMP3, drmp3_uint64 framesToRead, drmp3_i/;"	f	typeref:typename:DRMP3_API drmp3_uint64
drmp3_read_proc	src/external/mp3lib.h	/^typedef size_t (* drmp3_read_proc)(void* pUserData, void* pBufferOut, size_t bytesToRead);$/;"	t	typeref:typename:size_t (*)(void * pUserData,void * pBufferOut,size_t bytesToRead)
drmp3_reset	src/external/mp3lib.h	/^static void drmp3_reset(drmp3* pMP3)$/;"	f	typeref:typename:void
drmp3_result	src/external/mp3lib.h	/^typedef drmp3_int32 drmp3_result;$/;"	t	typeref:typename:drmp3_int32
drmp3_result_from_errno	src/external/mp3lib.h	/^static drmp3_result drmp3_result_from_errno(int e)$/;"	f	typeref:typename:drmp3_result
drmp3_s16_to_f32	src/external/mp3lib.h	/^static void drmp3_s16_to_f32(float* dst, const drmp3_int16* src, drmp3_uint64 sampleCount)$/;"	f	typeref:typename:void
drmp3_seek_forward_by_pcm_frames__brute_force	src/external/mp3lib.h	/^static drmp3_bool32 drmp3_seek_forward_by_pcm_frames__brute_force(drmp3* pMP3, drmp3_uint64 fram/;"	f	typeref:typename:drmp3_bool32
drmp3_seek_origin	src/external/mp3lib.h	/^} drmp3_seek_origin;$/;"	t	typeref:enum:__anon9687efeb0303
drmp3_seek_origin_current	src/external/mp3lib.h	/^    drmp3_seek_origin_current$/;"	e	enum:__anon9687efeb0303
drmp3_seek_origin_start	src/external/mp3lib.h	/^    drmp3_seek_origin_start,$/;"	e	enum:__anon9687efeb0303
drmp3_seek_point	src/external/mp3lib.h	/^} drmp3_seek_point;$/;"	t	typeref:struct:__anon9687efeb0408
drmp3_seek_proc	src/external/mp3lib.h	/^typedef drmp3_bool32 (* drmp3_seek_proc)(void* pUserData, int offset, drmp3_seek_origin origin);$/;"	t	typeref:typename:drmp3_bool32 (*)(void * pUserData,int offset,drmp3_seek_origin origin)
drmp3_seek_to_pcm_frame	src/external/mp3lib.h	/^DRMP3_API drmp3_bool32 drmp3_seek_to_pcm_frame(drmp3* pMP3, drmp3_uint64 frameIndex)$/;"	f	typeref:typename:DRMP3_API drmp3_bool32
drmp3_seek_to_pcm_frame__brute_force	src/external/mp3lib.h	/^static drmp3_bool32 drmp3_seek_to_pcm_frame__brute_force(drmp3* pMP3, drmp3_uint64 frameIndex)$/;"	f	typeref:typename:drmp3_bool32
drmp3_seek_to_pcm_frame__seek_table	src/external/mp3lib.h	/^static drmp3_bool32 drmp3_seek_to_pcm_frame__seek_table(drmp3* pMP3, drmp3_uint64 frameIndex)$/;"	f	typeref:typename:drmp3_bool32
drmp3_seek_to_start_of_stream	src/external/mp3lib.h	/^static drmp3_bool32 drmp3_seek_to_start_of_stream(drmp3* pMP3)$/;"	f	typeref:typename:drmp3_bool32
drmp3_uint16	src/external/mp3lib.h	/^typedef unsigned short          drmp3_uint16;$/;"	t	typeref:typename:unsigned short
drmp3_uint32	src/external/mp3lib.h	/^typedef unsigned int            drmp3_uint32;$/;"	t	typeref:typename:unsigned int
drmp3_uint64	src/external/mp3lib.h	/^    typedef unsigned __int64    drmp3_uint64;$/;"	t	typeref:typename:unsigned __int64
drmp3_uint64	src/external/mp3lib.h	/^    typedef unsigned long long  drmp3_uint64;$/;"	t	typeref:typename:unsigned long long
drmp3_uint8	src/external/mp3lib.h	/^typedef unsigned char           drmp3_uint8;$/;"	t	typeref:typename:unsigned char
drmp3_uintptr	src/external/mp3lib.h	/^    typedef drmp3_uint32        drmp3_uintptr;$/;"	t	typeref:typename:drmp3_uint32
drmp3_uintptr	src/external/mp3lib.h	/^    typedef drmp3_uint64        drmp3_uintptr;$/;"	t	typeref:typename:drmp3_uint64
drmp3_uninit	src/external/mp3lib.h	/^DRMP3_API void drmp3_uninit(drmp3* pMP3)$/;"	f	typeref:typename:DRMP3_API void
drmp3_version	src/external/mp3lib.h	/^DRMP3_API void drmp3_version(drmp3_uint32* pMajor, drmp3_uint32* pMinor, drmp3_uint32* pRevision/;"	f	typeref:typename:DRMP3_API void
drmp3_version_string	src/external/mp3lib.h	/^DRMP3_API const char* drmp3_version_string(void)$/;"	f	typeref:typename:DRMP3_API const char *
drmp3_wfopen	src/external/mp3lib.h	/^static drmp3_result drmp3_wfopen(FILE** ppFile, const wchar_t* pFilePath, const wchar_t* pOpenMo/;"	f	typeref:typename:drmp3_result
drmp3d_DCT_II	src/external/mp3lib.h	/^static void drmp3d_DCT_II(float *grbuf, int n)$/;"	f	typeref:typename:void
drmp3d_find_frame	src/external/mp3lib.h	/^static int drmp3d_find_frame(const drmp3_uint8 *mp3, int mp3_bytes, int *free_format_bytes, int /;"	f	typeref:typename:int
drmp3d_match_frame	src/external/mp3lib.h	/^static int drmp3d_match_frame(const drmp3_uint8 *hdr, int mp3_bytes, int frame_bytes)$/;"	f	typeref:typename:int
drmp3d_sample_t	src/external/mp3lib.h	/^typedef drmp3_int16 drmp3d_sample_t;$/;"	t	typeref:typename:drmp3_int16
drmp3d_sample_t	src/external/mp3lib.h	/^typedef float drmp3d_sample_t;$/;"	t	typeref:typename:float
drmp3d_scale_pcm	src/external/mp3lib.h	/^static drmp3_int16 drmp3d_scale_pcm(float sample)$/;"	f	typeref:typename:drmp3_int16
drmp3d_scale_pcm	src/external/mp3lib.h	/^static float drmp3d_scale_pcm(float sample)$/;"	f	typeref:typename:float
drmp3d_synth	src/external/mp3lib.h	/^static void drmp3d_synth(float *xl, drmp3d_sample_t *dstl, int nch, float *lins)$/;"	f	typeref:typename:void
drmp3d_synth_granule	src/external/mp3lib.h	/^static void drmp3d_synth_granule(float *qmf_state, float *grbuf, int nbands, int nch, drmp3d_sam/;"	f	typeref:typename:void
drmp3d_synth_pair	src/external/mp3lib.h	/^static void drmp3d_synth_pair(drmp3d_sample_t *pcm, int nch, const float *z)$/;"	f	typeref:typename:void
drmp3dec	src/external/mp3lib.h	/^} drmp3dec;$/;"	t	typeref:struct:__anon9687efeb0208
drmp3dec_decode_frame	src/external/mp3lib.h	/^DRMP3_API int drmp3dec_decode_frame(drmp3dec *dec, const drmp3_uint8 *mp3, int mp3_bytes, void */;"	f	typeref:typename:DRMP3_API int
drmp3dec_f32_to_s16	src/external/mp3lib.h	/^DRMP3_API void drmp3dec_f32_to_s16(const float *in, drmp3_int16 *out, size_t num_samples)$/;"	f	typeref:typename:DRMP3_API void
drmp3dec_frame_info	src/external/mp3lib.h	/^} drmp3dec_frame_info;$/;"	t	typeref:struct:__anon9687efeb0108
drmp3dec_init	src/external/mp3lib.h	/^DRMP3_API void drmp3dec_init(drmp3dec *dec)$/;"	f	typeref:typename:DRMP3_API void
drmp3dec_scratch	src/external/mp3lib.h	/^} drmp3dec_scratch;$/;"	t	typeref:struct:__anon9687efeb0d08
dx	src/external/stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
e_font	src/draw.h	/^enum e_font$/;"	g
e_font_big	src/draw.h	/^	e_font_big,$/;"	e	enum:e_font
e_font_count	src/draw.h	/^	e_font_count,$/;"	e	enum:e_font
e_font_medium	src/draw.h	/^	e_font_medium,$/;"	e	enum:e_font
e_font_small	src/draw.h	/^	e_font_small,$/;"	e	enum:e_font
e_layer	src/draw.h	/^enum e_layer$/;"	g
e_layer_base	src/draw.h	/^	e_layer_base,$/;"	e	enum:e_layer
e_string_input_result	src/ui.h	/^enum e_string_input_result$/;"	g
e_string_input_result_cancel	src/ui.h	/^	e_string_input_result_cancel,$/;"	e	enum:e_string_input_result
e_string_input_result_none	src/ui.h	/^	e_string_input_result_none,$/;"	e	enum:e_string_input_result
e_string_input_result_submit	src/ui.h	/^	e_string_input_result_submit,$/;"	e	enum:e_string_input_result
eflags	src/external/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
elements	src/main.h	/^	T* elements;$/;"	m	struct:s_dynamic_array	typeref:typename:T *
end	build.bat	/^:end$/;"	l
eob_run	src/external/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
eof	src/external/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end o/;"	m	struct:__anon11d2a80f0208	typeref:typename:int (*)(void * user)
epsilon	src/math.h	/^global constexpr float epsilon = 0.000001f;$/;"	v	typeref:typename:global float
equal	src/external/stb_truetype.h	/^static int equal(float *a, float *b)$/;"	f	typeref:typename:int
expanded	src/external/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon11d2a80f0e08	typeref:typename:stbi_uc *
extra_read	src/external/stb_image.h	/^   int extra_read;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:int
ey	src/external/stb_truetype.h	/^   float ey;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
fast	src/external/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon11d2a80f0b08	typeref:typename:stbi__uint16[]
fast	src/external/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon11d2a80f0708	typeref:typename:stbi_uc[]
fast_ac	src/external/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon11d2a80f0808	typeref:typename:stbi__int16[4][]
fdselect	src/external/stb_truetype.h	/^   stbtt__buf fdselect;               \/\/ map from glyph to fontdict$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
fdx	src/external/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
fdy	src/external/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
files	build.bat	/^set files=..\\src\\main.cpp$/;"	v
first	src/external/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon11d2a80f1208	typeref:typename:stbi_uc
first_free	src/external/stb_truetype.h	/^   void   *first_free;$/;"	m	struct:stbtt__hheap	typeref:typename:void *
first_row_filter	src/external/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v	typeref:typename:stbi_uc[5]
first_unicode_codepoint_in_range	src/external/stb_truetype.h	/^   int first_unicode_codepoint_in_range;  \/\/ if non-zero, then the chars are continuous, and t/;"	m	struct:__anon6b1d216e0508	typeref:typename:int
first_x	src/external/stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:float
first_y	src/external/stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:float
firstcode	src/external/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon11d2a80f0b08	typeref:typename:stbi__uint16[16]
firstsymbol	src/external/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon11d2a80f0b08	typeref:typename:stbi__uint16[16]
flags	src/external/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
flip_x	src/shader_shared.h	/^	shader_bool flip_x;$/;"	m	struct:s_transform	typeref:typename:shader_bool
floats_equal	src/math.h	/^func constexpr b8 floats_equal(float a, float b)$/;"	f	typeref:typename:func b8
font_size	src/external/stb_truetype.h	/^   float font_size;$/;"	m	struct:__anon6b1d216e0508	typeref:typename:float
fontdicts	src/external/stb_truetype.h	/^   stbtt__buf fontdicts;              \/\/ array of font dicts$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
fontstart	src/external/stb_truetype.h	/^   int              fontstart;         \/\/ offset of start of font$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
frame_bytes	src/external/mp3lib.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon9687efeb0108	typeref:typename:int
free	src/main.h	/^	void free()$/;"	f	struct:s_dynamic_array	typeref:typename:void
free_format_bytes	src/external/mp3lib.h	/^    int reserv, free_format_bytes;$/;"	m	struct:__anon9687efeb0208	typeref:typename:int
full_path	src/main.h	/^	s_str_sbuilder<MAX_PATH> full_path;$/;"	m	struct:s_file_info	typeref:typename:s_str_sbuilder<MAX_PATH>
fx	src/external/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
g_arena	src/main.cpp	/^global s_lin_arena g_arena = zero;$/;"	v	typeref:typename:global s_lin_arena
g_drmp3_pow43	src/external/mp3lib.h	/^static const float g_drmp3_pow43[129 + 16] = {$/;"	v	typeref:typename:const float[]
g_font_arr	src/main.cpp	/^global s_carray<s_font, e_font_count> g_font_arr;$/;"	v	typeref:typename:global s_carray<s_font,e_font_count>
g_frame_arena	src/main.cpp	/^global s_lin_arena g_frame_arena = zero;$/;"	v	typeref:typename:global s_lin_arena
g_height	src/main.cpp	/^global int g_height = 0;$/;"	v	typeref:typename:global int
g_input	src/main.cpp	/^global s_input g_input = zero;$/;"	v	typeref:typename:global s_input
g_width	src/main.cpp	/^global int g_width = 0;$/;"	v	typeref:typename:m_gl_funcs global int
g_window_center	src/main.cpp	/^global s_v2 g_window_center = g_window_size * 0.5f;$/;"	v	typeref:typename:global s_v2
g_window_size	src/main.cpp	/^global s_v2 g_window_size = c_base_res;$/;"	v	typeref:typename:global s_v2
get	src/hashtable.cpp	/^T* s_hashtable<T>::get(char* key)$/;"	f	class:s_hashtable	typeref:typename:T *
get_all_files_in_directory	src/main.h	/^func s_dynamic_array<s_file_info> get_all_files_in_directory(char* directory_path, s_lin_arena* /;"	f	typeref:typename:func s_dynamic_array<s_file_info>
get_all_files_in_directory_	src/main.h	/^func void get_all_files_in_directory_(s_dynamic_array<s_file_info>* dynamic_arr, char* directory/;"	f	typeref:typename:func void
get_char_event	src/main.cpp	/^func s_char_event get_char_event()$/;"	f	typeref:typename:func s_char_event
get_text_size	src/main.cpp	/^func s_v2 get_text_size(char* text, e_font font_id)$/;"	f	typeref:typename:func s_v2
get_text_size_with_count	src/main.cpp	/^func s_v2 get_text_size_with_count(char* text, e_font font_id, int count)$/;"	f	typeref:typename:func s_v2
gl_debug_callback	src/main.cpp	/^void gl_debug_callback(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, c/;"	f	typeref:typename:void
global_gain	src/external/mp3lib.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
glyf	src/external/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
glyph1	src/external/stb_truetype.h	/^   int glyph1; \/\/ use stbtt_FindGlyphIndex$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
glyph2	src/external/stb_truetype.h	/^   int glyph2;$/;"	m	struct:stbtt_kerningentry	typeref:typename:int
glyph_arr	src/main.h	/^	s_carray<s_glyph, 1024> glyph_arr;$/;"	m	struct:s_font	typeref:typename:s_carray<s_glyph,1024>
gpos	src/external/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
gr_info	src/external/mp3lib.h	/^    drmp3_L3_gr_info gr_info[4];$/;"	m	struct:__anon9687efeb0d08	typeref:typename:drmp3_L3_gr_info[4]
grbuf	src/external/mp3lib.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2*32];$/;"	m	struct:__anon9687efeb0d08	typeref:typename:float[2][576]
gsubrs	src/external/stb_truetype.h	/^   stbtt__buf gsubrs;                 \/\/ global charstring subroutines index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
h	src/external/stb_image.h	/^      int h,v;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
h	src/external/stb_image.h	/^   int w,h;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
h	src/external/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
h	src/external/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon6b1d216e0808	typeref:typename:int
h2	src/external/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
h_oversample	src/external/stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon6b1d216e0508	typeref:typename:unsigned char
h_oversample	src/external/stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned int
ha	src/external/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
handle_string_input	src/ui.cpp	/^func e_string_input_result handle_string_input(s_input_str<max_chars>* input)$/;"	f	typeref:typename:func e_string_input_result
handle_ui_interaction	src/ui.cpp	/^func b8 handle_ui_interaction(s_ui_id uid, s_v2 pos, s_v2 size, b8 active_persists_across_frames/;"	f	typeref:typename:func b8
handle_ui_lerping	src/ui.cpp	/^func void handle_ui_lerping(u32 id, b8 clicked, s_v2 in_size, s_v4 in_color, s_v2* out_size, s_v/;"	f	typeref:typename:func void
hash	src/hashtable.cpp	/^func u32 hash(char* str)$/;"	f	typeref:typename:func u32
hd	src/external/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
head	src/external/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
head	src/external/stb_truetype.h	/^   struct stbtt__hheap_chunk *head;$/;"	m	struct:stbtt__hheap	typeref:struct:stbtt__hheap_chunk *
header	src/external/mp3lib.h	/^    drmp3_uint8 header[4], reserv_buf[511];$/;"	m	struct:__anon9687efeb0208	typeref:typename:drmp3_uint8[4]
height	src/external/stb_truetype.h	/^   int   height;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
height	src/external/stb_truetype.h	/^   int width,height;$/;"	m	struct:__anon6b1d216e1108	typeref:typename:int
height	src/main.h	/^	int height;$/;"	m	struct:s_glyph	typeref:typename:int
hhea	src/external/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
history	src/external/stb_image.h	/^   stbi_uc *history;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:stbi_uc *
hmtx	src/external/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
hovered	src/ui.h	/^	b8 hovered;$/;"	m	struct:s_ui_result	typeref:typename:b8
hovered	src/ui.h	/^	s_ui_id hovered;$/;"	m	struct:s_ui	typeref:typename:s_ui_id
hovered_this_frame	src/ui.h	/^	s_ui_id hovered_this_frame;$/;"	m	struct:s_ui	typeref:typename:s_ui_id
hs	src/external/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon11d2a80f0a08	typeref:typename:int
hsz	src/external/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:int
huff_ac	src/external/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon11d2a80f0808	typeref:typename:stbi__huffman[4]
huff_dc	src/external/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon11d2a80f0808	typeref:typename:stbi__huffman[4]
hz	src/external/mp3lib.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon9687efeb0108	typeref:typename:int
id	src/external/stb_image.h	/^      int id;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
id	src/external/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
id	src/main.h	/^	u32 id;$/;"	m	struct:s_texture	typeref:typename:u32
id	src/ui.h	/^	u32 id;$/;"	m	struct:s_ui_id	typeref:typename:u32
idata	src/external/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon11d2a80f0e08	typeref:typename:stbi_uc *
idct_block_kernel	src/external/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon11d2a80f0808	typeref:typename:void (*)(stbi_uc * out,int out_stride,short data[64])
img_buffer	src/external/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:stbi_uc *
img_buffer_end	src/external/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:stbi_uc *
img_buffer_original	src/external/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:stbi_uc *
img_buffer_original_end	src/external/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:stbi_uc *
img_comp	src/external/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon11d2a80f0808	typeref:struct:__anon11d2a80f0808::__anon11d2a80f0908[4]
img_h_max	src/external/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
img_mcu_h	src/external/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
img_mcu_w	src/external/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
img_mcu_x	src/external/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
img_mcu_y	src/external/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
img_n	src/external/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:int
img_out_n	src/external/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:int
img_v_max	src/external/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
img_x	src/external/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:stbi__uint32
img_y	src/external/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:stbi__uint32
indexToLocFormat	src/external/stb_truetype.h	/^   int indexToLocFormat;              \/\/ format needed to map from glyph index to glyph$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
index_map	src/external/stb_truetype.h	/^   int index_map;                     \/\/ a cmap mapping for our chosen character encoding$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
info	src/main.h	/^	s_file_info info;$/;"	m	struct:s_file_with_score	typeref:typename:s_file_info
input	src/ui.h	/^	s_str<64> input;$/;"	m	struct:s_ui_data	typeref:typename:s_str<64>
input	src/ui.h	/^	s_str<64> input;$/;"	m	struct:s_ui_result	typeref:typename:s_str<64>
input_cursor	src/ui.h	/^	int input_cursor = -1;$/;"	m	struct:s_ui_data	typeref:typename:int
invert	src/external/stb_truetype.h	/^   int invert;$/;"	m	struct:stbtt__edge	typeref:typename:int
io	src/external/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:stbi_io_callbacks
io_user_data	src/external/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:void *
is_down	src/main.h	/^	b8 is_down;$/;"	m	struct:s_key	typeref:typename:b8
is_down	src/main.h	/^	b8 is_down;$/;"	m	struct:s_stored_input	typeref:typename:b8
is_key_down	src/main.cpp	/^func b8 is_key_down(int key)$/;"	f	typeref:typename:func b8
is_key_pressed	src/main.cpp	/^func b8 is_key_pressed(int key)$/;"	f	typeref:typename:func b8
is_key_released	src/main.cpp	/^func b8 is_key_released(int key)$/;"	f	typeref:typename:func b8
is_key_up	src/main.cpp	/^func b8 is_key_up(int key)$/;"	f	typeref:typename:func b8
is_symbol	src/main.h	/^	b8 is_symbol;$/;"	m	struct:s_char_event	typeref:typename:b8
ist_pos	src/external/mp3lib.h	/^    drmp3_uint8 ist_pos[2][39];$/;"	m	struct:__anon9687efeb0d08	typeref:typename:drmp3_uint8[2][39]
jfif	src/external/stb_image.h	/^   int            jfif;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
kern	src/external/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
key	src/main.h	/^	int key;$/;"	m	struct:s_stored_input	typeref:typename:int
key_0	src/config.h	/^global constexpr int key_0 = 0x30;$/;"	v	typeref:typename:global int
key_1	src/config.h	/^global constexpr int key_1 = 0x31;$/;"	v	typeref:typename:global int
key_2	src/config.h	/^global constexpr int key_2 = 0x32;$/;"	v	typeref:typename:global int
key_3	src/config.h	/^global constexpr int key_3 = 0x33;$/;"	v	typeref:typename:global int
key_4	src/config.h	/^global constexpr int key_4 = 0x34;$/;"	v	typeref:typename:global int
key_5	src/config.h	/^global constexpr int key_5 = 0x35;$/;"	v	typeref:typename:global int
key_6	src/config.h	/^global constexpr int key_6 = 0x36;$/;"	v	typeref:typename:global int
key_7	src/config.h	/^global constexpr int key_7 = 0x37;$/;"	v	typeref:typename:global int
key_8	src/config.h	/^global constexpr int key_8 = 0x38;$/;"	v	typeref:typename:global int
key_9	src/config.h	/^global constexpr int key_9 = 0x39;$/;"	v	typeref:typename:global int
key_a	src/config.h	/^global constexpr int key_a = 0x41;$/;"	v	typeref:typename:global int
key_add	src/config.h	/^global constexpr int key_add = 0x6B;$/;"	v	typeref:typename:global int
key_alt	src/config.h	/^global constexpr int key_alt = 0x12;$/;"	v	typeref:typename:global int
key_arr	src/hashtable.h	/^	s_str<16> key_arr[c_max_hashtable_elements];$/;"	m	struct:s_hashtable	typeref:typename:s_str<16>[]
key_b	src/config.h	/^global constexpr int key_b = 0x42;$/;"	v	typeref:typename:global int
key_backspace	src/config.h	/^global constexpr int key_backspace = 0x08;$/;"	v	typeref:typename:global int
key_c	src/config.h	/^global constexpr int key_c = 0x43;$/;"	v	typeref:typename:global int
key_d	src/config.h	/^global constexpr int key_d = 0x44;$/;"	v	typeref:typename:global int
key_delete	src/config.h	/^global constexpr int key_delete = 0x2E;$/;"	v	typeref:typename:global int
key_down	src/config.h	/^global constexpr int key_down = 0x28;$/;"	v	typeref:typename:global int
key_e	src/config.h	/^global constexpr int key_e = 0x45;$/;"	v	typeref:typename:global int
key_end	src/config.h	/^global constexpr int key_end = 0x23;$/;"	v	typeref:typename:global int
key_enter	src/config.h	/^global constexpr int key_enter = 0x0D;$/;"	v	typeref:typename:global int
key_escape	src/config.h	/^global constexpr int key_escape = 0x1B;$/;"	v	typeref:typename:global int
key_f	src/config.h	/^global constexpr int key_f = 0x46;$/;"	v	typeref:typename:global int
key_f1	src/config.h	/^global constexpr int key_f1 = 0x70;$/;"	v	typeref:typename:global int
key_f10	src/config.h	/^global constexpr int key_f10 = 0x79;$/;"	v	typeref:typename:global int
key_f11	src/config.h	/^global constexpr int key_f11 = 0x7A;$/;"	v	typeref:typename:global int
key_f12	src/config.h	/^global constexpr int key_f12 = 0x7B;$/;"	v	typeref:typename:global int
key_f2	src/config.h	/^global constexpr int key_f2 = 0x71;$/;"	v	typeref:typename:global int
key_f3	src/config.h	/^global constexpr int key_f3 = 0x72;$/;"	v	typeref:typename:global int
key_f4	src/config.h	/^global constexpr int key_f4 = 0x73;$/;"	v	typeref:typename:global int
key_f5	src/config.h	/^global constexpr int key_f5 = 0x74;$/;"	v	typeref:typename:global int
key_f6	src/config.h	/^global constexpr int key_f6 = 0x75;$/;"	v	typeref:typename:global int
key_f7	src/config.h	/^global constexpr int key_f7 = 0x76;$/;"	v	typeref:typename:global int
key_f8	src/config.h	/^global constexpr int key_f8 = 0x77;$/;"	v	typeref:typename:global int
key_f9	src/config.h	/^global constexpr int key_f9 = 0x78;$/;"	v	typeref:typename:global int
key_g	src/config.h	/^global constexpr int key_g = 0x47;$/;"	v	typeref:typename:global int
key_h	src/config.h	/^global constexpr int key_h = 0x48;$/;"	v	typeref:typename:global int
key_home	src/config.h	/^global constexpr int key_home = 0x24;$/;"	v	typeref:typename:global int
key_i	src/config.h	/^global constexpr int key_i = 0x49;$/;"	v	typeref:typename:global int
key_j	src/config.h	/^global constexpr int key_j = 0x4A;$/;"	v	typeref:typename:global int
key_k	src/config.h	/^global constexpr int key_k = 0x4B;$/;"	v	typeref:typename:global int
key_l	src/config.h	/^global constexpr int key_l = 0x4C;$/;"	v	typeref:typename:global int
key_left	src/config.h	/^global constexpr int key_left = 0x25;$/;"	v	typeref:typename:global int
key_left_control	src/config.h	/^global constexpr int key_left_control = 0xA2;$/;"	v	typeref:typename:global int
key_left_shift	src/config.h	/^global constexpr int key_left_shift = 0xA0;$/;"	v	typeref:typename:global int
key_m	src/config.h	/^global constexpr int key_m = 0x4D;$/;"	v	typeref:typename:global int
key_n	src/config.h	/^global constexpr int key_n = 0x4E;$/;"	v	typeref:typename:global int
key_o	src/config.h	/^global constexpr int key_o = 0x4F;$/;"	v	typeref:typename:global int
key_p	src/config.h	/^global constexpr int key_p = 0x50;$/;"	v	typeref:typename:global int
key_q	src/config.h	/^global constexpr int key_q = 0x51;$/;"	v	typeref:typename:global int
key_r	src/config.h	/^global constexpr int key_r = 0x52;$/;"	v	typeref:typename:global int
key_right	src/config.h	/^global constexpr int key_right = 0x27;$/;"	v	typeref:typename:global int
key_right_control	src/config.h	/^global constexpr int key_right_control = 0xA3;$/;"	v	typeref:typename:global int
key_right_shift	src/config.h	/^global constexpr int key_right_shift = 0xA1;$/;"	v	typeref:typename:global int
key_s	src/config.h	/^global constexpr int key_s = 0x53;$/;"	v	typeref:typename:global int
key_space	src/config.h	/^global constexpr int key_space = 0x20;$/;"	v	typeref:typename:global int
key_subtract	src/config.h	/^global constexpr int key_subtract = 0x6D;$/;"	v	typeref:typename:global int
key_t	src/config.h	/^global constexpr int key_t = 0x54;$/;"	v	typeref:typename:global int
key_tab	src/config.h	/^global constexpr int key_tab = 0x09;$/;"	v	typeref:typename:global int
key_u	src/config.h	/^global constexpr int key_u = 0x55;$/;"	v	typeref:typename:global int
key_up	src/config.h	/^global constexpr int key_up = 0x26;$/;"	v	typeref:typename:global int
key_v	src/config.h	/^global constexpr int key_v = 0x56;$/;"	v	typeref:typename:global int
key_w	src/config.h	/^global constexpr int key_w = 0x57;$/;"	v	typeref:typename:global int
key_x	src/config.h	/^global constexpr int key_x = 0x58;$/;"	v	typeref:typename:global int
key_y	src/config.h	/^global constexpr int key_y = 0x59;$/;"	v	typeref:typename:global int
key_z	src/config.h	/^global constexpr int key_z = 0x5A;$/;"	v	typeref:typename:global int
keys	src/main.h	/^	s_key keys[c_max_keys];$/;"	m	struct:s_input	typeref:typename:s_key[]
khronos_boolean_enum_t	src/external/KHR/khrplatform.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anon81f5a0020103
khronos_float_t	src/external/KHR/khrplatform.h	/^typedef          float         khronos_float_t;$/;"	t	typeref:typename:float
khronos_int16_t	src/external/KHR/khrplatform.h	/^typedef signed   short int     khronos_int16_t;$/;"	t	typeref:typename:signed short int
khronos_int32_t	src/external/KHR/khrplatform.h	/^typedef __int32                 khronos_int32_t;$/;"	t	typeref:typename:__int32
khronos_int32_t	src/external/KHR/khrplatform.h	/^typedef int                     khronos_int32_t;$/;"	t	typeref:typename:int
khronos_int32_t	src/external/KHR/khrplatform.h	/^typedef int32_t                 khronos_int32_t;$/;"	t	typeref:typename:int32_t
khronos_int64_t	src/external/KHR/khrplatform.h	/^typedef __int64                 khronos_int64_t;$/;"	t	typeref:typename:__int64
khronos_int64_t	src/external/KHR/khrplatform.h	/^typedef int64_t                 khronos_int64_t;$/;"	t	typeref:typename:int64_t
khronos_int64_t	src/external/KHR/khrplatform.h	/^typedef long int                khronos_int64_t;$/;"	t	typeref:typename:long int
khronos_int64_t	src/external/KHR/khrplatform.h	/^typedef long long int           khronos_int64_t;$/;"	t	typeref:typename:long long int
khronos_int8_t	src/external/KHR/khrplatform.h	/^typedef signed   char          khronos_int8_t;$/;"	t	typeref:typename:signed char
khronos_intptr_t	src/external/KHR/khrplatform.h	/^typedef intptr_t               khronos_intptr_t;$/;"	t	typeref:typename:intptr_t
khronos_intptr_t	src/external/KHR/khrplatform.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t	typeref:typename:signed long int
khronos_intptr_t	src/external/KHR/khrplatform.h	/^typedef signed   long long int khronos_intptr_t;$/;"	t	typeref:typename:signed long long int
khronos_ssize_t	src/external/KHR/khrplatform.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t	typeref:typename:signed long int
khronos_ssize_t	src/external/KHR/khrplatform.h	/^typedef signed   long long int khronos_ssize_t;$/;"	t	typeref:typename:signed long long int
khronos_stime_nanoseconds_t	src/external/KHR/khrplatform.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t	typeref:typename:khronos_int64_t
khronos_uint16_t	src/external/KHR/khrplatform.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t	typeref:typename:unsigned short int
khronos_uint32_t	src/external/KHR/khrplatform.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t	typeref:typename:uint32_t
khronos_uint32_t	src/external/KHR/khrplatform.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t	typeref:typename:unsigned __int32
khronos_uint32_t	src/external/KHR/khrplatform.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t	typeref:typename:unsigned int
khronos_uint64_t	src/external/KHR/khrplatform.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t	typeref:typename:uint64_t
khronos_uint64_t	src/external/KHR/khrplatform.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t	typeref:typename:unsigned __int64
khronos_uint64_t	src/external/KHR/khrplatform.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t	typeref:typename:unsigned long int
khronos_uint64_t	src/external/KHR/khrplatform.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t	typeref:typename:unsigned long long int
khronos_uint8_t	src/external/KHR/khrplatform.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t	typeref:typename:unsigned char
khronos_uintptr_t	src/external/KHR/khrplatform.h	/^typedef uintptr_t              khronos_uintptr_t;$/;"	t	typeref:typename:uintptr_t
khronos_uintptr_t	src/external/KHR/khrplatform.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t	typeref:typename:unsigned long int
khronos_uintptr_t	src/external/KHR/khrplatform.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	t	typeref:typename:unsigned long long int
khronos_usize_t	src/external/KHR/khrplatform.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t	typeref:typename:unsigned long int
khronos_usize_t	src/external/KHR/khrplatform.h	/^typedef unsigned long long int khronos_usize_t;$/;"	t	typeref:typename:unsigned long long int
khronos_utime_nanoseconds_t	src/external/KHR/khrplatform.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t	typeref:typename:khronos_uint64_t
last_input_time	src/ui.h	/^	float last_input_time;$/;"	m	struct:s_input_str	typeref:typename:float
last_input_time	src/ui.h	/^	float last_input_time;$/;"	m	struct:s_ui_data	typeref:typename:float
layer	src/external/mp3lib.h	/^    int frame_bytes, channels, hz, layer, bitrate_kbps;$/;"	m	struct:__anon9687efeb0108	typeref:typename:int
layer	src/shader_shared.h	/^	shader_int layer;$/;"	m	struct:s_transform	typeref:typename:shader_int
layer	src/ui.h	/^	int layer;$/;"	m	struct:s_ui_id	typeref:typename:int
layer_arr	src/ui.h	/^	s_sarray<s_ui_layer, 16> layer_arr;$/;"	m	struct:s_ui	typeref:typename:s_sarray<s_ui_layer,16>
left_button	src/config.h	/^global constexpr int left_button = 1000;$/;"	v	typeref:typename:global int
len	src/ui.h	/^	int len;$/;"	m	struct:s_input_str	typeref:typename:int
length	src/external/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon11d2a80f0d08	typeref:typename:stbi__uint32
levenshtein	src/main.cpp	/^func int levenshtein(char *s1, char *s2, s_lin_arena* arena)$/;"	f	typeref:typename:func int
lflags	src/external/stb_image.h	/^   int lflags;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
limit	src/external/mp3lib.h	/^    int pos, limit;$/;"	m	struct:__anon9687efeb0908	typeref:typename:int
line0	src/external/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon11d2a80f0a08	typeref:typename:stbi_uc *
line1	src/external/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon11d2a80f0a08	typeref:typename:stbi_uc *
line_gap	src/main.h	/^	int line_gap;$/;"	m	struct:s_font	typeref:typename:int
line_size	src/external/stb_image.h	/^   int line_size;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
linebuf	src/external/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:stbi_uc *
linker	build.bat	/^set linker=user32.lib Shell32.lib Winhttp.lib ole32.lib Ws2_32.lib Gdi32.lib Opengl32.lib Shlwap/;"	v
load_font	src/main.cpp	/^func s_font load_font(char* path, float font_size, s_lin_arena* arena)$/;"	f	typeref:typename:func s_font
load_gl_func	src/main.cpp	/^func PROC load_gl_func(char* name)$/;"	f	typeref:typename:func PROC
load_jpeg_image	src/external/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
load_texture_from_data	src/main.cpp	/^func s_texture load_texture_from_data(void* data, int width, int height, u32 filtering)$/;"	f	typeref:typename:func s_texture
load_texture_from_file	src/main.cpp	/^func s_texture load_texture_from_file(char* path, u32 filtering)$/;"	f	typeref:typename:func s_texture
loca	src/external/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
lpal	src/external/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon11d2a80f1308	typeref:typename:stbi_uc[256][4]
m_equals	src/main.cpp	/^#define m_equals(/;"	d	file:
m_equals	src/shader_shared.h	/^	#define m_equals(/;"	d
m_gl_funcs	src/main.cpp	/^#define m_gl_funcs /;"	d	file:
ma	src/external/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:unsigned int
main	src/main.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
maindata	src/external/mp3lib.h	/^    drmp3_uint8 maindata[DRMP3_MAX_BITRESERVOIR_BYTES + DRMP3_MAX_L3_FRAME_PAYLOAD_BYTES];$/;"	m	struct:__anon9687efeb0d08	typeref:typename:drmp3_uint8[]
make_input_str	src/ui.cpp	/^func s_input_str<max_chars> make_input_str()$/;"	f	typeref:typename:func s_input_str<max_chars>
marker	src/external/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon11d2a80f0808	typeref:typename:unsigned char
max_chars_in_queue	src/config.h	/^global constexpr int max_chars_in_queue = 32;$/;"	v	typeref:typename:global int
max_keys_in_queue	src/config.h	/^global constexpr int max_keys_in_queue = 32;$/;"	v	typeref:typename:global int
max_x	src/external/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
max_x	src/external/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:stbtt_int32
max_y	src/external/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
max_y	src/external/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:stbtt_int32
maxcode	src/external/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon11d2a80f0b08	typeref:typename:int[17]
maxcode	src/external/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon11d2a80f0708	typeref:typename:unsigned int[18]
mb	src/external/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:unsigned int
mdct_overlap	src/external/mp3lib.h	/^    float mdct_overlap[2][9*32], qmf_state[15*2*32];$/;"	m	struct:__anon9687efeb0208	typeref:typename:float[2][]
memory	src/external/mp3lib.h	/^    } memory;   \/* Only used for decoders that were opened against a block of memory. *\/$/;"	m	struct:__anon9687efeb0708	typeref:struct:__anon9687efeb0708::__anon9687efeb0808
messages	src/main.cpp	/^global s_sarray<s_str<600>, 4> messages;$/;"	v	typeref:typename:global s_sarray<s_str<600>,4>
mg	src/external/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:unsigned int
min_x	src/external/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:stbtt_int32
min_y	src/external/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:stbtt_int32
mix_weight	src/shader_shared.h	/^	shader_float mix_weight;$/;"	m	struct:s_transform	typeref:typename:shader_float
mixed_block_flag	src/external/mp3lib.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
mouse	src/main.cpp	/^global s_v2 mouse = zero;$/;"	v	typeref:typename:global s_v2
mp3FrameChannels	src/external/mp3lib.h	/^    drmp3_uint32 mp3FrameChannels;      \/* The number of channels in the currently loaded MP3 f/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint32
mp3FrameSampleRate	src/external/mp3lib.h	/^    drmp3_uint32 mp3FrameSampleRate;    \/* The sample rate of the currently loaded MP3 frame. I/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint32
mp3FramesToDiscard	src/external/mp3lib.h	/^    drmp3_uint16 mp3FramesToDiscard;    \/* The number of whole MP3 frames to be discarded befor/;"	m	struct:__anon9687efeb0408	typeref:typename:drmp3_uint16
mr	src/external/stb_image.h	/^   unsigned int mr,mg,mb,ma, all_a;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:unsigned int
n_long_sfb	src/external/mp3lib.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
n_short_sfb	src/external/mp3lib.h	/^    drmp3_uint8 global_gain, block_type, mixed_block_flag, n_long_sfb, n_short_sfb;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
name	src/main.h	/^	s_str_sbuilder<MAX_PATH> name;$/;"	m	struct:s_file_info	typeref:typename:s_str_sbuilder<MAX_PATH>
next	src/external/stb_truetype.h	/^   struct stbtt__active_edge *next;$/;"	m	struct:stbtt__active_edge	typeref:struct:stbtt__active_edge *
next	src/external/stb_truetype.h	/^   struct stbtt__hheap_chunk *next;$/;"	m	struct:stbtt__hheap_chunk	typeref:struct:stbtt__hheap_chunk *
nodes	src/external/stb_truetype.h	/^   void  *nodes;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
nomore	src/external/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
numGlyphs	src/external/stb_truetype.h	/^   int numGlyphs;                     \/\/ number of glyphs, needed for range checking$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
num_bits	src/external/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:int
num_channels	src/external/stb_image.h	/^   int num_channels;$/;"	m	struct:__anon11d2a80f0508	typeref:typename:int
num_chars	src/external/stb_truetype.h	/^   int num_chars;$/;"	m	struct:__anon6b1d216e0508	typeref:typename:int
num_remaining_in_head_chunk	src/external/stb_truetype.h	/^   int    num_remaining_in_head_chunk;$/;"	m	struct:stbtt__hheap	typeref:typename:int
num_vertices	src/external/stb_truetype.h	/^   int num_vertices;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:int
offset	src/external/stb_image.h	/^   int bpp, offset, hsz;$/;"	m	struct:__anon11d2a80f1008	typeref:typename:int
onFree	src/external/mp3lib.h	/^    void  (* onFree)(void* p, void* pUserData);$/;"	m	struct:__anon9687efeb0508	typeref:typename:void (*)(void * p,void * pUserData)
onMalloc	src/external/mp3lib.h	/^    void* (* onMalloc)(size_t sz, void* pUserData);$/;"	m	struct:__anon9687efeb0508	typeref:typename:void * (*)(size_t sz,void * pUserData)
onRead	src/external/mp3lib.h	/^    drmp3_read_proc onRead;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_read_proc
onRealloc	src/external/mp3lib.h	/^    void* (* onRealloc)(void* p, size_t sz, void* pUserData);$/;"	m	struct:__anon9687efeb0508	typeref:typename:void * (*)(void * p,size_t sz,void * pUserData)
onSeek	src/external/mp3lib.h	/^    drmp3_seek_proc onSeek;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_seek_proc
operator *	src/math.h	/^func s_v2 operator*(s_v2 a, float b)$/;"	f	typeref:typename:func s_v2
operator *	src/math.h	/^func s_v2 operator*(s_v2 a, s_v2 b)$/;"	f	typeref:typename:func s_v2
operator *=	src/math.h	/^func s_v2 operator*=(s_v2& a, float b)$/;"	f	typeref:typename:func s_v2
operator *=	src/math.h	/^func s_v2 operator*=(s_v2& a, s_v2 b)$/;"	f	typeref:typename:func s_v2
operator +	src/math.h	/^func s_v2 operator+(s_v2 a, s_v2 b)$/;"	f	typeref:typename:func s_v2
operator +=	src/math.h	/^func s_v2 operator+=(s_v2& a, s_v2 b)$/;"	f	typeref:typename:func s_v2
operator -	src/math.h	/^func s_v2 operator-(s_v2 a, s_v2 b)$/;"	f	typeref:typename:func s_v2
operator -=	src/math.h	/^func s_v2 operator-=(s_v2& a, s_v2 b)$/;"	f	typeref:typename:func s_v2
operator /	src/math.h	/^func s_v2 operator\/(s_v2 a, float b)$/;"	f	typeref:typename:func s_v2
operator >	src/main.h	/^	bool operator>(const s_file_with_score& right)$/;"	f	struct:s_file_with_score	typeref:typename:bool
operator []	src/main.h	/^	T& operator[](int index)$/;"	f	struct:s_dynamic_array	typeref:typename:T &
order	src/external/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int[4]
origin_offset	src/shader_shared.h	/^	shader_v2 origin_offset;$/;"	m	struct:s_transform	typeref:typename:shader_v2
out	src/external/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon11d2a80f0e08	typeref:typename:stbi_uc *
out	src/external/stb_image.h	/^   stbi_uc *out;                 \/\/ output buffer (always 4 components)$/;"	m	struct:__anon11d2a80f1308	typeref:typename:stbi_uc *
pData	src/external/mp3lib.h	/^        const drmp3_uint8* pData;$/;"	m	struct:__anon9687efeb0708::__anon9687efeb0808	typeref:typename:const drmp3_uint8 *
pData	src/external/mp3lib.h	/^    drmp3_uint8* pData;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint8 *
pSeekPoints	src/external/mp3lib.h	/^    drmp3_seek_point* pSeekPoints;      \/* NULL by default. Set with drmp3_bind_seek_table(). M/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_seek_point *
pUserData	src/external/mp3lib.h	/^    void* pUserData;$/;"	m	struct:__anon9687efeb0508	typeref:typename:void *
pUserData	src/external/mp3lib.h	/^    void* pUserData;$/;"	m	struct:__anon9687efeb0708	typeref:typename:void *
pack_info	src/external/stb_truetype.h	/^   void *pack_info;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
padding	src/external/stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon6b1d216e0708	typeref:typename:unsigned char
padding	src/external/stb_truetype.h	/^   int   padding;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
pal	src/external/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon11d2a80f1308	typeref:typename:stbi_uc[256][4]
parse	src/external/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
part_23_length	src/external/mp3lib.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint16
pcmFrameIndex	src/external/mp3lib.h	/^    drmp3_uint64 pcmFrameIndex;         \/* The index of the PCM frame this seek point targets. /;"	m	struct:__anon9687efeb0408	typeref:typename:drmp3_uint64
pcmFrameIndex	src/external/mp3lib.h	/^    drmp3_uint64 pcmFrameIndex; \/* <-- After sample rate conversion. *\/$/;"	m	struct:__anon9687efeb0e08	typeref:typename:drmp3_uint64
pcmFrames	src/external/mp3lib.h	/^    drmp3_uint8 pcmFrames[sizeof(float)*DRMP3_MAX_SAMPLES_PER_FRAME];  \/* <-- Multipled by size/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint8[]
pcmFramesConsumedInMP3Frame	src/external/mp3lib.h	/^    drmp3_uint32 pcmFramesConsumedInMP3Frame;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint32
pcmFramesRemainingInMP3Frame	src/external/mp3lib.h	/^    drmp3_uint32 pcmFramesRemainingInMP3Frame;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint32
pcmFramesToDiscard	src/external/mp3lib.h	/^    drmp3_uint16 pcmFramesToDiscard;    \/* The number of leading samples to read and discard. T/;"	m	struct:__anon9687efeb0408	typeref:typename:drmp3_uint16
pixels	src/external/stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:__anon6b1d216e0808	typeref:typename:unsigned char *
pixels	src/external/stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned char *
pos	src/external/mp3lib.h	/^    int pos, limit;$/;"	m	struct:__anon9687efeb0908	typeref:typename:int
pos	src/shader_shared.h	/^	shader_v2 pos;$/;"	m	struct:s_transform	typeref:typename:shader_v2
prefix	src/external/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon11d2a80f1208	typeref:typename:stbi__int16
preflag	src/external/mp3lib.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
pressed	src/ui.h	/^	b8 pressed;$/;"	m	struct:s_ui_result	typeref:typename:b8
pressed	src/ui.h	/^	s_ui_id pressed;$/;"	m	struct:s_ui	typeref:typename:s_ui_id
pressed_this_frame	src/ui.h	/^	s_ui_id pressed_this_frame;$/;"	m	struct:s_ui	typeref:typename:s_ui_id
progressive	src/external/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
pvertices	src/external/stb_truetype.h	/^   stbtt_vertex *pvertices;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:stbtt_vertex *
qmf_state	src/external/mp3lib.h	/^    float mdct_overlap[2][9*32], qmf_state[15*2*32];$/;"	m	struct:__anon9687efeb0208	typeref:typename:float[]
qsort_files	src/main.h	/^int qsort_files(const void* a, const void* b)$/;"	f	typeref:typename:int
ratio	src/external/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
raw_coeff	src/external/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:void *
raw_data	src/external/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:void *
rcVirtualScreen	src/external/wglext.h	/^    RECT   rcVirtualScreen;$/;"	m	struct:_GPU_DEVICE	typeref:typename:RECT
read	src/external/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  re/;"	m	struct:__anon11d2a80f0208	typeref:typename:int (*)(void * user,char * data,int size)
read_from_callbacks	src/external/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon11d2a80f0308	typeref:typename:int
region_count	src/external/mp3lib.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8[3]
remove	src/hashtable.cpp	/^void s_hashtable<T>::remove(char* key)$/;"	f	class:s_hashtable	typeref:typename:void
removed_arr	src/hashtable.h	/^	b8 removed_arr[c_max_hashtable_elements];$/;"	m	struct:s_hashtable	typeref:typename:b8[]
resample	src/external/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon11d2a80f0a08	typeref:typename:resample_row_func
resample_row_1	src/external/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	typeref:typename:stbi_uc *
resample_row_func	src/external/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in0,stbi_uc * in1,int w,int hs)
resample_row_hv_2_kernel	src/external/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	m	struct:__anon11d2a80f0808	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in_near,stbi_uc * in_far,int w,int hs)
reserv	src/external/mp3lib.h	/^    int reserv, free_format_bytes;$/;"	m	struct:__anon9687efeb0208	typeref:typename:int
reserv_buf	src/external/mp3lib.h	/^    drmp3_uint8 header[4], reserv_buf[511];$/;"	m	struct:__anon9687efeb0208	typeref:typename:drmp3_uint8[511]
restart_interval	src/external/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
rgb	src/external/stb_image.h	/^   int            rgb;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
right_button	src/config.h	/^global constexpr int right_button = 1001;$/;"	v	typeref:typename:global int
s	src/external/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:stbi__context *
s	src/external/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon11d2a80f0e08	typeref:typename:stbi__context *
s0	src/external/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon6b1d216e0308	typeref:typename:float
s1	src/external/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon6b1d216e0308	typeref:typename:float
s_char_event	src/main.h	/^struct s_char_event$/;"	s
s_dynamic_array	src/main.h	/^struct s_dynamic_array$/;"	s
s_file_info	src/main.h	/^struct s_file_info$/;"	s
s_file_with_score	src/main.h	/^struct s_file_with_score$/;"	s
s_font	src/main.h	/^struct s_font$/;"	s
s_glyph	src/main.h	/^struct s_glyph$/;"	s
s_hashtable	src/hashtable.h	/^struct s_hashtable$/;"	s
s_input	src/main.h	/^struct s_input$/;"	s
s_input_str	src/ui.h	/^struct s_input_str$/;"	s
s_key	src/main.h	/^struct s_key$/;"	s
s_scoped_layer_destructor	src/ui.h	/^struct s_scoped_layer_destructor$/;"	s
s_stored_input	src/main.h	/^struct s_stored_input$/;"	s
s_texture	src/main.h	/^struct s_texture$/;"	s
s_transform	src/shader_shared.h	/^struct s_transform$/;"	s
s_ui	src/ui.h	/^struct s_ui$/;"	s
s_ui_data	src/ui.h	/^struct s_ui_data$/;"	s
s_ui_id	src/ui.h	/^struct s_ui_id$/;"	s
s_ui_layer	src/ui.h	/^struct s_ui_layer$/;"	s
s_ui_result	src/ui.h	/^struct s_ui_result$/;"	s
s_v2i	src/math.h	/^struct s_v2i$/;"	s
sampleRate	src/external/mp3lib.h	/^    drmp3_uint32 sampleRate;$/;"	m	struct:__anon9687efeb0608	typeref:typename:drmp3_uint32
sampleRate	src/external/mp3lib.h	/^    drmp3_uint32 sampleRate;$/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint32
scale	src/main.h	/^	float scale;$/;"	m	struct:s_font	typeref:typename:float
scalefac_compress	src/external/mp3lib.h	/^    drmp3_uint16 part_23_length, big_values, scalefac_compress;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint16
scalefac_scale	src/external/mp3lib.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
scan_n	src/external/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
scf	src/external/mp3lib.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2*32];$/;"	m	struct:__anon9687efeb0d08	typeref:typename:float[40]
scf	src/external/mp3lib.h	/^    float scf[3*64];$/;"	m	struct:__anon9687efeb0a08	typeref:typename:float[]
scfcod	src/external/mp3lib.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon9687efeb0a08	typeref:typename:drmp3_uint8[64]
scfsi	src/external/mp3lib.h	/^    drmp3_uint8 preflag, scalefac_scale, count1_table, scfsi;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8
score	src/main.h	/^	int score;$/;"	m	struct:s_file_with_score	typeref:typename:int
seekPointCount	src/external/mp3lib.h	/^    drmp3_uint32 seekPointCount;        \/* The number of items in pSeekPoints. When set to 0 as/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint32
seekPosInBytes	src/external/mp3lib.h	/^    drmp3_uint64 seekPosInBytes;        \/* Points to the first byte of an MP3 frame. *\/$/;"	m	struct:__anon9687efeb0408	typeref:typename:drmp3_uint64
sfbtab	src/external/mp3lib.h	/^    const drmp3_uint8 *sfbtab;$/;"	m	struct:__anon9687efeb0c08	typeref:typename:const drmp3_uint8 *
shader_bool	src/shader_shared.h	/^	#define shader_bool /;"	d
shader_float	src/shader_shared.h	/^	#define shader_float /;"	d
shader_int	src/shader_shared.h	/^	#define shader_int /;"	d
shader_v2	src/shader_shared.h	/^	#define shader_v2 /;"	d
shader_v4	src/shader_shared.h	/^	#define shader_v4 /;"	d
sinf2	src/math.h	/^func float sinf2(float t)$/;"	f	typeref:typename:func float
size	src/external/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon11d2a80f0708	typeref:typename:stbi_uc[257]
size	src/external/stb_image.h	/^   stbi_uc  size[STBI__ZNSYMS];$/;"	m	struct:__anon11d2a80f0b08	typeref:typename:stbi_uc[]
size	src/external/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon11d2a80f1108	typeref:typename:stbi_uc
size	src/external/stb_truetype.h	/^   int size;$/;"	m	struct:__anon6b1d216e0108	typeref:typename:int
size	src/main.h	/^	float size;$/;"	m	struct:s_font	typeref:typename:float
size	src/main.h	/^	s_v2 size;$/;"	m	struct:s_texture	typeref:typename:s_v2
size	src/ui.h	/^	s_v2 size;$/;"	m	struct:s_ui_data	typeref:typename:s_v2
skip	src/external/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget/;"	m	struct:__anon11d2a80f0208	typeref:typename:void (*)(void * user,int n)
skip_missing	src/external/stb_truetype.h	/^   int   skip_missing;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
soft_reset_ui	src/ui.cpp	/^func void soft_reset_ui()$/;"	f	typeref:typename:func void
spec_end	src/external/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
spec_start	src/external/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
start_x	src/external/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
start_y	src/external/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
started	src/external/stb_truetype.h	/^   int started;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:int
stbi__DNL	src/external/stb_image.h	/^#define stbi__DNL(/;"	d
stbi__EOI	src/external/stb_image.h	/^#define stbi__EOI(/;"	d
stbi__SOF	src/external/stb_image.h	/^#define stbi__SOF(/;"	d
stbi__SOF_progressive	src/external/stb_image.h	/^#define stbi__SOF_progressive(/;"	d
stbi__SOI	src/external/stb_image.h	/^#define stbi__SOI(/;"	d
stbi__SOS	src/external/stb_image.h	/^#define stbi__SOS(/;"	d
stbi__YCbCr_to_RGB_row	src/external/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stb/;"	f	typeref:typename:void
stbi__YCbCr_to_RGB_simd	src/external/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc /;"	f	typeref:typename:void
stbi__addints_valid	src/external/stb_image.h	/^static int stbi__addints_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__addsizes_valid	src/external/stb_image.h	/^static int stbi__addsizes_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__at_eof	src/external/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f	typeref:typename:stbi_inline int
stbi__bit_reverse	src/external/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f	typeref:typename:stbi_inline int
stbi__bitcount	src/external/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f	typeref:typename:int
stbi__bitreverse16	src/external/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f	typeref:typename:stbi_inline int
stbi__blinn_8x8	src/external/stb_image.h	/^static stbi_uc stbi__blinn_8x8(stbi_uc x, stbi_uc y)$/;"	f	typeref:typename:stbi_uc
stbi__bmask	src/external/stb_image.h	/^static const stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,1638/;"	v	typeref:typename:const stbi__uint32[17]
stbi__bmp_data	src/external/stb_image.h	/^} stbi__bmp_data;$/;"	t	typeref:struct:__anon11d2a80f1008
stbi__bmp_info	src/external/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__bmp_load	src/external/stb_image.h	/^static void *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__bmp_parse_header	src/external/stb_image.h	/^static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)$/;"	f	typeref:typename:void *
stbi__bmp_set_mask_defaults	src/external/stb_image.h	/^static int stbi__bmp_set_mask_defaults(stbi__bmp_data *info, int compress)$/;"	f	typeref:typename:int
stbi__bmp_test	src/external/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__bmp_test_raw	src/external/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__build_fast_ac	src/external/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f	typeref:typename:void
stbi__build_huffman	src/external/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f	typeref:typename:int
stbi__check_png_header	src/external/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f	typeref:typename:int
stbi__clamp	src/external/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__cleanup_jpeg	src/external/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__compute_huffman_codes	src/external/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__compute_transparency	src/external/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_transparency16	src/external/stb_image.h	/^static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_y	src/external/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f	typeref:typename:stbi_uc
stbi__compute_y_16	src/external/stb_image.h	/^static stbi__uint16 stbi__compute_y_16(int r, int g, int b)$/;"	f	typeref:typename:stbi__uint16
stbi__context	src/external/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon11d2a80f0308
stbi__convert_16_to_8	src/external/stb_image.h	/^static stbi_uc *stbi__convert_16_to_8(stbi__uint16 *orig, int w, int h, int channels)$/;"	f	typeref:typename:stbi_uc *
stbi__convert_8_to_16	src/external/stb_image.h	/^static stbi__uint16 *stbi__convert_8_to_16(stbi_uc *orig, int w, int h, int channels)$/;"	f	typeref:typename:stbi__uint16 *
stbi__convert_format	src/external/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:unsigned char *
stbi__convert_format16	src/external/stb_image.h	/^static stbi__uint16 *stbi__convert_format16(stbi__uint16 *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:stbi__uint16 *
stbi__copyval	src/external/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f	typeref:typename:void
stbi__cpuid3	src/external/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f	typeref:typename:int
stbi__create_png_image	src/external/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len/;"	f	typeref:typename:int
stbi__create_png_image_raw	src/external/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_/;"	f	typeref:typename:int
stbi__de_iphone	src/external/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f	typeref:typename:void
stbi__de_iphone_flag	src/external/stb_image.h	/^#define stbi__de_iphone_flag  (stbi__de_iphone_flag_/;"	d
stbi__de_iphone_flag	src/external/stb_image.h	/^#define stbi__de_iphone_flag  stbi__de_iphone_flag_/;"	d
stbi__de_iphone_flag_global	src/external/stb_image.h	/^static int stbi__de_iphone_flag_global = 0;$/;"	v	typeref:typename:int
stbi__de_iphone_flag_local	src/external/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__de_iphone_flag_set	src/external/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__de_iphone_flag_local, stbi__de_iphone_flag_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__decode_jpeg_header	src/external/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__decode_jpeg_image	src/external/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f	typeref:typename:int
stbi__depth_scale_table	src/external/stb_image.h	/^static const stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v	typeref:typename:const stbi_uc[9]
stbi__div16	src/external/stb_image.h	/^#define stbi__div16(/;"	d
stbi__div4	src/external/stb_image.h	/^#define stbi__div4(/;"	d
stbi__do_png	src/external/stb_image.h	/^static void *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info /;"	f	typeref:typename:void *
stbi__do_zlib	src/external/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	typeref:typename:int
stbi__err	src/external/stb_image.h	/^   #define stbi__err(/;"	d
stbi__err	src/external/stb_image.h	/^   #define stbi__err(x,y)  stbi__err(/;"	d
stbi__err	src/external/stb_image.h	/^static int stbi__err(const char *str)$/;"	f	typeref:typename:int
stbi__errpf	src/external/stb_image.h	/^#define stbi__errpf(/;"	d
stbi__errpuc	src/external/stb_image.h	/^#define stbi__errpuc(/;"	d
stbi__expand_png_palette	src/external/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f	typeref:typename:int
stbi__extend_receive	src/external/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__f2f	src/external/stb_image.h	/^#define stbi__f2f(/;"	d
stbi__fill_bits	src/external/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f	typeref:typename:void
stbi__float2fixed	src/external/stb_image.h	/^#define stbi__float2fixed(/;"	d
stbi__float2int	src/external/stb_image.h	/^#define stbi__float2int(/;"	d
stbi__float_postprocess	src/external/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:void
stbi__fopen	src/external/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f	typeref:typename:FILE *
stbi__free_jpeg_components	src/external/stb_image.h	/^static int stbi__free_jpeg_components(stbi__jpeg *z, int ncomp, int why)$/;"	f	typeref:typename:int
stbi__fsh	src/external/stb_image.h	/^#define stbi__fsh(/;"	d
stbi__g_failure_reason	src/external/stb_image.h	/^const char *stbi__g_failure_reason;$/;"	v	typeref:typename:STBI_THREAD_LOCAL const char *
stbi__get16be	src/external/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get16le	src/external/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get32be	src/external/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get32le	src/external/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get8	src/external/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__get_chunk_header	src/external/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f	typeref:typename:stbi__pngchunk
stbi__get_marker	src/external/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_uc
stbi__getn	src/external/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f	typeref:typename:int
stbi__gif	src/external/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon11d2a80f1308
stbi__gif_header	src/external/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f	typeref:typename:int
stbi__gif_info	src/external/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_info_raw	src/external/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_load	src/external/stb_image.h	/^static void *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__gif_load_next	src/external/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stb/;"	f	typeref:typename:stbi_uc *
stbi__gif_lzw	src/external/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon11d2a80f1208
stbi__gif_parse_colortable	src/external/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, i/;"	f	typeref:typename:void
stbi__gif_test	src/external/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__gif_test_raw	src/external/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__grow_buffer_unsafe	src/external/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__h2l_gamma_i	src/external/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__h2l_scale_i	src/external/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__hdr_convert	src/external/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	typeref:typename:void
stbi__hdr_gettoken	src/external/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f	typeref:typename:char *
stbi__hdr_info	src/external/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__hdr_load	src/external/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:float *
stbi__hdr_test	src/external/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f	typeref:typename:int
stbi__hdr_test_core	src/external/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s, const char *signature)$/;"	f	typeref:typename:int
stbi__hdr_to_ldr	src/external/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	typeref:typename:stbi_uc *
stbi__high_bit	src/external/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f	typeref:typename:int
stbi__huffman	src/external/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon11d2a80f0708
stbi__idct_block	src/external/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__idct_simd	src/external/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__info_main	src/external/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__int16	src/external/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t	typeref:typename:signed short
stbi__int16	src/external/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t	typeref:typename:int16_t
stbi__int32	src/external/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t	typeref:typename:signed int
stbi__int32	src/external/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t	typeref:typename:int32_t
stbi__is_16_main	src/external/stb_image.h	/^static int stbi__is_16_main(stbi__context *s)$/;"	f	typeref:typename:int
stbi__jbias	src/external/stb_image.h	/^static const int stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-819/;"	v	typeref:typename:const int[16]
stbi__jpeg	src/external/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon11d2a80f0808
stbi__jpeg_decode_block	src/external/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huff/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_ac	src/external/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, st/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_dc	src/external/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, in/;"	f	typeref:typename:int
stbi__jpeg_dequantize	src/external/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi__uint16 *dequant)$/;"	f	typeref:typename:void
stbi__jpeg_dezigzag	src/external/stb_image.h	/^static const stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v	typeref:typename:const stbi_uc[]
stbi__jpeg_finish	src/external/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f	typeref:typename:void
stbi__jpeg_get_bit	src/external/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_get_bits	src/external/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_huff_decode	src/external/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_info	src/external/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_info_raw	src/external/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_load	src/external/stb_image.h	/^static void *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:void *
stbi__jpeg_reset	src/external/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__jpeg_test	src/external/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__l2h_gamma	src/external/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__l2h_scale	src/external/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__ldr_to_hdr	src/external/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	typeref:typename:float *
stbi__load_and_postprocess_16bit	src/external/stb_image.h	/^static stbi__uint16 *stbi__load_and_postprocess_16bit(stbi__context *s, int *x, int *y, int *com/;"	f	typeref:typename:stbi__uint16 *
stbi__load_and_postprocess_8bit	src/external/stb_image.h	/^static unsigned char *stbi__load_and_postprocess_8bit(stbi__context *s, int *x, int *y, int *com/;"	f	typeref:typename:unsigned char *
stbi__load_gif_main	src/external/stb_image.h	/^static void *stbi__load_gif_main(stbi__context *s, int **delays, int *x, int *y, int *z, int *co/;"	f	typeref:typename:void *
stbi__load_gif_main_outofmem	src/external/stb_image.h	/^static void *stbi__load_gif_main_outofmem(stbi__gif *g, stbi_uc *out, int **delays)$/;"	f	typeref:typename:void *
stbi__load_main	src/external/stb_image.h	/^static void *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__re/;"	f	typeref:typename:void *
stbi__loadf_main	src/external/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi__mad2sizes_valid	src/external/stb_image.h	/^static int stbi__mad2sizes_valid(int a, int b, int add)$/;"	f	typeref:typename:int
stbi__mad3sizes_valid	src/external/stb_image.h	/^static int stbi__mad3sizes_valid(int a, int b, int c, int add)$/;"	f	typeref:typename:int
stbi__mad4sizes_valid	src/external/stb_image.h	/^static int stbi__mad4sizes_valid(int a, int b, int c, int d, int add)$/;"	f	typeref:typename:int
stbi__malloc	src/external/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f	typeref:typename:void *
stbi__malloc_mad2	src/external/stb_image.h	/^static void *stbi__malloc_mad2(int a, int b, int add)$/;"	f	typeref:typename:void *
stbi__malloc_mad3	src/external/stb_image.h	/^static void *stbi__malloc_mad3(int a, int b, int c, int add)$/;"	f	typeref:typename:void *
stbi__malloc_mad4	src/external/stb_image.h	/^static void *stbi__malloc_mad4(int a, int b, int c, int d, int add)$/;"	f	typeref:typename:void *
stbi__mul2shorts_valid	src/external/stb_image.h	/^static int stbi__mul2shorts_valid(short a, short b)$/;"	f	typeref:typename:int
stbi__mul2sizes_valid	src/external/stb_image.h	/^static int stbi__mul2sizes_valid(int a, int b)$/;"	f	typeref:typename:int
stbi__out_gif_code	src/external/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f	typeref:typename:void
stbi__paeth	src/external/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f	typeref:typename:int
stbi__parse_entropy_coded_data	src/external/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__parse_huffman_block	src/external/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_png_file	src/external/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f	typeref:typename:int
stbi__parse_uncompressed_block	src/external/stb_image.h	/^static int stbi__parse_uncompressed_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_zlib	src/external/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f	typeref:typename:int
stbi__parse_zlib_header	src/external/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__pic_info	src/external/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pic_is4	src/external/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f	typeref:typename:int
stbi__pic_load	src/external/stb_image.h	/^static void *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__resul/;"	f	typeref:typename:void *
stbi__pic_load_core	src/external/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *re/;"	f	typeref:typename:stbi_uc *
stbi__pic_packet	src/external/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon11d2a80f1108
stbi__pic_test	src/external/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pic_test_core	src/external/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png	src/external/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon11d2a80f0e08
stbi__png_info	src/external/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_info_raw	src/external/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_is16	src/external/stb_image.h	/^static int stbi__png_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png_load	src/external/stb_image.h	/^static void *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__png_test	src/external/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pngchunk	src/external/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon11d2a80f0d08
stbi__pnm_getinteger	src/external/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f	typeref:typename:int
stbi__pnm_info	src/external/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pnm_is16	src/external/stb_image.h	/^static int stbi__pnm_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pnm_isdigit	src/external/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f	typeref:typename:int
stbi__pnm_isspace	src/external/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f	typeref:typename:int
stbi__pnm_load	src/external/stb_image.h	/^static void *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__pnm_skip_whitespace	src/external/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f	typeref:typename:void
stbi__pnm_test	src/external/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__process_frame_header	src/external/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__process_gif_raster	src/external/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f	typeref:typename:stbi_uc *
stbi__process_marker	src/external/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f	typeref:typename:int
stbi__process_scan_header	src/external/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__psd_decode_rle	src/external/stb_image.h	/^static int stbi__psd_decode_rle(stbi__context *s, stbi_uc *p, int pixelCount)$/;"	f	typeref:typename:int
stbi__psd_info	src/external/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__psd_is16	src/external/stb_image.h	/^static int stbi__psd_is16(stbi__context *s)$/;"	f	typeref:typename:int
stbi__psd_load	src/external/stb_image.h	/^static void *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__psd_test	src/external/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__readval	src/external/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f	typeref:typename:stbi_uc *
stbi__refill_buffer	src/external/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f	typeref:typename:void
stbi__resample	src/external/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon11d2a80f0a08
stbi__resample_row_generic	src/external/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_h_2	src/external/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2	src/external/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2_simd	src/external/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, in/;"	f	typeref:typename:stbi_uc *
stbi__resample_row_v_2	src/external/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, i/;"	f	typeref:typename:stbi_uc *
stbi__result_info	src/external/stb_image.h	/^} stbi__result_info;$/;"	t	typeref:struct:__anon11d2a80f0508
stbi__rewind	src/external/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f	typeref:typename:void
stbi__setup_jpeg	src/external/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__shiftsigned	src/external/stb_image.h	/^static int stbi__shiftsigned(unsigned int v, int shift, int bits)$/;"	f	typeref:typename:int
stbi__skip	src/external/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f	typeref:typename:void
stbi__skip_jpeg_junk_at_end	src/external/stb_image.h	/^static int stbi__skip_jpeg_junk_at_end(stbi__jpeg *j)$/;"	f	typeref:typename:int
stbi__sse2_available	src/external/stb_image.h	/^static int stbi__sse2_available(void)$/;"	f	typeref:typename:int
stbi__start_callbacks	src/external/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f	typeref:typename:void
stbi__start_file	src/external/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f	typeref:typename:void
stbi__start_mem	src/external/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f	typeref:typename:void
stbi__stdio_callbacks	src/external/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v	typeref:typename:stbi_io_callbacks
stbi__stdio_eof	src/external/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f	typeref:typename:int
stbi__stdio_read	src/external/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f	typeref:typename:int
stbi__stdio_skip	src/external/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f	typeref:typename:void
stbi__tga_get_comp	src/external/stb_image.h	/^static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)$/;"	f	typeref:typename:int
stbi__tga_info	src/external/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__tga_load	src/external/stb_image.h	/^static void *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__res/;"	f	typeref:typename:void *
stbi__tga_read_rgb16	src/external/stb_image.h	/^static void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)$/;"	f	typeref:typename:void
stbi__tga_test	src/external/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__uint16	src/external/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t	typeref:typename:uint16_t
stbi__uint16	src/external/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t	typeref:typename:unsigned short
stbi__uint32	src/external/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t	typeref:typename:uint32_t
stbi__uint32	src/external/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t	typeref:typename:unsigned int
stbi__unpremultiply_on_load	src/external/stb_image.h	/^#define stbi__unpremultiply_on_load  (stbi__unpremultiply_on_load_/;"	d
stbi__unpremultiply_on_load	src/external/stb_image.h	/^#define stbi__unpremultiply_on_load  stbi__unpremultiply_on_load_/;"	d
stbi__unpremultiply_on_load_global	src/external/stb_image.h	/^static int stbi__unpremultiply_on_load_global = 0;$/;"	v	typeref:typename:int
stbi__unpremultiply_on_load_local	src/external/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__unpremultiply_on_load_set	src/external/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__unpremultiply_on_load_local, stbi__unpremultiply_on_load_set;$/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__vertical_flip	src/external/stb_image.h	/^static void stbi__vertical_flip(void *image, int w, int h, int bytes_per_pixel)$/;"	f	typeref:typename:void
stbi__vertical_flip_slices	src/external/stb_image.h	/^static void stbi__vertical_flip_slices(void *image, int w, int h, int z, int bytes_per_pixel)$/;"	f	typeref:typename:void
stbi__vertically_flip_on_load	src/external/stb_image.h	/^#define stbi__vertically_flip_on_load  (stbi__vertically_flip_on_load_/;"	d
stbi__vertically_flip_on_load	src/external/stb_image.h	/^#define stbi__vertically_flip_on_load  stbi__vertically_flip_on_load_/;"	d
stbi__vertically_flip_on_load_global	src/external/stb_image.h	/^static int stbi__vertically_flip_on_load_global = 0;$/;"	v	typeref:typename:int
stbi__vertically_flip_on_load_local	src/external/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__vertically_flip_on_load_set	src/external/stb_image.h	/^static STBI_THREAD_LOCAL int stbi__vertically_flip_on_load_local, stbi__vertically_flip_on_load_/;"	v	typeref:typename:STBI_THREAD_LOCAL int
stbi__zbuf	src/external/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon11d2a80f0c08
stbi__zbuild_huffman	src/external/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, const stbi_uc *sizelist, int num)$/;"	f	typeref:typename:int
stbi__zdefault_distance	src/external/stb_image.h	/^static const stbi_uc stbi__zdefault_distance[32] =$/;"	v	typeref:typename:const stbi_uc[32]
stbi__zdefault_length	src/external/stb_image.h	/^static const stbi_uc stbi__zdefault_length[STBI__ZNSYMS] =$/;"	v	typeref:typename:const stbi_uc[]
stbi__zdist_base	src/external/stb_image.h	/^static const int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v	typeref:typename:const int[32]
stbi__zdist_extra	src/external/stb_image.h	/^static const int stbi__zdist_extra[32] =$/;"	v	typeref:typename:const int[32]
stbi__zeof	src/external/stb_image.h	/^stbi_inline static int stbi__zeof(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zexpand	src/external/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f	typeref:typename:int
stbi__zget8	src/external/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__zhuffman	src/external/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon11d2a80f0b08
stbi__zhuffman_decode	src/external/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zhuffman_decode_slowpath	src/external/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:int
stbi__zlength_base	src/external/stb_image.h	/^static const int stbi__zlength_base[31] = {$/;"	v	typeref:typename:const int[31]
stbi__zlength_extra	src/external/stb_image.h	/^static const int stbi__zlength_extra[31]=$/;"	v	typeref:typename:const int[31]
stbi__zreceive	src/external/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f	typeref:typename:stbi_inline unsigned int
stbi_convert_iphone_png_to_rgb	src/external/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_convert_iphone_png_to_rgb_thread	src/external/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb_thread(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_convert_wchar_to_utf8	src/external/stb_image.h	/^STBIDEF int stbi_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)$/;"	f	typeref:typename:STBIDEF int
stbi_failure_reason	src/external/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f	typeref:typename:STBIDEF const char *
stbi_hdr_to_ldr_gamma	src/external/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_hdr_to_ldr_scale	src/external/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_image_free	src/external/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f	typeref:typename:STBIDEF void
stbi_info	src/external/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_callbacks	src/external/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int/;"	f	typeref:typename:STBIDEF int
stbi_info_from_file	src/external/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_memory	src/external/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_inline	src/external/stb_image.h	/^   #define stbi_inline /;"	d
stbi_inline	src/external/stb_image.h	/^   #define stbi_inline$/;"	d
stbi_io_callbacks	src/external/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon11d2a80f0208
stbi_is_16_bit	src/external/stb_image.h	/^STBIDEF int stbi_is_16_bit(char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_callbacks	src/external/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_file	src/external/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_16_bit_from_memory	src/external/stb_image.h	/^STBIDEF int stbi_is_16_bit_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr	src/external/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_callbacks	src/external/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_file	src/external/stb_image.h	/^STBIDEF int stbi_is_hdr_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_memory	src/external/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_ldr_to_hdr_gamma	src/external/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_ldr_to_hdr_scale	src/external/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_load	src/external/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_16	src/external/stb_image.h	/^STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_16_from_callbacks	src/external/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, /;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_16_from_memory	src/external/stb_image.h	/^STBIDEF stbi_us *stbi_load_16_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *c/;"	f	typeref:typename:STBIDEF stbi_us *
stbi_load_from_callbacks	src/external/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file	src/external/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file_16	src/external/stb_image.h	/^STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi__uint16 *
stbi_load_from_memory	src/external/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_gif_from_memory	src/external/stb_image.h	/^STBIDEF stbi_uc *stbi_load_gif_from_memory(stbi_uc const *buffer, int len, int **delays, int *x,/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_loadf	src/external/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_callbacks	src/external/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int /;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_file	src/external/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_memory	src/external/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp,/;"	f	typeref:typename:STBIDEF float *
stbi_lrot	src/external/stb_image.h	/^   #define stbi_lrot(/;"	d
stbi_set_flip_vertically_on_load	src/external/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_flip_vertically_on_load_thread	src/external/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load_thread(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_unpremultiply_on_load	src/external/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi_set_unpremultiply_on_load_thread	src/external/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load_thread(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi_uc	src/external/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t	typeref:typename:unsigned char
stbi_us	src/external/stb_image.h	/^typedef unsigned short stbi_us;$/;"	t	typeref:typename:unsigned short
stbi_zlib_decode_buffer	src/external/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_malloc	src/external/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize	src/external/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, i/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize_headerflag	src/external/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int init/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_noheader_buffer	src/external/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int i/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_noheader_malloc	src/external/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbrp_context	src/external/stb_truetype.h	/^} stbrp_context;$/;"	t	typeref:struct:__anon6b1d216e1108
stbrp_coord	src/external/stb_truetype.h	/^typedef int stbrp_coord;$/;"	t	typeref:typename:int
stbrp_init_target	src/external/stb_truetype.h	/^static void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nod/;"	f	typeref:typename:void
stbrp_node	src/external/stb_truetype.h	/^} stbrp_node;$/;"	t	typeref:struct:__anon6b1d216e1208
stbrp_pack_rects	src/external/stb_truetype.h	/^static void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)$/;"	f	typeref:typename:void
stbrp_rect	src/external/stb_truetype.h	/^struct stbrp_rect$/;"	s
stbrp_rect	src/external/stb_truetype.h	/^typedef struct stbrp_rect stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbtt_BakeFontBitmap	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_BakeFontBitmap(const unsigned char *data, int offset,$/;"	f	typeref:typename:STBTT_DEF int
stbtt_BakeFontBitmap_internal	src/external/stb_truetype.h	/^static int stbtt_BakeFontBitmap_internal(unsigned char *data, int offset,  \/\/ font location (u/;"	f	typeref:typename:int
stbtt_CompareUTF8toUTF16_bigendian	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int l/;"	f	typeref:typename:STBTT_DEF int
stbtt_CompareUTF8toUTF16_bigendian_internal	src/external/stb_truetype.h	/^static int stbtt_CompareUTF8toUTF16_bigendian_internal(char *s1, int len1, char *s2, int len2)$/;"	f	typeref:typename:int
stbtt_FindGlyphIndex	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_FindGlyphIndex(const stbtt_fontinfo *info, int unicode_codepoint)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_FindMatchingFont	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_FindMatchingFont(const unsigned char *fontdata, const char *name, int flags)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_FindMatchingFont_internal	src/external/stb_truetype.h	/^static int stbtt_FindMatchingFont_internal(unsigned char *font_collection, char *name_utf8, stbt/;"	f	typeref:typename:int
stbtt_FindSVGDoc	src/external/stb_truetype.h	/^STBTT_DEF stbtt_uint8 *stbtt_FindSVGDoc(const stbtt_fontinfo *info, int gl)$/;"	f	typeref:typename:STBTT_DEF stbtt_uint8 *
stbtt_FlattenCurves	src/external/stb_truetype.h	/^static stbtt__point *stbtt_FlattenCurves(stbtt_vertex *vertices, int num_verts, float objspace_f/;"	f	typeref:typename:stbtt__point *
stbtt_FreeBitmap	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_FreeBitmap(unsigned char *bitmap, void *userdata)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_FreeSDF	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_FreeSDF(unsigned char *bitmap, void *userdata)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_FreeShape	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetBakedQuad	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetBakedQuad(const stbtt_bakedchar *chardata, int pw, int ph, int char_inde/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmap	src/external/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmap(const stbtt_fontinfo *info, float scale_x, flo/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointBitmapBox	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo *font, int codepoint, float scal/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmapBoxSubpixel	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo *font, int codepoint, fl/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmapSubpixel	src/external/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo *info, float scal/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointBox	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointBox(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0,/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointHMetrics	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointHMetrics(const stbtt_fontinfo *info, int codepoint, int *advanc/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointKernAdvance	src/external/stb_truetype.h	/^STBTT_DEF int  stbtt_GetCodepointKernAdvance(const stbtt_fontinfo *info, int ch1, int ch2)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointSDF	src/external/stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetCodepointSDF(const stbtt_fontinfo *info, float scale, int cod/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointSVG	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointSVG(const stbtt_fontinfo *info, int unicode_codepoint, const cha/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointShape	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointShape(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_v/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetFontBoundingBox	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetFontBoundingBox(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, i/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetFontNameString	src/external/stb_truetype.h	/^STBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platf/;"	f	typeref:typename:STBTT_DEF const char *
stbtt_GetFontOffsetForIndex	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetFontOffsetForIndex(const unsigned char *data, int index)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetFontOffsetForIndex_internal	src/external/stb_truetype.h	/^static int stbtt_GetFontOffsetForIndex_internal(unsigned char *font_collection, int index)$/;"	f	typeref:typename:int
stbtt_GetFontVMetrics	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetFontVMetrics(const stbtt_fontinfo *info, int *ascent, int *descent, int /;"	f	typeref:typename:STBTT_DEF void
stbtt_GetFontVMetricsOS2	src/external/stb_truetype.h	/^STBTT_DEF int  stbtt_GetFontVMetricsOS2(const stbtt_fontinfo *info, int *typoAscent, int *typoDe/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphBitmap	src/external/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmap(const stbtt_fontinfo *info, float scale_x, float s/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphBitmapBox	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo *font, int glyph, float scale_x, flo/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphBitmapBoxSubpixel	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo *font, int glyph, float scal/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphBitmapSubpixel	src/external/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo *info, float scale_x,/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphBox	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphBox(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, i/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphHMetrics	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphHMetrics(const stbtt_fontinfo *info, int glyph_index, int *advanceW/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphKernAdvance	src/external/stb_truetype.h	/^STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphSDF	src/external/stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetGlyphSDF(const stbtt_fontinfo *info, float scale, int glyph, /;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphSVG	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphSVG(const stbtt_fontinfo *info, int gl, const char **svg)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphShape	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetKerningTable	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetKerningTable(const stbtt_fontinfo *info, stbtt_kerningentry* table, int t/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetKerningTableLength	src/external/stb_truetype.h	/^STBTT_DEF int  stbtt_GetKerningTableLength(const stbtt_fontinfo *info)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetNumberOfFonts	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_GetNumberOfFonts(const unsigned char *data)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetNumberOfFonts_internal	src/external/stb_truetype.h	/^static int stbtt_GetNumberOfFonts_internal(unsigned char *font_collection)$/;"	f	typeref:typename:int
stbtt_GetPackedQuad	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetPackedQuad(const stbtt_packedchar *chardata, int pw, int ph, int char_in/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetScaledFontVMetrics	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_GetScaledFontVMetrics(const unsigned char *fontdata, int index, float size,/;"	f	typeref:typename:STBTT_DEF void
stbtt_InitFont	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_InitFont(stbtt_fontinfo *info, const unsigned char *data, int offset)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_InitFont_internal	src/external/stb_truetype.h	/^static int stbtt_InitFont_internal(stbtt_fontinfo *info, unsigned char *data, int fontstart)$/;"	f	typeref:typename:int
stbtt_IsGlyphEmpty	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_IsGlyphEmpty(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_MakeCodepointBitmap	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmap(const stbtt_fontinfo *info, unsigned char *output, int /;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeCodepointBitmapSubpixel	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *outp/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeCodepointBitmapSubpixelPrefilter	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned c/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmap	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmapSubpixel	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, /;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmapSubpixelPrefilter	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char /;"	f	typeref:typename:STBTT_DEF void
stbtt_PackBegin	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, in/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackEnd	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackFontRange	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, const unsigned char *fontdata, int fo/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRanges	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, const unsigned char *fontdata, int f/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRangesGatherRects	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, const stbtt_fontinfo *inf/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRangesPackRects	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int num/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackFontRangesRenderIntoRects	src/external/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, const stbtt_fontinfo /;"	f	typeref:typename:STBTT_DEF int
stbtt_PackSetOversampling	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, uns/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackSetSkipMissingCodepoints	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_PackSetSkipMissingCodepoints(stbtt_pack_context *spc, int skip)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_Rasterize	src/external/stb_truetype.h	/^STBTT_DEF void stbtt_Rasterize(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *ve/;"	f	typeref:typename:STBTT_DEF void
stbtt_ScaleForMappingEmToPixels	src/external/stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo *info, float pixels)$/;"	f	typeref:typename:STBTT_DEF float
stbtt_ScaleForPixelHeight	src/external/stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)$/;"	f	typeref:typename:STBTT_DEF float
stbtt__CompareUTF8toUTF16_bigendian_prefix	src/external/stb_truetype.h	/^static stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8 *s1, stbtt_int32 len1,/;"	f	typeref:typename:stbtt_int32
stbtt__GetCoverageIndex	src/external/stb_truetype.h	/^static stbtt_int32 stbtt__GetCoverageIndex(stbtt_uint8 *coverageTable, int glyph)$/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyfOffset	src/external/stb_truetype.h	/^static int stbtt__GetGlyfOffset(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:int
stbtt__GetGlyphClass	src/external/stb_truetype.h	/^static stbtt_int32  stbtt__GetGlyphClass(stbtt_uint8 *classDefTable, int glyph)$/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyphGPOSInfoAdvance	src/external/stb_truetype.h	/^static stbtt_int32 stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo *info, int glyph1, int gl/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyphInfoT2	src/external/stb_truetype.h	/^static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, /;"	f	typeref:typename:int
stbtt__GetGlyphKernInfoAdvance	src/external/stb_truetype.h	/^static int stbtt__GetGlyphKernInfoAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)$/;"	f	typeref:typename:int
stbtt__GetGlyphShapeT2	src/external/stb_truetype.h	/^static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:int
stbtt__GetGlyphShapeTT	src/external/stb_truetype.h	/^static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:int
stbtt__active_edge	src/external/stb_truetype.h	/^typedef struct stbtt__active_edge$/;"	s
stbtt__active_edge	src/external/stb_truetype.h	/^} stbtt__active_edge;$/;"	t	typeref:struct:stbtt__active_edge
stbtt__add_point	src/external/stb_truetype.h	/^static void stbtt__add_point(stbtt__point *points, int n, float x, float y)$/;"	f	typeref:typename:void
stbtt__bitmap	src/external/stb_truetype.h	/^} stbtt__bitmap;$/;"	t	typeref:struct:__anon6b1d216e0808
stbtt__buf	src/external/stb_truetype.h	/^} stbtt__buf;$/;"	t	typeref:struct:__anon6b1d216e0108
stbtt__buf_get	src/external/stb_truetype.h	/^static stbtt_uint32 stbtt__buf_get(stbtt__buf *b, int n)$/;"	f	typeref:typename:stbtt_uint32
stbtt__buf_get16	src/external/stb_truetype.h	/^#define stbtt__buf_get16(/;"	d
stbtt__buf_get32	src/external/stb_truetype.h	/^#define stbtt__buf_get32(/;"	d
stbtt__buf_get8	src/external/stb_truetype.h	/^static stbtt_uint8 stbtt__buf_get8(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint8
stbtt__buf_peek8	src/external/stb_truetype.h	/^static stbtt_uint8 stbtt__buf_peek8(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint8
stbtt__buf_range	src/external/stb_truetype.h	/^static stbtt__buf stbtt__buf_range(const stbtt__buf *b, int o, int s)$/;"	f	typeref:typename:stbtt__buf
stbtt__buf_seek	src/external/stb_truetype.h	/^static void stbtt__buf_seek(stbtt__buf *b, int o)$/;"	f	typeref:typename:void
stbtt__buf_skip	src/external/stb_truetype.h	/^static void stbtt__buf_skip(stbtt__buf *b, int o)$/;"	f	typeref:typename:void
stbtt__cff_get_index	src/external/stb_truetype.h	/^static stbtt__buf stbtt__cff_get_index(stbtt__buf *b)$/;"	f	typeref:typename:stbtt__buf
stbtt__cff_index_count	src/external/stb_truetype.h	/^static int stbtt__cff_index_count(stbtt__buf *b)$/;"	f	typeref:typename:int
stbtt__cff_index_get	src/external/stb_truetype.h	/^static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)$/;"	f	typeref:typename:stbtt__buf
stbtt__cff_int	src/external/stb_truetype.h	/^static stbtt_uint32 stbtt__cff_int(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint32
stbtt__cff_skip_operand	src/external/stb_truetype.h	/^static void stbtt__cff_skip_operand(stbtt__buf *b) {$/;"	f	typeref:typename:void
stbtt__check_size16	src/external/stb_truetype.h	/^   typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stbtt_int16)==2?1:-1]
stbtt__check_size32	src/external/stb_truetype.h	/^   typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stbtt_int32)==4?1:-1]
stbtt__cid_get_glyph_subrs	src/external/stb_truetype.h	/^static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:stbtt__buf
stbtt__close_shape	src/external/stb_truetype.h	/^static int stbtt__close_shape(stbtt_vertex *vertices, int num_vertices, int was_off, int start_o/;"	f	typeref:typename:int
stbtt__compute_crossings_x	src/external/stb_truetype.h	/^static int stbtt__compute_crossings_x(float x, float y, int nverts, stbtt_vertex *verts)$/;"	f	typeref:typename:int
stbtt__csctx	src/external/stb_truetype.h	/^} stbtt__csctx;$/;"	t	typeref:struct:__anon6b1d216e0f08
stbtt__csctx_close_shape	src/external/stb_truetype.h	/^static void stbtt__csctx_close_shape(stbtt__csctx *ctx)$/;"	f	typeref:typename:void
stbtt__csctx_rccurve_to	src/external/stb_truetype.h	/^static void stbtt__csctx_rccurve_to(stbtt__csctx *ctx, float dx1, float dy1, float dx2, float dy/;"	f	typeref:typename:void
stbtt__csctx_rline_to	src/external/stb_truetype.h	/^static void stbtt__csctx_rline_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f	typeref:typename:void
stbtt__csctx_rmove_to	src/external/stb_truetype.h	/^static void stbtt__csctx_rmove_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f	typeref:typename:void
stbtt__csctx_v	src/external/stb_truetype.h	/^static void stbtt__csctx_v(stbtt__csctx *c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbt/;"	f	typeref:typename:void
stbtt__cuberoot	src/external/stb_truetype.h	/^static float stbtt__cuberoot( float x )$/;"	f	typeref:typename:float
stbtt__dict_get	src/external/stb_truetype.h	/^static stbtt__buf stbtt__dict_get(stbtt__buf *b, int key)$/;"	f	typeref:typename:stbtt__buf
stbtt__dict_get_ints	src/external/stb_truetype.h	/^static void stbtt__dict_get_ints(stbtt__buf *b, int key, int outcount, stbtt_uint32 *out)$/;"	f	typeref:typename:void
stbtt__edge	src/external/stb_truetype.h	/^typedef struct stbtt__edge {$/;"	s
stbtt__edge	src/external/stb_truetype.h	/^} stbtt__edge;$/;"	t	typeref:struct:stbtt__edge
stbtt__fill_active_edges	src/external/stb_truetype.h	/^static void stbtt__fill_active_edges(unsigned char *scanline, int len, stbtt__active_edge *e, in/;"	f	typeref:typename:void
stbtt__fill_active_edges_new	src/external/stb_truetype.h	/^static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len, stbtt__/;"	f	typeref:typename:void
stbtt__find_table	src/external/stb_truetype.h	/^static stbtt_uint32 stbtt__find_table(stbtt_uint8 *data, stbtt_uint32 fontstart, const char *tag/;"	f	typeref:typename:stbtt_uint32
stbtt__get_subr	src/external/stb_truetype.h	/^static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)$/;"	f	typeref:typename:stbtt__buf
stbtt__get_subrs	src/external/stb_truetype.h	/^static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)$/;"	f	typeref:typename:stbtt__buf
stbtt__get_svg	src/external/stb_truetype.h	/^static int stbtt__get_svg(stbtt_fontinfo *info)$/;"	f	typeref:typename:int
stbtt__h_prefilter	src/external/stb_truetype.h	/^static void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigne/;"	f	typeref:typename:void
stbtt__handle_clipped_edge	src/external/stb_truetype.h	/^static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge *e, float x0, /;"	f	typeref:typename:void
stbtt__hheap	src/external/stb_truetype.h	/^typedef struct stbtt__hheap$/;"	s
stbtt__hheap	src/external/stb_truetype.h	/^} stbtt__hheap;$/;"	t	typeref:struct:stbtt__hheap
stbtt__hheap_alloc	src/external/stb_truetype.h	/^static void *stbtt__hheap_alloc(stbtt__hheap *hh, size_t size, void *userdata)$/;"	f	typeref:typename:void *
stbtt__hheap_chunk	src/external/stb_truetype.h	/^typedef struct stbtt__hheap_chunk$/;"	s
stbtt__hheap_chunk	src/external/stb_truetype.h	/^} stbtt__hheap_chunk;$/;"	t	typeref:struct:stbtt__hheap_chunk
stbtt__hheap_cleanup	src/external/stb_truetype.h	/^static void stbtt__hheap_cleanup(stbtt__hheap *hh, void *userdata)$/;"	f	typeref:typename:void
stbtt__hheap_free	src/external/stb_truetype.h	/^static void stbtt__hheap_free(stbtt__hheap *hh, void *p)$/;"	f	typeref:typename:void
stbtt__isfont	src/external/stb_truetype.h	/^static int stbtt__isfont(stbtt_uint8 *font)$/;"	f	typeref:typename:int
stbtt__matches	src/external/stb_truetype.h	/^static int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 f/;"	f	typeref:typename:int
stbtt__matchpair	src/external/stb_truetype.h	/^static int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nle/;"	f	typeref:typename:int
stbtt__new_active	src/external/stb_truetype.h	/^static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float /;"	f	typeref:typename:stbtt__active_edge *
stbtt__new_buf	src/external/stb_truetype.h	/^static stbtt__buf stbtt__new_buf(const void *p, size_t size)$/;"	f	typeref:typename:stbtt__buf
stbtt__oversample_shift	src/external/stb_truetype.h	/^static float stbtt__oversample_shift(int oversample)$/;"	f	typeref:typename:float
stbtt__point	src/external/stb_truetype.h	/^} stbtt__point;$/;"	t	typeref:struct:__anon6b1d216e1008
stbtt__position_trapezoid_area	src/external/stb_truetype.h	/^static float stbtt__position_trapezoid_area(float height, float tx0, float tx1, float bx0, float/;"	f	typeref:typename:float
stbtt__rasterize	src/external/stb_truetype.h	/^static void stbtt__rasterize(stbtt__bitmap *result, stbtt__point *pts, int *wcount, int windings/;"	f	typeref:typename:void
stbtt__rasterize_sorted_edges	src/external/stb_truetype.h	/^static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsub/;"	f	typeref:typename:void
stbtt__ray_intersect_bezier	src/external/stb_truetype.h	/^static int stbtt__ray_intersect_bezier(float orig[2], float ray[2], float q0[2], float q1[2], fl/;"	f	typeref:typename:int
stbtt__run_charstring	src/external/stb_truetype.h	/^static int stbtt__run_charstring(const stbtt_fontinfo *info, int glyph_index, stbtt__csctx *c)$/;"	f	typeref:typename:int
stbtt__sized_trapezoid_area	src/external/stb_truetype.h	/^static float stbtt__sized_trapezoid_area(float height, float top_width, float bottom_width)$/;"	f	typeref:typename:float
stbtt__sized_triangle_area	src/external/stb_truetype.h	/^static float stbtt__sized_triangle_area(float height, float width)$/;"	f	typeref:typename:float
stbtt__solve_cubic	src/external/stb_truetype.h	/^static int stbtt__solve_cubic(float a, float b, float c, float* r)$/;"	f	typeref:typename:int
stbtt__sort_edges	src/external/stb_truetype.h	/^static void stbtt__sort_edges(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__sort_edges_ins_sort	src/external/stb_truetype.h	/^static void stbtt__sort_edges_ins_sort(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__sort_edges_quicksort	src/external/stb_truetype.h	/^static void stbtt__sort_edges_quicksort(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__tesselate_cubic	src/external/stb_truetype.h	/^static void stbtt__tesselate_cubic(stbtt__point *points, int *num_points, float x0, float y0, fl/;"	f	typeref:typename:void
stbtt__tesselate_curve	src/external/stb_truetype.h	/^static int stbtt__tesselate_curve(stbtt__point *points, int *num_points, float x0, float y0, flo/;"	f	typeref:typename:int
stbtt__test_oversample_pow2	src/external/stb_truetype.h	/^typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ?/;"	t	typeref:typename:int[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1))==0?1:-1]
stbtt__track_vertex	src/external/stb_truetype.h	/^static void stbtt__track_vertex(stbtt__csctx *c, stbtt_int32 x, stbtt_int32 y)$/;"	f	typeref:typename:void
stbtt__v_prefilter	src/external/stb_truetype.h	/^static void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigne/;"	f	typeref:typename:void
stbtt_aligned_quad	src/external/stb_truetype.h	/^} stbtt_aligned_quad;$/;"	t	typeref:struct:__anon6b1d216e0308
stbtt_bakedchar	src/external/stb_truetype.h	/^} stbtt_bakedchar;$/;"	t	typeref:struct:__anon6b1d216e0208
stbtt_fontinfo	src/external/stb_truetype.h	/^struct stbtt_fontinfo$/;"	s
stbtt_fontinfo	src/external/stb_truetype.h	/^typedef struct stbtt_fontinfo stbtt_fontinfo;$/;"	t	typeref:struct:stbtt_fontinfo
stbtt_int16	src/external/stb_truetype.h	/^   typedef signed   short  stbtt_int16;$/;"	t	typeref:typename:signed short
stbtt_int32	src/external/stb_truetype.h	/^   typedef signed   int    stbtt_int32;$/;"	t	typeref:typename:signed int
stbtt_int8	src/external/stb_truetype.h	/^   typedef signed   char   stbtt_int8;$/;"	t	typeref:typename:signed char
stbtt_kerningentry	src/external/stb_truetype.h	/^typedef struct stbtt_kerningentry$/;"	s
stbtt_kerningentry	src/external/stb_truetype.h	/^} stbtt_kerningentry;$/;"	t	typeref:struct:stbtt_kerningentry
stbtt_pack_context	src/external/stb_truetype.h	/^struct stbtt_pack_context {$/;"	s
stbtt_pack_context	src/external/stb_truetype.h	/^typedef struct stbtt_pack_context stbtt_pack_context;$/;"	t	typeref:struct:stbtt_pack_context
stbtt_pack_range	src/external/stb_truetype.h	/^} stbtt_pack_range;$/;"	t	typeref:struct:__anon6b1d216e0508
stbtt_packedchar	src/external/stb_truetype.h	/^} stbtt_packedchar;$/;"	t	typeref:struct:__anon6b1d216e0408
stbtt_setvertex	src/external/stb_truetype.h	/^static void stbtt_setvertex(stbtt_vertex *v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stb/;"	f	typeref:typename:void
stbtt_tag	src/external/stb_truetype.h	/^#define stbtt_tag(p,str)           stbtt_tag4/;"	d
stbtt_tag4	src/external/stb_truetype.h	/^#define stbtt_tag4(/;"	d
stbtt_uint16	src/external/stb_truetype.h	/^   typedef unsigned short  stbtt_uint16;$/;"	t	typeref:typename:unsigned short
stbtt_uint32	src/external/stb_truetype.h	/^   typedef unsigned int    stbtt_uint32;$/;"	t	typeref:typename:unsigned int
stbtt_uint8	src/external/stb_truetype.h	/^   typedef unsigned char   stbtt_uint8;$/;"	t	typeref:typename:unsigned char
stbtt_vertex	src/external/stb_truetype.h	/^   } stbtt_vertex;$/;"	t	typeref:struct:__anon6b1d216e0708
stbtt_vertex_type	src/external/stb_truetype.h	/^   #define stbtt_vertex_type /;"	d
step	src/external/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
stereo_bands	src/external/mp3lib.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon9687efeb0a08	typeref:typename:drmp3_uint8
streamCursor	src/external/mp3lib.h	/^    drmp3_uint64 streamCursor;          \/* The current byte the decoder is sitting on in the ra/;"	m	struct:__anon9687efeb0708	typeref:typename:drmp3_uint64
stride	src/external/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon6b1d216e0808	typeref:typename:int
stride_in_bytes	src/external/stb_truetype.h	/^   int   stride_in_bytes;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
sub_size	src/main.h	/^	s_v2 sub_size;$/;"	m	struct:s_texture	typeref:typename:s_v2
subblock_gain	src/external/mp3lib.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8[3]
sublayer	src/shader_shared.h	/^	shader_int sublayer;$/;"	m	struct:s_transform	typeref:typename:shader_int
submitted	src/ui.h	/^	b8 submitted;$/;"	m	struct:s_ui_result	typeref:typename:b8
subrs	src/external/stb_truetype.h	/^   stbtt__buf subrs;                  \/\/ private charstring subroutines index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
succ_high	src/external/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
succ_low	src/external/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
success	build.bat	/^:success$/;"	l
suffix	src/external/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon11d2a80f1208	typeref:typename:stbi_uc
svg	src/external/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos,svg; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
sy	src/external/stb_truetype.h	/^   float sy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
syn	src/external/mp3lib.h	/^    float grbuf[2][576], scf[40], syn[18 + 15][2*32];$/;"	m	struct:__anon9687efeb0d08	typeref:typename:float[][]
t0	src/external/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon6b1d216e0308	typeref:typename:float
t1	src/external/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon6b1d216e0308	typeref:typename:float
tab_offset	src/external/mp3lib.h	/^    drmp3_uint8 tab_offset, code_tab_width, band_count;$/;"	m	struct:__anon9687efeb0b08	typeref:typename:drmp3_uint8
table	src/ui.h	/^	s_hashtable<s_ui_data> table;$/;"	m	struct:s_ui	typeref:typename:s_hashtable<s_ui_data>
table_select	src/external/mp3lib.h	/^    drmp3_uint8 table_select[3], region_count[3], subblock_gain[3];$/;"	m	struct:__anon9687efeb0c08	typeref:typename:drmp3_uint8[3]
text_arr	src/main.cpp	/^global s_carray<s_sarray<s_transform, 8192>, e_font_count> text_arr;$/;"	v	typeref:typename:global s_carray<s_sarray<s_transform,8192>,e_font_count>
texture	src/main.h	/^	s_texture texture;$/;"	m	struct:s_font	typeref:typename:s_texture
texture_size	src/shader_shared.h	/^	shader_v2 texture_size;$/;"	m	struct:s_transform	typeref:typename:shader_v2
todo	src/external/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon11d2a80f0808	typeref:typename:int
total_bands	src/external/mp3lib.h	/^    drmp3_uint8 total_bands, stereo_bands, bitalloc[64], scfcod[64];$/;"	m	struct:__anon9687efeb0a08	typeref:typename:drmp3_uint8
total_time	src/main.cpp	/^global float total_time = 0;$/;"	v	typeref:typename:global float
tq	src/external/stb_image.h	/^      int tq;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
transforms	src/main.cpp	/^global s_sarray<s_transform, 8192> transforms;$/;"	v	typeref:typename:global s_sarray<s_transform,8192>
transparent	src/external/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
ttBYTE	src/external/stb_truetype.h	/^#define ttBYTE(/;"	d
ttCHAR	src/external/stb_truetype.h	/^#define ttCHAR(/;"	d
ttFixed	src/external/stb_truetype.h	/^#define ttFixed(/;"	d
ttLONG	src/external/stb_truetype.h	/^static stbtt_int32 ttLONG(stbtt_uint8 *p)    { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]/;"	f	typeref:typename:stbtt_int32
ttSHORT	src/external/stb_truetype.h	/^static stbtt_int16 ttSHORT(stbtt_uint8 *p)   { return p[0]*256 + p[1]; }$/;"	f	typeref:typename:stbtt_int16
ttULONG	src/external/stb_truetype.h	/^static stbtt_uint32 ttULONG(stbtt_uint8 *p)  { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]/;"	f	typeref:typename:stbtt_uint32
ttUSHORT	src/external/stb_truetype.h	/^static stbtt_uint16 ttUSHORT(stbtt_uint8 *p) { return p[0]*256 + p[1]; }$/;"	f	typeref:typename:stbtt_uint16
type	src/external/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon11d2a80f0d08	typeref:typename:stbi__uint32
type	src/external/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon11d2a80f1108	typeref:typename:stbi_uc
type	src/external/stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon6b1d216e0708	typeref:typename:unsigned char
ui	src/main.cpp	/^global s_ui ui;$/;"	v	typeref:typename:global s_ui
ui_button	src/ui.cpp	/^func s_ui_result ui_button(char* id_str, s_v2 pos, s_v2 in_size)$/;"	f	typeref:typename:func s_ui_result
ui_checkbox	src/ui.cpp	/^func s_ui_result ui_checkbox(char* id_str, s_v2 pos, s_v2 in_size)$/;"	f	typeref:typename:func s_ui_result
ui_get_layer_level	src/ui.cpp	/^func int ui_get_layer_level()$/;"	f	typeref:typename:func int
ui_input_box	src/ui.cpp	/^func s_ui_result ui_input_box(char* id_str, s_v2 pos, s_v2 in_size, char* default_input, s_ui_da/;"	f	typeref:typename:func s_ui_result
ui_label	src/ui.cpp	/^func s_ui_result ui_label(char* id_str, s_v2 pos)$/;"	f	typeref:typename:func s_ui_result
ui_pop_layer	src/ui.cpp	/^func void ui_pop_layer()$/;"	f	typeref:typename:func void
ui_push_layer	src/ui.cpp	/^func void ui_push_layer(b8 blocking)$/;"	f	typeref:typename:func void
ui_request_active	src/ui.cpp	/^func void ui_request_active(s_ui_id uid, b8 active_persists_across_frames)$/;"	f	typeref:typename:func void
ui_request_hovered	src/ui.cpp	/^func void ui_request_hovered(s_ui_id uid)$/;"	f	typeref:typename:func void
ui_request_pressed	src/ui.cpp	/^func void ui_request_pressed(s_ui_id uid)$/;"	f	typeref:typename:func void
ui_scoped_layer	src/ui.h	/^#define ui_scoped_layer() ui_scoped_layer_/;"	d
ui_scoped_layer_	src/ui.h	/^#define ui_scoped_layer_(a) ui_scoped_layer__/;"	d
ui_scoped_layer__	src/ui.h	/^#define ui_scoped_layer__(/;"	d
use_texture	src/shader_shared.h	/^	shader_bool use_texture;$/;"	m	struct:s_transform	typeref:typename:shader_bool
user_allocator_context	src/external/stb_truetype.h	/^   void *user_allocator_context;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
userdata	src/external/stb_truetype.h	/^   void           * userdata;$/;"	m	struct:stbtt_fontinfo	typeref:typename:void *
uv_max	src/main.h	/^	s_v2 uv_max;$/;"	m	struct:s_glyph	typeref:typename:s_v2
uv_max	src/shader_shared.h	/^	shader_v2 uv_max;$/;"	m	struct:s_transform	typeref:typename:shader_v2
uv_min	src/main.h	/^	s_v2 uv_min;$/;"	m	struct:s_glyph	typeref:typename:s_v2
uv_min	src/shader_shared.h	/^	shader_v2 uv_min;$/;"	m	struct:s_transform	typeref:typename:shader_v2
v	src/external/stb_image.h	/^      int h,v;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
v2_distance	src/math.h	/^func float v2_distance(s_v2 a, s_v2 b)$/;"	f	typeref:typename:func float
v2_distance_squared	src/math.h	/^func float v2_distance_squared(s_v2 a, s_v2 b)$/;"	f	typeref:typename:func float
v2_length	src/math.h	/^func float v2_length(s_v2 v)$/;"	f	typeref:typename:func float
v2_length_squared	src/math.h	/^func float v2_length_squared(s_v2 v)$/;"	f	typeref:typename:func float
v2_normalized	src/math.h	/^func s_v2 v2_normalized(s_v2 v)$/;"	f	typeref:typename:func s_v2
v2i	src/math.h	/^func s_v2i v2i(T v)$/;"	f	typeref:typename:func s_v2i
v2i	src/math.h	/^func s_v2i v2i(T x, T y)$/;"	f	typeref:typename:func s_v2i
v_oversample	src/external/stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon6b1d216e0508	typeref:typename:unsigned char
v_oversample	src/external/stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned int
validate_uint32	src/external/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (stbi__uint32)==4?1:-1]
value	src/external/stb_image.h	/^   stbi__uint16 value[STBI__ZNSYMS];$/;"	m	struct:__anon11d2a80f0b08	typeref:typename:stbi__uint16[]
value_arr	src/hashtable.h	/^	T value_arr[c_max_hashtable_elements];$/;"	m	struct:s_hashtable	typeref:typename:T[]
values	src/external/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon11d2a80f0708	typeref:typename:stbi_uc[256]
vs	src/external/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon11d2a80f0a08	typeref:typename:int
w	src/external/stb_image.h	/^   int w,h;$/;"	m	struct:__anon11d2a80f1308	typeref:typename:int
w	src/external/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
w	src/external/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon6b1d216e0808	typeref:typename:int
w2	src/external/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
w_lores	src/external/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon11d2a80f0a08	typeref:typename:int
was_packed	src/external/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
width	src/external/stb_truetype.h	/^   int   width;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
width	src/external/stb_truetype.h	/^   int width,height;$/;"	m	struct:__anon6b1d216e1108	typeref:typename:int
width	src/main.h	/^	int width;$/;"	m	struct:s_glyph	typeref:typename:int
window_proc	src/main.cpp	/^LRESULT window_proc(HWND window, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:LRESULT
x	src/external/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
x	src/external/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon6b1d216e0708	typeref:typename:stbtt_vertex_type
x	src/external/stb_truetype.h	/^   float x, y;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:float
x	src/external/stb_truetype.h	/^   float x,y;$/;"	m	struct:__anon6b1d216e1008	typeref:typename:float
x	src/external/stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
x	src/external/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon6b1d216e1108	typeref:typename:int
x	src/external/stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
x	src/external/stb_truetype.h	/^   unsigned char x;$/;"	m	struct:__anon6b1d216e1208	typeref:typename:unsigned char
x	src/math.h	/^	int x;$/;"	m	struct:s_v2i	typeref:typename:int
x0	src/external/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
x0	src/external/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon6b1d216e0308	typeref:typename:float
x0	src/external/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon6b1d216e0208	typeref:typename:unsigned short
x0	src/external/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon6b1d216e0408	typeref:typename:unsigned short
x0	src/main.h	/^	int x0;$/;"	m	struct:s_glyph	typeref:typename:int
x1	src/external/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
x1	src/external/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon6b1d216e0308	typeref:typename:float
x1	src/external/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon6b1d216e0208	typeref:typename:unsigned short
x1	src/external/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon6b1d216e0408	typeref:typename:unsigned short
x1	src/main.h	/^	int x1;$/;"	m	struct:s_glyph	typeref:typename:int
xadvance	src/external/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon6b1d216e0208	typeref:typename:float
xadvance	src/external/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon6b1d216e0408	typeref:typename:float
xoff	src/external/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon6b1d216e0208	typeref:typename:float
xoff	src/external/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon6b1d216e0408	typeref:typename:float
xoff2	src/external/stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon6b1d216e0408	typeref:typename:float
y	src/external/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon11d2a80f0808::__anon11d2a80f0908	typeref:typename:int
y	src/external/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon6b1d216e0708	typeref:typename:stbtt_vertex_type
y	src/external/stb_truetype.h	/^   float x, y;$/;"	m	struct:__anon6b1d216e0f08	typeref:typename:float
y	src/external/stb_truetype.h	/^   float x,y;$/;"	m	struct:__anon6b1d216e1008	typeref:typename:float
y	src/external/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon6b1d216e1108	typeref:typename:int
y	src/external/stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
y	src/math.h	/^	int y;$/;"	m	struct:s_v2i	typeref:typename:int
y0	src/external/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
y0	src/external/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon6b1d216e0308	typeref:typename:float
y0	src/external/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon6b1d216e0208	typeref:typename:unsigned short
y0	src/external/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon6b1d216e0408	typeref:typename:unsigned short
y0	src/main.h	/^	int y0;$/;"	m	struct:s_glyph	typeref:typename:int
y1	src/external/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
y1	src/external/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon6b1d216e0308	typeref:typename:float
y1	src/external/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon6b1d216e0208	typeref:typename:unsigned short
y1	src/external/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon6b1d216e0408	typeref:typename:unsigned short
y1	src/main.h	/^	int y1;$/;"	m	struct:s_glyph	typeref:typename:int
yoff	src/external/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon6b1d216e0208	typeref:typename:float
yoff	src/external/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon6b1d216e0408	typeref:typename:float
yoff2	src/external/stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon6b1d216e0408	typeref:typename:float
ypos	src/external/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon11d2a80f0a08	typeref:typename:int
ystep	src/external/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon11d2a80f0a08	typeref:typename:int
z_distance	src/external/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:stbi__zhuffman
z_expandable	src/external/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:int
z_length	src/external/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:stbi__zhuffman
zbuffer	src/external/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:stbi_uc *
zbuffer_end	src/external/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:stbi_uc *
zout	src/external/stb_image.h	/^   char *zout;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:char *
zout_end	src/external/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:char *
zout_start	src/external/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon11d2a80f0c08	typeref:typename:char *
~s_scoped_layer_destructor	src/ui.h	/^	~s_scoped_layer_destructor()$/;"	f	struct:s_scoped_layer_destructor
